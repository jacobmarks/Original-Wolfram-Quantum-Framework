(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    497572,      12080]
NotebookOptionsPosition[    482035,      11746]
NotebookOutlinePosition[    482615,      11767]
CellTagsIndexPosition[    482572,      11764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "QuantumComputing`", "\n", "   ", "Jacob", " ", "Austin", " ", "Marks", 
   "\[IndentingNewLine]", "  ", "Wolfram", " ", "Research"}], "\n", 
  "*)"}]], "Input",
 CellDingbat->None,
 CellChangeTimes->{{3.7112431771618967`*^9, 3.7112432416543627`*^9}, {
  3.7130599180603523`*^9, 
  3.713059921827227*^9}},ExpressionUUID->"dc9b2cdd-13f5-4cde-abee-\
af4d323826af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<QuantumComputing`\>\"", "]"}], 
  ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71119344544118*^9, 3.711193445442876*^9}, {
   3.7111935758969088`*^9, 3.71119358197393*^9}, {3.711193724272962*^9, 
   3.7111937837615433`*^9}, {3.7111942324929*^9, 3.711194232873934*^9}, {
   3.711194264277464*^9, 3.7111942960690937`*^9}, {3.7111945326747704`*^9, 
   3.711194533863912*^9}, {3.711194794402788*^9, 3.7111948241755123`*^9}, {
   3.7111948732002068`*^9, 3.7111948856569643`*^9}, {3.711195117865428*^9, 
   3.711195143663855*^9}, {3.711198852783217*^9, 3.711198863228898*^9}, {
   3.711199057616405*^9, 3.711199057966117*^9}, {3.7111995656484337`*^9, 
   3.7111995693923903`*^9}, 3.711199611375822*^9, {3.711199647287364*^9, 
   3.7111996545556297`*^9}, {3.7112001136732616`*^9, 3.71120011475924*^9}, {
   3.711201105731988*^9, 3.7112011064408216`*^9}, {3.711201177545103*^9, 
   3.711201177901832*^9}, {3.711203077872945*^9, 3.7112030931669607`*^9}, {
   3.711214119707698*^9, 3.7112141582915497`*^9}, 3.7112431596633873`*^9, {
   3.711244256821862*^9, 3.711244260995764*^9}, {3.711285497008274*^9, 
   3.711285501382182*^9}, {3.711397212435175*^9, 3.711397216331284*^9}, {
   3.7113976134407473`*^9, 3.711397614779649*^9}, {3.7114154788441343`*^9, 
   3.711415494207264*^9}, {3.711544664674857*^9, 3.71154469027597*^9}, {
   3.711544733314969*^9, 3.711544739073782*^9}, {3.711544820576893*^9, 
   3.711544842213991*^9}, {3.711544888880245*^9, 3.711544935842847*^9}, {
   3.711545048913875*^9, 3.711545094598609*^9}, {3.71154517082306*^9, 
   3.711545208731883*^9}, {3.71154525542529*^9, 3.711545403283863*^9}, 
   3.711545496270652*^9, {3.711545556569695*^9, 3.711545568336632*^9}, {
   3.711545658844892*^9, 3.7115457211922197`*^9}, {3.7115457632574167`*^9, 
   3.711545992155058*^9}, {3.711546175651061*^9, 3.711546198696273*^9}, {
   3.711546367395368*^9, 3.711546369166432*^9}, {3.711546643128674*^9, 
   3.711546682339615*^9}, {3.711546750311109*^9, 3.71154679181918*^9}, {
   3.7115470932716427`*^9, 3.711547192052308*^9}, {3.711547282701106*^9, 
   3.711547315384865*^9}, {3.711547407555133*^9, 3.71154744444681*^9}, {
   3.711547483649725*^9, 3.711547529839658*^9}, {3.711547592395959*^9, 
   3.711547604304677*^9}, {3.711547639210986*^9, 3.7115477098842373`*^9}, {
   3.711547746490939*^9, 3.711547894602139*^9}, {3.711547953360056*^9, 
   3.7115479716167107`*^9}, {3.7115480384668493`*^9, 3.711548040339731*^9}, {
   3.7115480830280247`*^9, 3.711548114492032*^9}, {3.7115485086740303`*^9, 
   3.711548533187901*^9}, {3.711548596686845*^9, 3.7115486596865473`*^9}, {
   3.711548695865452*^9, 3.711548767854805*^9}, {3.711548810828059*^9, 
   3.71154881645711*^9}, {3.711549100277008*^9, 3.7115491032830257`*^9}, {
   3.711549453420886*^9, 
   3.711549456409721*^9}},ExpressionUUID->"9314a701-30e1-4531-aab0-\
cc6bd4e4cd7f"],

Cell[CellGroupData[{

Cell["Usage Messages", "Section",
 CellChangeTimes->{{3.713453035956633*^9, 
  3.713453039115574*^9}},ExpressionUUID->"31494141-422d-4bc7-b5f5-\
f4af13d91c20"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "usage"}], "  ", "=", " ", "\n", 
    "\t\t", 
    RowBox[{"\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[RightArrow]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"c\", \"0\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"c\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"c\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields for quantum entity \!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)\>\"", "<>", "\n", "\t\t", 
     "\"\< the quantum state \!\(\*
StyleBox[SuperscriptBox[SubscriptBox[\"c\", \"0\"], \"'\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[TemplateBox[{\"0\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"+\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SuperscriptBox[SubscriptBox[\"c\", \"1\"], \"'\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[TemplateBox[{\"1\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"+\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SuperscriptBox[SubscriptBox[\"c\", \"n\"], \"'\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[TemplateBox[{\"n\"},
\"Ket\"],
FontSlant->\"Italic\"]\), where \!\(\*
StyleBox[SuperscriptBox[SubscriptBox[\"c\", \"i\"], \"'\"],
FontSlant->\"Italic\"]\) are the normalized\>\"", "<>", "\n", "\t\t", 
     "\"\< coefficients corresponding to \!\(\*
StyleBox[SubscriptBox[\"c\", \"i\"],
FontSlant->\"Italic\"]\), and \!\(\*
StyleBox[TemplateBox[{\"k\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)is the \!\(\*
StyleBox[SuperscriptBox[\"k\", \"th\"],
FontSlant->\"Italic\"]\) computational basis states.\\n\>\"", "<>", "\n", 
     "\t\t", "\n", "\t\t", "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"->\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"C\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\) yields for (potentially entangled) quantum \>\"", "<>",
      "\n", "\t\t", "\"\<entities \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\) and \!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)the normalized quantum state \!\(\*
StyleBox[UnderscriptBox[\"\[Sum]\", 
RowBox[{\"i\", \",\", \"j\"}]],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"C\", 
RowBox[{\"i\", \",\", \"j\"}]],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[TemplateBox[{RowBox[{\"i\", \",\", \"j\"}]},
\"Ket\"],
FontSlant->\"Italic\"]\)\>\"", "<>", "\n", "\t\t", "\"\< where \!\(\*
StyleBox[\"i\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)ranges from \!\(\*
StyleBox[\"0\",
FontSlant->\"Italic\"]\) to \!\(\*SubscriptBox[\(d\), \(1\)]\)\!\(\*
StyleBox[\"-\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"1\",
FontSlant->\"Italic\"]\) and \!\(\*
StyleBox[\"j\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)ranges from \!\(\*
StyleBox[\"0\",
FontSlant->\"Italic\"]\) to \!\(\*SubscriptBox[\(d\), \(2\)]\)\!\(\*
StyleBox[\"-\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"1\",
FontSlant->\"Italic\"]\), \>\"", "<>", "\n", "\t\t", 
     "\"\< with \!\(\*SubscriptBox[\(d\), \(k\)]\) being the dimension of \
wire \!\(\*
StyleBox[\"k\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState[{\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \!\(\*SubscriptBox[\(d\), \
\(1\)]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \!\(\*SubscriptBox[\(d\), \
\(n\)]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] {\\\"BasisState\\\", {\!\(\*
StyleBox[SubscriptBox[\"l\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"l\", \"n\"],
FontSlant->\"Italic\"]\)}}] yields the\>\"", "<>", "\n", "\t\t", 
     "\"\< computational basis state \!\(\*
StyleBox[TemplateBox[{StyleBox[
RowBox[{
SubscriptBox[\"l\", \"1\"], \",\", \" \", \"...\", \",\", \" \", 
SubscriptBox[\"l\", \"n\"]}], FontSlant -> \"Italic\"]},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)for quantum entities \!\(\*
StyleBox[SubscriptBox[\"w\", \"i\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)with dimensions \!\(\*SubscriptBox[\(d\), \
\(i\)]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\>\"", "<>", "\n", "\t\t", 
     "\"\< If no dimension is specified for \!\(\*
StyleBox[SubscriptBox[\"w\", \"i\"],
FontSlant->\"Italic\"]\), then \!\(\*SubscriptBox[\(d\), \(i\)]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"=\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"2\",
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"->\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\\\"Plus\\\"\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\) yields the state \!\(\*
StyleBox[TemplateBox[{\"+\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"=\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*FractionBox[
StyleBox[
RowBox[{TemplateBox[{\"0\"},
\"Ket\"], \" \", \"+\", \" \", TemplateBox[{\"1\"},
\"Ket\"]}],
FontSlant->\"Italic\"], SqrtBox[\"2\"]]\). \>\"", "<>", "\n", "\t\t", 
     "\"\<\\\"Minus\\\" yields \!\(\*FractionBox[
StyleBox[
RowBox[{TemplateBox[{\"0\"},
\"Ket\"], \" \", \"-\", \" \", TemplateBox[{\"1\"},
\"Ket\"]}],
FontSlant->\"Italic\"], SqrtBox[\"2\"]]\).\\n\>\"", "<>", "\n", "\t\t", "\n", 
     "\t\t", "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"->\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\\\"PhiPlus\\\"\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\) yields for \!\(\*SubscriptBox[\(\[CapitalPhi]\), \(+\
\)]\) Bell State for \>\"", "<>", "\n", "\t\t", "\"\<quantum entities \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\) and \!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)The same format holds for \!\(\*SubscriptBox[\(\
\[CapitalPhi]\), \(-\)]\), \!\(\*SubscriptBox[\(\[CapitalPsi]\), \(+\)]\), \
and \!\(\*SubscriptBox[\(\[CapitalPsi]\), \(-\)]\).\\n\>\"", "<>", "\n", 
     "\t\t", "\n", "\t\t", "\"\<QuantumDiscreteState[\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \\\"GHZ\\\"] yields an entangled GHZ \
state for \>\"", "<>", "\n", "\t\t", "\"\<quantum entities \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"n\"],
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState[\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \\\"W\\\"] yields an entangled W state \
for \>\"", "<>", "\n", "\t\t", "\"\<quantum entities \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"n\"],
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[RightArrow]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[\(spec\), \(1\)]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[RightArrow]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[\(spec\), \(2\)]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[RightArrow]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[\(spec\), \(n\)]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the tensor product state of\>\"", "<>", "\n", 
     "\t\t", "\"\< the states corresponding to \!\(\*SubscriptBox[\(spec\), \
\(1\)]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[\(spec\), \(n\)]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\\\"Mixture\\\", <|{\!\(\*
StyleBox[SubscriptBox[\"state\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \!\(\*
StyleBox[SubscriptBox[\"p\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"state\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[RightArrow] \!\(\*
StyleBox[SubscriptBox[\"p\", \"n\"],
FontSlant->\"Italic\"]\)}|>]\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the mixed state\>\"", "<>", "\n", "\t\t", 
     "\"\< with probability \!\(\*
StyleBox[SubscriptBox[\"p\", \"i\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)of being in \!\(\*
StyleBox[SubscriptBox[\"state\", \"i\"],
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\\\"Mixture\\\", \!\(\*
StyleBox[\"(\",
FontSlant->\"Italic\"]\)states \[RightArrow] probs)]\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the mixed state\>\"", "<>", "\n", "\t\t", 
     "\"\< with probability \!\(\*
StyleBox[SubscriptBox[\"p\", \"i\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)of being in \!\(\*
StyleBox[SubscriptBox[\"state\", \"i\"],
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\\\"Product\\\", {\!\(\*
StyleBox[SubscriptBox[\"state\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"state\", \"n\"],
FontSlant->\"Italic\"]\)}]\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the tensor product state\>\"", "<>", "\n", 
     "\t\t", "\"\< of QuantumStates \!\(\*
StyleBox[SubscriptBox[\"state\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"state\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)ordered by the states' wire names.\\n\>\"", "<>", 
     "\n", "\t\t", "\n", "\t\t", "\"\<QuantumDiscreteState\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\\\"Trace\\\", {q\!\(\*
StyleBox[\"state\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"wires\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)]\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the reduced state of \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\) after\>\"", "<>", "\n", "\t\t", 
     "\"\< tracing out \!\(\*
StyleBox[\"wires\",
FontSlant->\"Italic\"]\).\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
     "\"\<QuantumDiscreteState[...][\\\"Purity\\\"] yields the purity of the \
\>\"", "<>", "\n", "\t\t", "\"\<quantum state, defined as \!\(\*
StyleBox[\"Tr\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[Rho]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\[Rho]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\), where \!\(\*
StyleBox[\"\[Rho]\",
FontSlant->\"Italic\"]\) is \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)'s density matrix.\>\"", "<>", "\n", "\t\t", "\n", 
     "\t\t", "\"\<QuantumDiscreteState[...][\\\"VonNeumannEntropy\\\"] yields \
the Von Neumann Entropy of the \>\"", "<>", "\n", "\t\t", 
     "\"\<quantum state, \!\(\*
StyleBox[\"-\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[UnderscriptBox[\"\[Sum]\", \"j\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"\[Eta]\", \"j\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"Log\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"\[Eta]\", \"j\"],
FontSlant->\"Italic\"]\), where \!\(\*
StyleBox[SubscriptBox[\"\[Eta]\", \"j\"],
FontSlant->\"Italic\"]\) are the eigenvalues of \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\>\""}]}], ";"}]}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.71154676396502*^9, {3.711548890644932*^9, 3.711548911312134*^9}, {
   3.711548942033123*^9, 3.711549288057886*^9}, {3.7115493494455147`*^9, 
   3.71154942126583*^9}, {3.711549461490439*^9, 3.711549517921281*^9}, {
   3.711549552444983*^9, 3.71154956847676*^9}, {3.7115496420682373`*^9, 
   3.711549644689159*^9}, {3.711549694408784*^9, 3.711549731600031*^9}, {
   3.711549763150182*^9, 3.7115498147052097`*^9}, {3.7115498551315527`*^9, 
   3.711549871518553*^9}, {3.711549901552663*^9, 3.71155004573468*^9}, {
   3.711550539194005*^9, 3.7115505692602158`*^9}, {3.711550603419161*^9, 
   3.711550632282048*^9}, {3.711550688709874*^9, 3.711550723283743*^9}, {
   3.711550753651679*^9, 3.711550830563078*^9}, {3.711550862980351*^9, 
   3.711550997674831*^9}, {3.711551041740377*^9, 3.7115511772710733`*^9}, {
   3.7115512154335747`*^9, 3.711551321451312*^9}, {3.7115515081097507`*^9, 
   3.711551546186554*^9}, {3.711551580122512*^9, 3.711551614404709*^9}, {
   3.711551651081468*^9, 3.711551679206287*^9}, {3.711551785336689*^9, 
   3.711551845505568*^9}, {3.71155187626073*^9, 3.7115519232470703`*^9}, {
   3.711552122814221*^9, 3.711552558396017*^9}, {3.711552597719536*^9, 
   3.711552598211199*^9}, {3.711552676486135*^9, 3.711552843974287*^9}, {
   3.711553810687207*^9, 3.711553978089416*^9}, {3.711554034595523*^9, 
   3.711554168648452*^9}, {3.711554224922639*^9, 3.711554303642846*^9}, {
   3.71157922499955*^9, 3.711579337251405*^9}, {3.711579796755659*^9, 
   3.711579845283986*^9}, {3.712682450269692*^9, 3.712682507626157*^9}, {
   3.712684241744431*^9, 3.712684253744548*^9}, {3.7126842971921787`*^9, 
   3.7126843022627983`*^9}, {3.712684333128539*^9, 3.712684353530363*^9}, {
   3.71268439569309*^9, 3.712684500506007*^9}, {3.7134072672870817`*^9, 
   3.7134072730782547`*^9}, {3.7144737029882593`*^9, 3.714473704640121*^9}, {
   3.7149601367719707`*^9, 3.71496013812424*^9}, {3.7153043428210373`*^9, 
   3.715304343625532*^9}, {3.715304404388626*^9, 3.715304420880177*^9}, {
   3.71530453974299*^9, 3.715304615380378*^9}, {3.715304663851831*^9, 
   3.715304701973113*^9}, {3.715304754770204*^9, 3.715304873416103*^9}, {
   3.715305335727345*^9, 3.715305402714695*^9}, {3.7153097663591423`*^9, 
   3.71530976784359*^9}, {3.715476786698398*^9, 3.7154767896766577`*^9}, {
   3.7154773958509407`*^9, 3.715477397652936*^9}, {3.715564902819066*^9, 
   3.715564953868311*^9}, {3.715565002902664*^9, 3.715565034487105*^9}, {
   3.7157993532407227`*^9, 3.715799359675495*^9}, {3.71599899584087*^9, 
   3.715999096391346*^9}, 3.716830955208522*^9, 3.716831164183536*^9, 
   3.717897185934662*^9, 3.718498615232132*^9, 3.71857118257442*^9, 
   3.718571268091476*^9, 
   3.718640701366721*^9},ExpressionUUID->"46e849d5-9343-4ddb-ac93-\
c326f2674c5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteStateQ", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscreteStateQ[\!\(\*
StyleBox[\"qs\",
FontSlant->\"Italic\"]\)] yields true if qs is a valid QuantumDiscreteState\>\
\"", "<>", "\n", "\t", "\"\< and false otherwise.\>\""}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
   3.715564254416102*^9, 3.7155643060335712`*^9}, 3.7155659257439213`*^9, {
   3.716822931295974*^9, 3.7168229327073317`*^9}, 3.7178972080316067`*^9, 
   3.718498295621896*^9},ExpressionUUID->"92f9e5a9-5d6d-4c38-a900-\
158485a80c48"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscreteOperation[\!\(\*
StyleBox[\"U\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)] yields the quantum operation\>\"", "<>", "\n", 
     "\t", "\"\< of the unitary matrix \!\(\*
StyleBox[\"U\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)on \!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[\\\"Gate\\\", \!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"2\"]\), ...}] yields the quantum operation \
specified by \\\"Gate\\\"\>\"", "<>", "\n", "\t", 
     "\"\< on \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"2\"]\), ..\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)Possible gates include CNOT, Hadamard, S, T, Fourier, \
PauliYGate, SWAP, Toffoli, etc..\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[\\\"PauliXGate\\\", {\!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)}, \\\"QuditDimension\\\" -> D, \\\"Power\\\" -> k] \
yields the \!\(\*SuperscriptBox[\(k\), \(th\)]\) power of\>\"", "<>", "\n", 
     "\t", "\"\< of \!\(\*
StyleBox[\"PauliX\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)in the qudit stabilizer group of dimension D\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"PauliZGate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)and\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"Fourier\",
FontSlant->\"Italic\"]\)\>\"", 
     StyleBox["<>",
      FontSlant->"Italic"], 
     StyleBox["\n",
      FontSlant->"Italic"], 
     StyleBox["\t",
      FontSlant->"Italic"], "\"\<\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\) follow the same syntax.\\n\>\"", "<>", "\n", "\t", 
     "\n", "\t", 
     "\"\<QuantumDiscreteOperation[{\\\"Rz\\\", \[Theta]} -> {\!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)] yields the operator representing a rotation of \
\[Theta] degrees\>\"", "<>", "\n", "\t", 
     "\"\< about the Z-axis. Rx, Ry, and Deutsch (deutsch's gate) follow the \
same syntax.\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[...][\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)] yields the quantum state resulting from\>\"", "<>", 
     "\n", "\t", "\"\< the action of the quantum operation on \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\\\\n\",
FontSlant->\"Italic\"]\)\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[{\!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"w\", \"2\"],
FontSlant->\"Italic\"]\)} \[RightArrow] {\\\"Control\\\", \!\(\*
StyleBox[\"U\",
FontSlant->\"Italic\"]\)}, \\\"QuditDimension\\\" -> d] yields the \
Controlled-unitary operation\>\"", "<>", "\n", "\t", "\"\< with \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)as control and unitary matrix \!\(\*
StyleBox[\"U\",
FontSlant->\"Italic\"]\) acting on \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"2\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)when \!\(\*
StyleBox[SubscriptBox[\"w\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)takes on the value \!\(\*
StyleBox[TemplateBox[{\"d\"},
\"Ket\"],
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[{cond1 \[RightArrow] op1, cond2 \
\[RightArrow] op2, ...}, ws][qmeas] yields \!\(\*SubscriptBox[\(op\), \
\(i\)]\), where \!\(\*SubscriptBox[
StyleBox[\"cond\",
FontSlant->\"Italic\"], \"i\"]\) is\>\"", "<>", "\n", "\t", 
     "\"\< the first condition satisfied by the result value from \
RandomVariate[qmeas, 1]. If no conditions are satisfied\>\"", "<>", "\n", 
     "\t", "\"\< or no measurement directly precedes this, \
\!\(\*SubscriptBox[\(op\), \(1\)]\) is chosen.\>\""}]}], ";"}], 
  "\n"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
   3.711891487871189*^9, 3.711891530711975*^9}, {3.711891570138028*^9, 
   3.711891637291937*^9}, {3.712680586952177*^9, 3.7126806267916203`*^9}, {
   3.712680667836328*^9, 3.712680703648484*^9}, {3.7126807534985027`*^9, 
   3.712680885310842*^9}, {3.712681064333036*^9, 3.71268108105716*^9}, {
   3.712681124019374*^9, 3.7126814851227417`*^9}, {3.712681533127448*^9, 
   3.7126817014280663`*^9}, {3.712681762692822*^9, 3.712681769627247*^9}, {
   3.712681843539022*^9, 3.712681853879846*^9}, {3.712681885380198*^9, 
   3.712681886195574*^9}, {3.712681952918304*^9, 3.7126823739887667`*^9}, {
   3.71340730967739*^9, 3.713407376786477*^9}, {3.713407522234288*^9, 
   3.713407533695148*^9}, {3.713407573643456*^9, 3.7134077809495487`*^9}, {
   3.713451767437242*^9, 3.7134518682188807`*^9}, {3.7134519634476547`*^9, 
   3.71345210641341*^9}, {3.715304966667018*^9, 3.715305078141429*^9}, {
   3.715305141855488*^9, 3.715305208876573*^9}, {3.715305251730363*^9, 
   3.715305270306903*^9}, {3.715305667281528*^9, 3.715305718114421*^9}, 
   3.715799224636484*^9, {3.715998488341509*^9, 3.715998886040616*^9}, {
   3.715998916828032*^9, 3.715998937701404*^9}, {3.716822986196177*^9, 
   3.716822986943927*^9}, {3.716832915860549*^9, 3.7168329173206463`*^9}, {
   3.716877554142325*^9, 3.716877576819415*^9}, 3.716906581537912*^9, {
   3.716913800468998*^9, 3.716913857608062*^9}, {3.7169138886155653`*^9, 
   3.716913927183475*^9}, {3.716922130631385*^9, 3.716922227580729*^9}, 
   3.717897211244804*^9, 
   3.718498512186483*^9},ExpressionUUID->"3b5772a6-e1dc-46de-9325-\
6690d122490f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteConditionalOperation", "::", "usage"}], " ", "=", 
    " ", "\n", "\t", 
    RowBox[{
    "\"\<QuantumDiscreteConditionalOperation[{cond1 \[RightArrow] op1, cond2 \
\[RightArrow] op2, ...}, ws][qmeas] yields \!\(\*SubscriptBox[\(op\), \
\(i\)]\), where \!\(\*SubscriptBox[
StyleBox[\"cond\",
FontSlant->\"Italic\"], \"i\"]\) is\>\"", "<>", "\n", "\t", 
     "\"\< the first condition satisfied by the result value from \
RandomVariate[qmeas, 1]. If no conditions are satisfied\>\"", "<>", "\n", 
     "\t", "\"\< or no measurement directly precedes this, \
\!\(\*SubscriptBox[\(op\), \(1\)]\) is chosen.\>\""}]}], ";"}], 
  "\n"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
   3.711891487871189*^9, 3.711891530711975*^9}, {3.711891570138028*^9, 
   3.711891637291937*^9}, {3.712680586952177*^9, 3.7126806267916203`*^9}, {
   3.712680667836328*^9, 3.712680703648484*^9}, {3.7126807534985027`*^9, 
   3.712680885310842*^9}, {3.712681064333036*^9, 3.71268108105716*^9}, {
   3.712681124019374*^9, 3.7126814851227417`*^9}, {3.712681533127448*^9, 
   3.7126817014280663`*^9}, {3.712681762692822*^9, 3.712681769627247*^9}, {
   3.712681843539022*^9, 3.712681853879846*^9}, {3.712681885380198*^9, 
   3.712681886195574*^9}, {3.712681952918304*^9, 3.7126823739887667`*^9}, {
   3.71340730967739*^9, 3.713407376786477*^9}, {3.713407522234288*^9, 
   3.713407533695148*^9}, {3.713407573643456*^9, 3.7134077809495487`*^9}, {
   3.713451767437242*^9, 3.7134518682188807`*^9}, {3.7134519634476547`*^9, 
   3.71345210641341*^9}, {3.715304966667018*^9, 3.715305078141429*^9}, {
   3.715305141855488*^9, 3.715305208876573*^9}, {3.715305251730363*^9, 
   3.715305270306903*^9}, {3.715305667281528*^9, 3.715305718114421*^9}, 
   3.715799224636484*^9, {3.715998488341509*^9, 3.715998886040616*^9}, {
   3.715998916828032*^9, 3.715998937701404*^9}, {3.716822986196177*^9, 
   3.716822986943927*^9}, {3.716832915860549*^9, 3.7168329173206463`*^9}, {
   3.716877554142325*^9, 3.716877576819415*^9}, 3.716906581537912*^9, {
   3.716913800468998*^9, 3.716913857608062*^9}, {3.7169138886155653`*^9, 
   3.716913927183475*^9}, {3.716922130631385*^9, 3.716922227580729*^9}, 
   3.717897211244804*^9, {3.718416555424865*^9, 3.718416577988299*^9}, 
   3.718498529299424*^9},ExpressionUUID->"d0fb2b1c-482b-4ade-8494-\
ae2a070d2204"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperationQ", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscreteOperationQ[\!\(\*
StyleBox[\"qop\",
FontSlant->\"Italic\"]\)] yields true if qop is a valid\>\"", "<>", "\n", 
     "\t", "\"\< QuantumDiscreteOperation and false otherwise.\>\""}]}], 
   ";"}], " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
   3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
   3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, 
   3.717897122122983*^9, 
   3.718498531718273*^9},ExpressionUUID->"c78bdec9-f064-44d8-91d1-\
7de3623ffa2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteConditionalOperationQ", "::", "usage"}], " ", "=",
     " ", 
    RowBox[{"\"\<QuantumDiscreteConditionalOperationQ[\!\(\*
StyleBox[\"qop\",
FontSlant->\"Italic\"]\)] yields true if qop is a valid\>\"", "<>", "\n", 
     "\t", "\"\< QuantumDiscreteOperation and false otherwise.\>\""}]}], 
   ";"}], " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
   3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
   3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, 
   3.717897122122983*^9, {3.7184163948747387`*^9, 
   3.7184164045774193`*^9}},ExpressionUUID->"f8a472ed-726e-4833-941f-\
da4642a09f32"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteMeasurement", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumDiscreteMeasurement\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"ws\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the unevaluated measurement of \>\"", "<>", 
    "\n", "\t", "\"\<wires \!\(\*
StyleBox[\"w\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)of QuantumDiscreteState qstate in the computational \
basis.\\n\>\"", "<>", "\n", "\n", "\t", "\"\<QuantumDiscreteMeasurement\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"2\"]\), \!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[Rule] \!\(\*
StyleBox[\"povm\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the unevaluated measurement of wires\>\"", "<>",
     "\n", "\t", "\"\< \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"2\"]\), \!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)of QuantumDiscreteState qstate where the measurement \
operators are described by a QuantumDiscretePOVM \!\(\*
StyleBox[\"povm\",
FontSlant->\"Italic\"]\).\\n\>\"", "<>", "\n", "\n", "\t", 
    "\"\<QuantumDiscreteMeasurement\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"1\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[Rule] \!\(\*SubscriptBox[
StyleBox[\"obs\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"2\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[Rule] \!\(\*SubscriptBox[
StyleBox[\"obs\",
FontSlant->\"Italic\"], \"2\"]\), ...}\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the unevaluated measurement on \>\"", "<>", 
    "\n", "\t", "\"\<QuantumDiscreteState \!\(\*
StyleBox[\"state\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"ws\",
FontSlant->\"Italic\"], \"2\"]\), \!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)of state qstate where the measurements results are \>\
\"", "<>", "\n", "\t", 
    "\"\<projections of the state onto eigenvectors of \!\(\*SubscriptBox[
StyleBox[\"obs\",
FontSlant->\"Italic\"], \"1\"]\), \!\(\*SubscriptBox[
StyleBox[\"obs\",
FontSlant->\"Italic\"], \"2\"]\), ... QuantumDiscreteObservables. \\n\>\"", "<>",
     "\n", "\n", "\t", "\"\<QuantumDiscreteMeasurement[\!\(\*
StyleBox[\"specs\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)][\\\"ProbabilityDistribution\\\"] yields an \
association \>\"", "<>", "\n", "\t", 
    "\"\<<| \!\(\*SubscriptBox[\(state\), \(i\)]\) \[Rule] \
\!\(\*SubscriptBox[\(prob\), \(i\)]\)|> containing the potential outcomes of \
the measurement and their probabilities.\\n\>\"", "<>", "\n", "\t", "\n", 
    "\t", "\"\<QuantumDiscreteMeasurement[\!\(\*
StyleBox[\"specs\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)][\\\"Collapse\\\"] collapses \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)down to \!\(\*SubscriptBox[\(state\), \(i\)]\) with \
\>\"", "<>", "\n", "\t", 
    "\"\<probability \!\(\*SubscriptBox[\(prob\), \(i\)]\) from the \
measurement's probability distribution.\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
   3.7115796221645927`*^9, 3.711579626617807*^9}, {3.713407885786665*^9, 
   3.7134080746153097`*^9}, {3.7134081087067623`*^9, 3.71340811079492*^9}, {
   3.713408144402883*^9, 3.7134088492266293`*^9}, {3.713408960273176*^9, 
   3.713409220551799*^9}, {3.716832844577894*^9, 3.716832863251226*^9}, {
   3.717088920559784*^9, 3.7170889417200117`*^9}, {3.717115264693746*^9, 
   3.717115284980665*^9}, {3.717115316734956*^9, 3.7171156696153717`*^9}, {
   3.7171157005078573`*^9, 3.7171158077793617`*^9}, {3.717115847119681*^9, 
   3.717116322499295*^9}, 
   3.7178971401719303`*^9},ExpressionUUID->"5a10b76f-e31c-4562-a6ed-\
c6c92f02ab88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteObservable", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscreteObservable[\!\(\*
StyleBox[\"desc\",
FontSlant->\"Italic\"]\)] represents the observable corresponding \>\"", "<>",
      "\n", "\t", "\"\<to the Hermitean matrix \!\(\*
StyleBox[\"desc\",
FontSlant->\"Italic\"]\).\>\""}]}], ";"}], " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
  3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
  3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, {
  3.716833000090301*^9, 3.716833033871891*^9}, {3.717116330399605*^9, 
  3.717116437868032*^9}},ExpressionUUID->"627dc694-7b98-4075-a4b9-\
e7155b2f86d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteObservableQ", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscreteObservableQ[\!\(\*
StyleBox[\"obs\",
FontSlant->\"Italic\"]\)] yields true if obs is a valid\>\"", "<>", "\n", 
     "\t", "\"\< QuantumDiscreteObservable and false otherwise.\>\""}]}], 
   ";"}], " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
  3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
  3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, {
  3.716832953182703*^9, 3.716832979804737*^9}, {3.7168330452418118`*^9, 
  3.716833076439742*^9}},ExpressionUUID->"4c4ac0a2-6513-43a1-b0a3-\
34d91d064af3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscretePOVM", "::", "usage"}], " ", "=", " ", 
   RowBox[{
   "\"\<QuantumDiscretePOVMQ[{\!\(\*SubscriptBox[\(M\), \(1\)]\), \
\!\(\*SubscriptBox[\(M\), \(2\)]\), ...}] represents the \>\"", "<>", "\n", 
    "\t", "\"\<Positive Operator Valued Measure given by \
\!\(\*SubscriptBox[\(F\), \(i\)]\) = \!\(\*SubsuperscriptBox[\(M\), \(i\), \(\
\[Dagger]\)]\)\!\(\*SubscriptBox[\(M\), \(i\)]\), where \!\(\*UnderscriptBox[\
\(\[Sum]\), \(i\)]\)\!\(\*SubscriptBox[\(F\), \(i\)]\) = \[DoubleStruckOne]\>\
\""}]}], ";"}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
  3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
  3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, {
  3.716832953182703*^9, 3.716832979804737*^9}, {3.7168330452418118`*^9, 
  3.716833076439742*^9}, {3.716853439177988*^9, 3.716853472943474*^9}, {
  3.717116571079392*^9, 
  3.717116772532415*^9}},ExpressionUUID->"47c00142-a1f0-4f80-bebd-\
d8abdf5c0ef4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscretePOVMQ", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumDiscretePOVMQ[\!\(\*
StyleBox[\"desc\",
FontSlant->\"Italic\"]\)] yields true if \!\(\*
StyleBox[\"desc\",
FontSlant->\"Italic\"]\) forms a valid\>\"", "<>", "\n", "\t", 
     "\"\< QuantumDiscretePOVM and false otherwise.\>\""}]}], ";"}], 
  " "}]], "Code",
 CellChangeTimes->{{3.715488554870331*^9, 3.7154885684451113`*^9}, {
  3.715564254416102*^9, 3.7155643060335712`*^9}, {3.7155659146977043`*^9, 
  3.715566002341445*^9}, {3.71682293702975*^9, 3.7168229378131943`*^9}, {
  3.716832953182703*^9, 3.716832979804737*^9}, {3.7168330452418118`*^9, 
  3.716833076439742*^9}, {3.7168534608639517`*^9, 3.716853496935302*^9}, {
  3.717116789583761*^9, 
  3.7171167938220053`*^9}},ExpressionUUID->"e5b95c6f-c5f2-41f0-9a83-\
31ec3fd7d643"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qop\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qop\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qop\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the quantum circuit\>\"", "<>", "\n", "\t\t", 
    "\"\< which composes the quantum operations \!\(\*
StyleBox[SubscriptBox[\"qop\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qop\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qop\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{"Have", " ", "not", " ", "implemented", " ", 
      RowBox[{
       RowBox[{"yet", "!!"}], "!"}]}], " ", "*)"}], "\t\t", "\n", "\t\t", 
    "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"bf\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields a quantum circuit representation of the \
boolean function\>\"", "<>", "\n", "\t\t", "\"\< \!\(\*
StyleBox[\"bf\",
FontSlant->\"Italic\"]\), expressed in terms of the fault-tolerant Clifford + \
T gate set.\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
    "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"}\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the concatenation of\>\"", "<>", "\n", "\t\t", 
    "\"\< quantum circuits \!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"1\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"2\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"...\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[\"qcirc\", \"n\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
    "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"opsA\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"+\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"opsB\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields\>\"", "<>", "\n", "\t\t", 
    "\"\< QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"Join\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"opsA\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"opsB\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
    "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"ops\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"^\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"Flatten\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"ConstantArray\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"ops\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"n\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", 
    "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)..., \\\"Simplify\\\" \[RightArrow] \
\\\"True\\\"\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)yields the quantum circuit with\>\"", "<>", "\n", 
    "\t\t", "\"\< all internal simplification rules applied. Other option \
values include\>\"", "<>", "\n", "\t\t", 
    "\"\< \\\"False\\\", \\\"Paulis\\\", \\\"CNOTs\\\", and user-defined \
rules.\\n\>\"", "<>", "\n", "\t\t", "\n", "\t\t", "\"\<QuantumCircuit\!\(\*
StyleBox[\"[\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qops\",
FontSlant->\"Italic\"]\)][qstate] yields the quantum state resulting from the \
action\>\"", "<>", "\n", "\t\t", "\"\< of \!\(\*
StyleBox[\"qops\",
FontSlant->\"Italic\"]\) on \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\).\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.7115796098381853`*^9}, {
  3.711890003658392*^9, 3.711890144418057*^9}, {3.711890214660652*^9, 
  3.711890238135406*^9}, {3.711890273745804*^9, 3.711890382317025*^9}, {
  3.7118905068695498`*^9, 3.711890683716668*^9}, {3.711890781672526*^9, 
  3.711890816005213*^9}, {3.711890903249311*^9, 3.711891138221507*^9}, {
  3.711891175611291*^9, 3.711891391576888*^9}, {3.712680054724558*^9, 
  3.712680127159491*^9}, {3.712680160060972*^9, 3.712680216959567*^9}, {
  3.7126802789337797`*^9, 3.712680364877673*^9}, {3.7126804010568237`*^9, 
  3.7126804909798193`*^9}, {3.713452131328389*^9, 3.713452152266117*^9}, {
  3.7134531182373123`*^9, 
  3.713453140776775*^9}},ExpressionUUID->"88d9f1e7-f8de-4971-9c5c-\
bca0f67a8136"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPartialTr", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumPartialTr[\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"ws\",
FontSlant->\"Italic\"]\)] yields the quantum state \>\"", "<>", "\n", "\t", 
    "\"\<formed by tracing out \!\(\*
StyleBox[\"ws\",
FontSlant->\"Italic\"]\) subsystems from \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711893050862672*^9, 3.711893057027567*^9}, {
  3.713289978785367*^9, 3.713289979663992*^9}, {3.713407150404929*^9, 
  3.7134072565040283`*^9}, {3.714472090005269*^9, 3.7144720901693087`*^9}, {
  3.716822840131246*^9, 3.716822844291336*^9}, {3.71711681936228*^9, 
  3.7171168229663963`*^9}},ExpressionUUID->"016ab26f-196a-434f-97e5-\
9f1bbf337280"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPlot", "::", "usage"}], " ", "=", " ", 
    RowBox[{"\"\<QuantumPlot[\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)] yields a discrete plot of the amplitudes \>\"", "<>",
      "\n", "\t", "\"\<for each state vector entry \!\(\*
StyleBox[TemplateBox[{\"i\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)or density matrix entry \!\(\*
StyleBox[TemplateBox[{\"i\"},
\"Ket\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[TemplateBox[{\"j\"},
\"Bra\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Italic\"]\)\>\""}]}], ";"}], " "}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
  3.7115796314965754`*^9, 3.7115796337522383`*^9}, {3.711883896441687*^9, 
  3.711884015246984*^9}, {3.7144721506849823`*^9, 3.7144721512321672`*^9}, {
  3.716831511895184*^9, 3.7168315408899183`*^9}, {3.717116842313916*^9, 
  3.717116851653782*^9}},ExpressionUUID->"d0a3ba15-a06b-459f-89fa-\
eb2c12410666"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledStateQ", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumEntangledStateQ[\!\(\*
StyleBox[\(q\*
StyleBox[\"state\",
FontSlant->\"Italic\"]\)]\)] for any two-qubit state \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)returns True if\>\"", "<>", "\n", "\t", 
    "\"\< the two qubits are entangled and False otherwise.\\n\>\"", "<>", 
    "\n", "\t", "\n", "\t", "\"\<QuantumEntangledStateQ[q\!\(\*
StyleBox[\"state\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"i\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"j\"]\), ...}] for the pure quantum state \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)returns True if \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)is\>\"", "<>", "\n", "\t", 
    "\"\< entangled across the bipartition of which the subsystem \!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"i\"]\), \!\(\*SubscriptBox[
StyleBox[\"w\",
FontSlant->\"Italic\"], \"j\"]\), ...} defines one side, and False otherwise.\
\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
  3.7115796314965754`*^9, 3.7115796337522383`*^9}, {3.711579740469429*^9, 
  3.711579772620716*^9}, {3.713034687341176*^9, 3.7130346876692667`*^9}, {
  3.713034753827436*^9, 3.713034754121935*^9}, {3.713289987339319*^9, 
  3.713289988618635*^9}, {3.7134522735405703`*^9, 3.713452391216652*^9}, {
  3.713452493694026*^9, 3.713452528293437*^9}, {3.713452717054536*^9, 
  3.713452896259804*^9}, {3.713452947052318*^9, 
  3.713452994992443*^9}},ExpressionUUID->"d438232e-da9d-43c3-ad52-\
696251d98277"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPureStateQ", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumPureStateQ[\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)returns True if Tr[\!\(\*SuperscriptBox[\(\[Rho]\), \
\(2\)]\)] == 1, and False\>\"", "<>", "\n", "\t", 
    "\"\< otherwise, where \[Rho] is the density matrix of \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Plain\"]\)\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
  3.7115796314965754`*^9, 3.7115796337522383`*^9}, {3.711579740469429*^9, 
  3.711579772620716*^9}, {3.713034462710875*^9, 3.7130345273817263`*^9}, {
  3.713034575010339*^9, 3.713034667900948*^9}, {3.713289995643661*^9, 
  3.713290006642908*^9}},ExpressionUUID->"d160aaa6-efe5-4958-a76a-\
66ea2044340f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMixedStateQ", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumMixedStateQ[\!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"]\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)returns True if Tr[\!\(\*SuperscriptBox[\(\[Rho]\), \
\(2\)]\)] < 1, and False\>\"", "<>", "\n", "\t", 
    "\"\< otherwise, where \[Rho] is the density matrix of \!\(\*
StyleBox[\"qstate\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontSlant->\"Plain\"]\)\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71157957552595*^9, 3.711579590497245*^9}, {
  3.7115796314965754`*^9, 3.7115796337522383`*^9}, {3.711579740469429*^9, 
  3.711579772620716*^9}, {3.713034462710875*^9, 3.7130345273817263`*^9}, {
  3.713034575010339*^9, 3.713034667900948*^9}, {3.7130347043388*^9, 
  3.713034723093081*^9}, {3.713290018931199*^9, 
  3.713290023731448*^9}},ExpressionUUID->"65f07631-25bd-4705-a6d1-\
90039858464e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateFidelity", "::", "usage"}], " ", "=", " ", 
   RowBox[{"\"\<QuantumStateFidelity[\!\(\*
StyleBox[\"qstate1\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate2\",
FontSlant->\"Italic\"]\)] yields Tr[\!\(\*SqrtBox[\(\*SqrtBox[\(\[Rho]\)] \
\[Sigma]\\\ \*SqrtBox[\(\[Rho]\)]\)]\)] \>\"", "<>", "\n", "\t", 
    "\"\<where \[Rho] and \[Sigma] are the density matrices of \!\(\*
StyleBox[\"qstate1\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)and\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"qstate2\",
FontSlant->\"Italic\"]\).\>\""}]}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711884254043638*^9, 3.711884286073598*^9}, {
  3.711884737108143*^9, 3.711884769293548*^9}, {3.7118848088171673`*^9, 
  3.711884906376154*^9}, {3.7118853026144037`*^9, 3.71188535537507*^9}, {
  3.713034284297364*^9, 3.7130343344069357`*^9}, {3.713034369472721*^9, 
  3.71303443237831*^9}, {3.7132900664650517`*^9, 
  3.713290090198791*^9}},ExpressionUUID->"f556cd43-8cee-49c7-a83f-\
eeb88f8cd087"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions", "Chapter",
 CellChangeTimes->{{3.7134530599596777`*^9, 
  3.713453065631654*^9}},ExpressionUUID->"0458cd68-9ccf-4f5d-a61d-\
265b554413aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711198901838376*^9, 3.711198907164904*^9}, {
  3.711199901118759*^9, 3.7111999051631403`*^9}, {3.711552598218913*^9, 
  3.7115525982261353`*^9}},ExpressionUUID->"9e79d112-186c-43ff-88a3-\
aa760334717d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"basis", ",", " ", "giveDim", ",", " ", "removeDim"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basis", "[", "dims_", "]"}], " ", ":=", " ", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"Range", " ", "/@", " ", "dims"}], "-", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"giveDim", "[", 
     RowBox[{"w_", " ", "\[Rule]", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"w", " ", "\[Rule]", " ", "d"}]}], " ", ";"}], 
  RowBox[{"(*", "parseRule", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"giveDim", "[", "w_", "]"}], " ", ":=", " ", 
    RowBox[{"w", " ", "\[Rule]", " ", "2"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"removeDim", "[", " ", 
    RowBox[{"w_", " ", "\[Rule]", " ", "d_"}], " ", "]"}], " ", ":=", " ", 
   "w"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeDim", "[", "w_", "]"}], " ", ":=", " ", "w"}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7113971981285543`*^9, 3.711397203645961*^9}, {
   3.711729260565258*^9, 3.711729269443668*^9}, {3.7123277159352493`*^9, 
   3.7123277213444653`*^9}, {3.712964672600917*^9, 3.712964712704404*^9}, {
   3.7134549731817837`*^9, 3.7134549837813673`*^9}, 
   3.718571235000325*^9},ExpressionUUID->"0e174845-cfdc-4157-ada4-\
5cb48a3d2402"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "numericArrayQ", ",", " ", "opListQ", ",", " ", "stateListQ", ",", " ", 
     "circListQ", ",", " ", "wireListQ", ",", " ", "condQ", ",", " ", 
     "circElemsListQ"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numericArrayQ", "[", "vec_List", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "vec", "]"}], ",", " ", "NumericQ"}], "]"}], 
     ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ruleListQ", "[", "rules_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "rules", "]"}], " ", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"rules", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], " ", "===", "  ", "Rule"}], " ", 
         "&"}]}], "]"}]}], ",", " ", "True", ",", " ", "False"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opListQ", "[", "ops_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "ops", "]"}], " ", "\n", "\t", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"ops", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], "===", " ", 
          "QuantumDiscreteOperation"}], "&"}]}], "]"}]}], ",", " ", "True", 
     ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateListQ", "[", "states_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "states", "]"}], " ", "\n", "\t", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"states", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], "===", " ", 
          "QuantumDiscreteState"}], "&"}]}], "]"}]}], ",", " ", "True", ",", 
     " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circListQ", "[", "circs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "circs", "]"}], " ", "\n", "\t", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"circs", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], "===", " ", "QuantumCircuit"}], 
         "&"}]}], "]"}]}], ",", " ", "True", ",", " ", "False"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wireListQ", "[", "wires_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "wires", "]"}], "\n", "\t", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"wires", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", "Rule"}], " ", "&&",
           " ", 
          RowBox[{"IntegerQ", " ", "@", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "&"}]}], "]"}]}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"condQ", "[", "cond_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "cond", "]"}], " ", "===", " ", "Function"}], " ",
       "&&", " ", 
      RowBox[{
       RowBox[{"Length", " ", "@", " ", 
        RowBox[{"Union", "@", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{"cond", ",", " ", "_Slot", ",", " ", "Infinity"}], 
          "]"}]}]}], " ", "\[Equal]", " ", "1"}]}], ")"}], " ", "||", " ", 
    RowBox[{"cond", " ", "===", " ", "True"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"condListQ", "[", "conds_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ListQ", "[", "conds", "]"}], " ", "&&", " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{"conds", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"ListQ", "[", "#", "]"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{"condQ", " ", "@", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{"QuantumDiscreteOperationQ", " ", "@", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], " ", "&"}]}], "]"}]}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circElemsListQ", "[", "elems_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "elems", "]"}], " ", "\n", "\t", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"elems", ",", " ", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"QuantumDiscreteOperationQ", "[", "#", "]"}], " ", "||", 
          " ", "\n", "\t\t", 
          RowBox[{"QuantumDiscreteConditionalOperationQ", "[", "#", "]"}], 
          " ", "||", "\n", "\t\t", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", 
            "QuantumDiscreteMeasurement"}], ")"}]}], "&"}]}], "]"}]}], ",", 
     " ", "\n", "\t", "True", ",", " ", "False"}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->CompressedData["
1:eJwdz1tIU3EAx/HjBZ0MNhRBSCS8ha4HAy1oeOEoYnhLDTUMp2s6gkp9mM3y
Ajqx1MlEVqSC2JhTpxu6HUVsQ7OCXoIxlpdyMgS1eWakEx8KL//fefjxefm9
fGMfN5bVB1IUFU8GvwxNvLdMsvSNu8wobM36YYD71joTjHiqtMCm/3wGit0Z
f6BtO/8Y+iTa61aiV3QrFpbxT4d/EYOl6g9Qu2rPWphi6YCil7nw73NXCTRX
yR9CKkcmh/u9rzjbPhvfVRtZ2lFZOAIj5w4WoPrUbYPHNzu9sEc474PfDOkn
MEz6gDPU2a+uIbomFAPQlJgSUkt0CjRC2GdM2JMSJZnhRzBT76fWiL7x/iB4
/kjEg3N+RgB532cVP/HTdSihig18JjOz9JOzDE75G/c6TBt664He6Mvmj8Ri
/9QLaJJcu583T7qrLSWwQ3EvSEncaf/Eh3Xdt7vWiWbRLmfpWUwfZNhUzpN/
kulNoliTtAR1FM3fIv6ukArgokpTUG4lvZWDNTDtwNUA78hmGqFKr1dCcX10
C1x7vaKBBot8EGZPFy/rGJbuTIyyQYdH+BXakwc44w49G3BMe8F5BcipO5U=

  "],ExpressionUUID->"2bd1241e-0cc9-4ed4-be3d-2d675319b5a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Quantum States", "Subchapter"]], "Chapter",
 CellDingbat->None,
 CellChangeTimes->{{3.707769529283565*^9, 3.70776953759558*^9}, {
  3.707843056031451*^9, 3.707843056857955*^9}, {3.707844264685753*^9, 
  3.707844266642311*^9}, {3.708012824366029*^9, 
  3.708012827966536*^9}},ExpressionUUID->"e156b835-ebe6-4afc-a9fa-\
29d69a46280e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "dimHelper1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimHelper1", "[", 
    RowBox[{
     RowBox[{"w", ":", 
      RowBox[{"Except", "[", "_Rule", "]"}]}], ",", " ", "n_Integer"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"w", " ", "\[Rule]", " ", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dimHelper1", "[", 
    RowBox[{"w_Rule", ",", " ", "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"w", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", "n"}]}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71139344764851*^9, 3.7113935364115543`*^9}, {
  3.711393594911405*^9, 3.711393600618881*^9}, {3.711394264039845*^9, 
  3.711394267285852*^9}, {3.711415373225891*^9, 3.711415375688834*^9}, {
  3.711884524087566*^9, 
  3.711884533799733*^9}},ExpressionUUID->"8533adc0-ac78-4083-99c9-\
98c8859db623"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "basisState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisState", "[", 
    RowBox[{"ks_List", ",", " ", "ds_List"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{"Times", ",", " ", "##"}], "]"}], " ", "&"}], " ", "@@", 
    RowBox[{"(", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", " ", "+", " ", "1"}], " ", "\[Rule]", " ", "1"}], 
          ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"ks", ",", "ds"}], "}"}]}], "]"}], ")"}]}]}], ";"}]}], "Code",\

 CellDingbat->None,
 CellChangeTimes->{{3.7112874065370617`*^9, 3.7112874544798822`*^9}, {
  3.7112874947931356`*^9, 3.711287501751779*^9}, {3.71128753359208*^9, 
  3.711287546216017*^9}, {3.711309426498086*^9, 3.711309481462997*^9}, {
  3.711309531228929*^9, 3.711309604571169*^9}, {3.711309674552985*^9, 
  3.711309676089046*^9}, {3.711309712364032*^9, 3.71130978838931*^9}, {
  3.711309835147547*^9, 3.711309900638898*^9}, {3.711309952511425*^9, 
  3.711309954245859*^9}, {3.711310019257374*^9, 3.711310022424212*^9}, {
  3.711310089168898*^9, 3.711310091592609*^9}, {3.7113979755540123`*^9, 
  3.711397977807279*^9}, {3.7114023080608587`*^9, 3.7114023143872843`*^9}, {
  3.7114023461427603`*^9, 3.71140236771941*^9}, {3.7114131994216423`*^9, 
  3.711413200569762*^9}, {3.711413766522814*^9, 3.711413768189839*^9}, {
  3.713454951037719*^9, 
  3.713454954965702*^9}},ExpressionUUID->"16e60b39-35e2-4089-af31-\
8ab7b30fa3e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "superpos", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"superpos", "[", "x_List", "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", "x"}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7118890159886217`*^9, 3.711889022705274*^9}, {
   3.7118890864933558`*^9, 3.7118890877056017`*^9}, {3.711889247325103*^9, 
   3.711889259798291*^9}, 3.711889317142831*^9, {3.711889503989974*^9, 
   3.7118895103565283`*^9}, {3.711889563985215*^9, 3.711889579873262*^9}, {
   3.7118897861160316`*^9, 3.711889786471212*^9}, {3.7134549403911047`*^9, 
   3.7134549477090816`*^9}},ExpressionUUID->"b1e09d4f-4d58-42d4-9acf-\
a04e5d7a2718"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ghzState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ghzState", "[", "n_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"arrayShape", ",", " ", "array"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"arrayShape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"2", ",", " ", "n"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"array", " ", "=", " ", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "1", "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", "^", "n"}], "}"}], " ", "\[Rule]", " ", "1"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", "^", "n"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"array", ",", " ", "arrayShape"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.708116416548277*^9, 3.708116433346353*^9}, {
  3.708116482777492*^9, 3.7081165328112297`*^9}, {3.708117517627843*^9, 
  3.7081178248342533`*^9}, {3.708117862742915*^9, 3.7081179015131197`*^9}, {
  3.7081179996788*^9, 3.708118001687311*^9}, {3.708118119856346*^9, 
  3.708118121353323*^9}, {3.708118158882716*^9, 3.708118202977868*^9}, {
  3.708118391210733*^9, 3.7081183912972603`*^9}, {3.708118451813801*^9, 
  3.708118452160478*^9}, {3.708118704274296*^9, 3.708118704934214*^9}, {
  3.708118757372692*^9, 3.708118767288254*^9}, {3.711391078484799*^9, 
  3.7113911260179977`*^9}, {3.7113911616626*^9, 3.71139116369384*^9}, {
  3.711391397344182*^9, 3.7113913996114197`*^9}, {3.7134549287108393`*^9, 
  3.713454936734438*^9}, {3.7170822849689827`*^9, 
  3.7170822856954412`*^9}},ExpressionUUID->"8b891266-b5f8-4e32-8cad-\
7a5c32a0147d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "wState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wState", "[", "n_Integer", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"arrayShape", ",", " ", "array"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"arrayShape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"2", ",", " ", "n"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"array", " ", "=", " ", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "i_", "}"}], "/;", 
           RowBox[{"IntegerQ", "[", 
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "\[Rule]", " ", 
          "1"}], ",", 
         RowBox[{"{", 
          RowBox[{"Power", "[", 
           RowBox[{"2", ",", " ", "n"}], "]"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"array", ",", " ", "arrayShape"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.708116416548277*^9, 3.708116433346353*^9}, {
  3.708116482777492*^9, 3.7081165328112297`*^9}, {3.708117517627843*^9, 
  3.7081178248342533`*^9}, {3.708117862742915*^9, 3.7081179015131197`*^9}, {
  3.7081179996788*^9, 3.708118001687311*^9}, {3.7081184536172533`*^9, 
  3.708118453878587*^9}, {3.7113912869069357`*^9, 3.7113913170972767`*^9}, {
  3.711391402362989*^9, 3.711391404373378*^9}, {3.713454958143133*^9, 
  3.713454962485621*^9}},ExpressionUUID->"218c176a-ae4e-4e41-9d90-\
c4040f4da011"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateHelper1", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "States", " ", "from", " ", "Input", " ", "Numeric", " ", "Arrays"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper1", "[", 
     RowBox[{"rule_", "?", "numericArrayQ"}], "]"}], " ", ":=", " ", "rule"}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Computational", " ", "Basis", " ", "States"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper1", "[", 
     RowBox[{"\"\<BasisState\>\"", ",", " ", "ks_", ",", " ", "ds_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"basisState", "[", 
     RowBox[{"ks", ",", " ", "ds"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"/", 
      RowBox[{"-", " ", "Basis"}]}]}], " ", "States"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", "\"\<Plus\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper1", "[", "\"\<Minus\>\"", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Bell", " ", "States"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", "\"\<PsiPlus\>\"", "]"}], " ", ":=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", "\"\<PsiMinus\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", "\"\<PhiPlus\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper1", "[", "\"\<PhiMinus\>\"", "]"}], " ", ":=", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Entangled", " ", "States"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ghzState", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper1", "[", 
     RowBox[{"\"\<W\>\"", ",", " ", "n_Integer"}], "]"}], " ", ":=", "  ", 
    RowBox[{"wState", "[", "n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper1", "[", "expr___List", "]"}], " ", ":=", " ", 
   "expr"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711287027079556*^9, 3.711287140297504*^9}, {
   3.711287176371557*^9, 3.711287219172328*^9}, {3.711287285588925*^9, 
   3.711287298565147*^9}, {3.711287330151763*^9, 3.711287336495631*^9}, {
   3.711389452197864*^9, 3.7113895548942337`*^9}, {3.711389622749847*^9, 
   3.711389635299013*^9}, {3.7113896658374443`*^9, 3.711389756352906*^9}, {
   3.71138989170786*^9, 3.711389906365469*^9}, {3.711390924924459*^9, 
   3.711390929099224*^9}, {3.711391243989319*^9, 3.711391255480021*^9}, {
   3.711391380475315*^9, 3.71139143960958*^9}, {3.711391863693844*^9, 
   3.711391872121512*^9}, {3.711395436494141*^9, 3.7113955271481237`*^9}, {
   3.711395571974976*^9, 3.711395619799355*^9}, {3.711395892615465*^9, 
   3.711395915176765*^9}, {3.711397933411031*^9, 3.711397955435178*^9}, {
   3.7113979953500757`*^9, 3.711397995827878*^9}, 3.711402262861518*^9, 
   3.711413661430097*^9, {3.7114138216856422`*^9, 3.7114138547003393`*^9}, {
   3.711413894390305*^9, 3.7114138986510687`*^9}, {3.711415062740819*^9, 
   3.711415077454296*^9}, {3.711538419563291*^9, 3.711538420801043*^9}, {
   3.711538509453518*^9, 3.7115385159939528`*^9}, {3.711552598242432*^9, 
   3.71155259831612*^9}},ExpressionUUID->"078c030d-30c7-49e7-a4a3-\
1a31768e1f05"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "stateHelper2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{
      RowBox[{"w", ":", 
       RowBox[{"Except", "[", "_List", "]"}]}], " ", "\[Rule]", " ", 
      "rule_"}], "]"}], " ", ":=", " ", 
    RowBox[{"stateHelper2", "[", 
     RowBox[{
      RowBox[{"{", "w", "}"}], " ", "\[Rule]", "  ", "rule"}], "]"}]}], " ", 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "States", " ", "from", " ", "Input", " ", "Numeric", " ", "Arrays"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{"ws_List", " ", "\[Rule]", " ", 
      RowBox[{"rule_", "?", "numericArrayQ"}]}], "]"}], " ", ":=", "  ", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"ws", " ", "->", " ", 
       RowBox[{"Dimensions", " ", "@", " ", "rule"}]}], "]"}], " ", "\[Rule]",
      " ", "rule"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Computational", " ", "Basis", " ", "States"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{"ws_List", " ", "\[Rule]", "  ", 
      RowBox[{"{", 
       RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"giveDim", ",", " ", "ws"}], "]"}], "  ", "\[Rule]", " ", 
     RowBox[{"basisState", "[", 
      RowBox[{"bases", " ", ",", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"giveDim", "[", "#", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", " ", "ws"}], "]"}]}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Uniform", " ", "Superposition", " ", "States"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{
     "ws_List", " ", "\[Rule]", "  ", "\"\<UniformSuperposition\>\""}], "]"}],
     " ", ":=", " ", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"giveDim", ",", " ", "ws"}], "]"}], "  ", "\[Rule]", " ", 
     RowBox[{"superpos", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"giveDim", "[", "#", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", " ", "ws"}], "]"}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"/", 
      RowBox[{"-", " ", "Basis"}]}]}], " ", "States"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper2", "[", 
    RowBox[{"w_List", " ", "\[Rule]", "  ", 
     RowBox[{"exp", ":", 
      RowBox[{"\"\<Plus\>\"", "|", "\"\<Minus\>\""}]}]}], "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"giveDim", ",", " ", "w"}], "]"}], " ", "\[Rule]", " ", 
    RowBox[{"stateHelper1", "[", "exp", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{"w_", " ", "\[Rule]", "  ", 
      RowBox[{"exp", ":", 
       RowBox[{"\"\<Plus\>\"", "|", "\"\<Minus\>\""}]}]}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"giveDim", "[", "w", "]"}], "}"}], " ", "\[Rule]", " ", 
     RowBox[{"stateHelper1", "[", "exp", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Bell", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1_", ",", " ", "w2_"}], "}"}], " ", "\[Rule]", "  ", 
      RowBox[{"exp", ":", 
       RowBox[{"(", 
        RowBox[{
        "\"\<PsiPlus\>\"", "|", "\"\<PsiMinus\>\"", "|", "\"\<PhiPlus\>\"", 
         "|", "\"\<PhiMinus\>\""}], ")"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"giveDim", "[", "w1", "]"}], ",", " ", 
       RowBox[{"giveDim", "[", "w2", "]"}]}], "}"}], " ", "\[Rule]", " ", 
     RowBox[{"stateHelper1", "[", "exp", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Entangled", " ", "States"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateHelper2", "[", 
     RowBox[{"ws_", " ", "\[Rule]", " ", 
      RowBox[{"exp", ":", 
       RowBox[{"\"\<GHZ\>\"", "|", "\"\<W\>\""}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"giveDim", ",", " ", "ws"}], "]"}], " ", "\[Rule]", " ", 
     RowBox[{"stateHelper1", "[", 
      RowBox[{"exp", ",", " ", 
       RowBox[{"Length", "[", "ws", "]"}]}], "]"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"States", " ", "from", " ", "symbolic", " ", "Arrays"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateHelper2", "[", 
    RowBox[{"w_List", " ", "\[Rule]", " ", "rule_"}], "]"}], " ", ":=", "  ", 
   
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dimHelper1", "[", 
        RowBox[{"#1", ",", " ", "#2"}], "]"}], " ", "&"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"w", ",", " ", 
        RowBox[{"Dimensions", " ", "@", " ", "rule"}]}], "}"}]}], "]"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"stateHelper1", "[", "rule", "]"}]}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711391913223555*^9, 3.711391920719208*^9}, {
   3.7113919561983833`*^9, 3.711391989228318*^9}, {3.711392019778407*^9, 
   3.711392025216962*^9}, {3.7113921513250637`*^9, 3.711392159689713*^9}, {
   3.711392216295802*^9, 3.7113922404945374`*^9}, {3.7113922974011803`*^9, 
   3.711392318353142*^9}, {3.711392507258095*^9, 3.711392543082395*^9}, {
   3.7113928470136766`*^9, 3.7113928581507196`*^9}, 3.711392934647479*^9, {
   3.711393358738083*^9, 3.7113933701001997`*^9}, 3.7113936213749*^9, {
   3.7113937570288477`*^9, 3.711393758926137*^9}, {3.711393792229312*^9, 
   3.71139379317143*^9}, {3.711394029551032*^9, 3.7113941327194777`*^9}, 
   3.711394172620319*^9, {3.7113942956234922`*^9, 3.7113943065334063`*^9}, {
   3.711394361678254*^9, 3.71139436216457*^9}, {3.711394650745699*^9, 
   3.711394675326354*^9}, {3.7113947085593452`*^9, 3.71139475528337*^9}, {
   3.711394806213954*^9, 3.711394810106094*^9}, {3.711394843554051*^9, 
   3.7113949297856007`*^9}, {3.7113950965445633`*^9, 3.71139515694555*^9}, {
   3.711395214276082*^9, 3.711395320438508*^9}, {3.711395362210116*^9, 
   3.7113953695012608`*^9}, {3.7113956973446913`*^9, 3.711395779952415*^9}, {
   3.7113958165189857`*^9, 3.7113958860476522`*^9}, {3.711396100210639*^9, 
   3.711396103371503*^9}, {3.711396153769376*^9, 3.7113961931074*^9}, {
   3.711396315829781*^9, 3.711396317141323*^9}, {3.7113963642000237`*^9, 
   3.7113963649378433`*^9}, {3.711401881369834*^9, 3.711401926812627*^9}, {
   3.71140197307471*^9, 3.711402037812422*^9}, {3.711402102031887*^9, 
   3.711402164788867*^9}, {3.7114022290925627`*^9, 3.711402242103066*^9}, {
   3.711413302500779*^9, 3.711413315211739*^9}, {3.711413626111011*^9, 
   3.711413627680138*^9}, {3.7114139224843693`*^9, 3.711413923115782*^9}, {
   3.711413954149946*^9, 3.711414002295034*^9}, {3.711414089933694*^9, 
   3.711414134894639*^9}, {3.71141764588246*^9, 3.711417670562625*^9}, {
   3.711552598330312*^9, 3.71155259841015*^9}, {3.711888900085785*^9, 
   3.7118889698667192`*^9}, {3.712411620229693*^9, 3.712411713912826*^9}, {
   3.712411859593644*^9, 3.712411868800955*^9}, {3.712411944457809*^9, 
   3.712411946873445*^9}, {3.7124119903410482`*^9, 3.712412019549459*^9}, {
   3.7124121702847767`*^9, 3.712412177146915*^9}, {3.712412222577848*^9, 
   3.712412229485856*^9}, 3.712413125738504*^9, {3.714474130606924*^9, 
   3.714474132404635*^9}, {3.714474201713662*^9, 3.714474203701873*^9}, {
   3.714474281766465*^9, 3.714474295330817*^9}, {3.7153104307142572`*^9, 
   3.715310431150927*^9}, 3.718499255123909*^9, {3.71849929012659*^9, 
   3.718499293451159*^9}, {3.718499327603691*^9, 3.7184993282607603`*^9}, {
   3.718499413135332*^9, 3.7184994162971478`*^9}, {3.718499565747327*^9, 
   3.718499567617517*^9}, {3.718499642004187*^9, 3.7184996525157537`*^9}, {
   3.718499733761826*^9, 
   3.718499736465283*^9}},ExpressionUUID->"b8546be7-e3fe-4701-a45d-\
74454d7e6504"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "stateVector", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["Format", "Code"], 
   StyleBox["[", "Code"], 
   RowBox[{
    StyleBox[
     RowBox[{"stateVector", "[", "state_", "]"}], "Code"], 
    StyleBox[" ", "Code"], 
    StyleBox[":=", "Code"], 
    StyleBox[" ", "Code"], 
    RowBox[{
     StyleBox["Module", "Code"], 
     StyleBox["[", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t", "Code"], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "dimensions", ",", " ", "transposelevels", ",", " ", "vector", ",", 
         " ", "out", ",", " ", "newState"}], "}"}], "Code"], 
      StyleBox[",", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox["newState", "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox["=", "Code"], 
        StyleBox[" ", "Code"], 
        RowBox[{"Map", "[", 
         RowBox[{"stateHelper2", ",", "state"}], "]"}]}], ";", 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "#1", "}"}], "]"}], "  ", "&"}], " ", "@@@", " ", 
          "newState"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"Thread", " ", "/@", " ", "dimensions"}], ")"}]}], "Code"], 
       
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "dimensions", "]"}], ",", " ", "First"}], 
          "]"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"transposelevels", " ", "=", " ", 
         RowBox[{"InversePermutation", "[", 
          RowBox[{"Ordering", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"newState", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "}"}], "]"}], 
           "]"}], "]"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"vector", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "##"}], "]"}], " ", "&"}], " ", "@@", 
          " ", 
          RowBox[{"newState", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"vector", " ", "=", " ", 
         RowBox[{"Normalize", " ", "@", " ", 
          RowBox[{"SparseArray", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Transpose", "[", 
             RowBox[{"vector", ",", " ", "transposelevels"}], "]"}], "]"}], 
           "]"}]}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       RowBox[{"Association", "[", 
        RowBox[{"{", 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t", "Code"], 
         StyleBox[
          RowBox[{
           RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", "vector"}], 
           ",", "\n", "\t\t", 
           RowBox[{
           "\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "dimensions"}]}], 
          "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t", "Code"], 
         StyleBox["}", "Code"]}], 
        StyleBox["]", "Code"]}]}]}], 
     StyleBox["]", "Code"]}]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], 
  StyleBox[";", "Code"]}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711199828464604*^9, 3.7111998287224073`*^9}, 
   3.711201049070449*^9, {3.71120122418592*^9, 3.711201231112111*^9}, {
   3.711248148700527*^9, 3.711248200719455*^9}, {3.7113968126211042`*^9, 
   3.711396817513987*^9}, {3.7114143461057453`*^9, 3.711414348709979*^9}, {
   3.711414521964974*^9, 3.7114145253640203`*^9}, {3.711415535102503*^9, 
   3.711415546470223*^9}, {3.711416227715809*^9, 3.711416241505295*^9}, {
   3.7115525984221897`*^9, 3.711552626017089*^9}, {3.7116273333622227`*^9, 
   3.711627333485922*^9}, {3.711627615949106*^9, 3.711627620409337*^9}, {
   3.711884305374296*^9, 3.711884390480257*^9}, {3.711884421177988*^9, 
   3.7118844612789087`*^9}, {3.712326686769403*^9, 3.7123266886171827`*^9}, {
   3.712326836766553*^9, 3.7123268513861713`*^9}, {3.7123273046391897`*^9, 
   3.712327306513917*^9}, {3.712410354498082*^9, 3.712410356535413*^9}, {
   3.712410488902117*^9, 3.712410517115514*^9}, {3.713107013101956*^9, 
   3.713107014179139*^9}, {3.713455064645281*^9, 3.713455073571615*^9}, {
   3.714535025918991*^9, 3.7145350274262857`*^9}, {3.715308422319745*^9, 
   3.715308424790682*^9}, {3.71531065493301*^9, 3.7153106954238167`*^9}, {
   3.715311150199006*^9, 
   3.715311150908629*^9}},ExpressionUUID->"a9dc682e-4b36-4f5e-b279-\
468a875098ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "densityMatrix", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["Format", "Code"], 
   StyleBox["[", "Code"], 
   RowBox[{
    StyleBox[
     RowBox[{"densityMatrix", "[", "state_", "]"}], "Code"], 
    StyleBox[" ", "Code"], 
    StyleBox[":=", "Code"], 
    StyleBox[" ", "Code"], 
    RowBox[{
     StyleBox["Module", "Code"], 
     StyleBox["[", "Code"], 
     StyleBox["\n", "Code"], 
     StyleBox["\t", "Code"], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
        "dimensions", ",", " ", "transposelevels", ",", " ", "vector", ",", 
         " ", "out", ",", " ", "newState"}], "}"}], "Code"], 
      StyleBox[",", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t", "Code"], 
      RowBox[{
       RowBox[{
        StyleBox["newState", "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox["=", "Code"], 
        StyleBox[" ", "Code"], 
        RowBox[{"Map", "[", 
         RowBox[{"stateHelper2", ",", "state"}], "]"}]}], ";", 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "#1", "}"}], "]"}], "  ", "&"}], " ", "@@@", " ", 
          "newState"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"Thread", " ", "/@", " ", "dimensions"}], ")"}]}], "Code"], 
       
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"dimensions", " ", "=", " ", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", "dimensions", "]"}], ",", " ", "First"}], 
          "]"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"transposelevels", " ", "=", " ", 
         RowBox[{"InversePermutation", "[", 
          RowBox[{"Ordering", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"newState", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "}"}], "]"}], 
           "]"}], "]"}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"vector", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Outer", "[", 
            RowBox[{"Times", ",", " ", "##"}], "]"}], " ", "&"}], " ", "@@", 
          " ", 
          RowBox[{"newState", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       StyleBox[
        RowBox[{"vector", " ", "=", " ", 
         RowBox[{"Normalize", " ", "@", " ", 
          RowBox[{"SparseArray", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Transpose", "[", 
             RowBox[{"vector", ",", " ", "transposelevels"}], "]"}], "]"}], 
           "]"}]}]}], "Code"], 
       StyleBox[";", "Code"], 
       StyleBox["\n", "Code"], 
       StyleBox["\t", "Code"], 
       RowBox[{"Association", "[", 
        RowBox[{"{", 
         StyleBox["\n", "Code"], 
         StyleBox["\t\t", "Code"], 
         StyleBox[
          RowBox[{
           RowBox[{"\"\<DensityMatrix\>\"", " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"SparseArray", "[", 
              RowBox[{"ConjugateTranspose", "[", 
               RowBox[{"{", "vector", "}"}], "]"}], "]"}], ".", 
             RowBox[{"SparseArray", "[", 
              RowBox[{"{", "vector", "}"}], "]"}]}]}], ",", "\n", "\t\t", 
           RowBox[{
           "\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "dimensions"}]}], 
          "Code"], 
         StyleBox["\n", "Code"], 
         StyleBox["\t", "Code"], 
         StyleBox["}", "Code"]}], 
        StyleBox["]", "Code"]}]}]}], 
     StyleBox["]", "Code"]}]}], 
   StyleBox["\n", "Code"], 
   StyleBox["]", "Code"]}], 
  StyleBox[";", "Code"]}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711199828464604*^9, 3.7111998287224073`*^9}, 
   3.711201049070449*^9, {3.71120122418592*^9, 3.711201231112111*^9}, {
   3.711248148700527*^9, 3.711248200719455*^9}, {3.7113968126211042`*^9, 
   3.711396817513987*^9}, {3.7114143461057453`*^9, 3.711414348709979*^9}, {
   3.711414521964974*^9, 3.7114145253640203`*^9}, {3.711415535102503*^9, 
   3.711415546470223*^9}, {3.711416227715809*^9, 3.711416241505295*^9}, {
   3.7115525984221897`*^9, 3.711552626017089*^9}, {3.7116273333622227`*^9, 
   3.711627333485922*^9}, {3.711627615949106*^9, 3.711627620409337*^9}, {
   3.711884305374296*^9, 3.711884390480257*^9}, {3.711884421177988*^9, 
   3.7118844612789087`*^9}, {3.712326686769403*^9, 3.7123266886171827`*^9}, {
   3.712326836766553*^9, 3.7123268513861713`*^9}, {3.7123273046391897`*^9, 
   3.712327306513917*^9}, {3.712410354498082*^9, 3.712410356535413*^9}, {
   3.712410488902117*^9, 3.712410517115514*^9}, {3.713107013101956*^9, 
   3.713107014179139*^9}, {3.713455064645281*^9, 3.713455073571615*^9}, {
   3.714535025918991*^9, 3.7145350274262857`*^9}, {3.715308422319745*^9, 
   3.715308424790682*^9}, 
   3.7185839776143293`*^9},ExpressionUUID->"aef97f35-3395-41b5-adc8-\
39bf74fc7e85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "vecQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecQ", "[", "state_QuantumDiscreteState", "]"}], " ", ":=", " ", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"state", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
     "\"\<StateVector\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecQ", "[", "expr___", "]"}], " ", ":=", " ", "$Failed"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7168720620694017`*^9, 
  3.7168721433063917`*^9}},ExpressionUUID->"57c7d025-19b8-41ba-823d-\
469fa7c700b5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "extractQuantumStateProperty", "]"}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", "Entropy", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQuantumStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<VonNeumannEntropy\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "0", ",", "\n", "\t", 
      RowBox[{"Module", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Rho]", ",", " ", "eigs", ",", " ", "entropy"}], "}"}], 
        ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\[Rho]", " ", "=", " ", 
          RowBox[{
           RowBox[{"qs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DensityMatrix\>\"", 
           "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"eigs", " ", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", "\[Rho]", "]"}], ",", 
            RowBox[{
             RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"entropy", " ", "=", " ", 
          RowBox[{"-", " ", 
           RowBox[{"Total", "@", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", " ", 
                RowBox[{"Log", "[", 
                 RowBox[{"2", ",", "#"}], "]"}]}], "&"}], ",", "eigs"}], 
             "]"}]}]}]}], ";", "\n", "\t\t", "entropy"}]}], "\n", "\t\t", 
       "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Purity", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQuantumStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<Purity\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\n", "\t", "1", ",", " ", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Rho]", " ", "=", " ", 
          RowBox[{
           RowBox[{"qs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DensityMatrix\>\"", 
           "]"}]}], "}"}], ",", " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"\[Rho]", ".", "\[Rho]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQuantumStateProperty", "[", "expr___", "]"}], " ", ":=", 
   " ", "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.715474461179277*^9, 3.715474467323559*^9}, {
   3.715474503907769*^9, 3.715474562839603*^9}, {3.7154746007984056`*^9, 
   3.715474636095838*^9}, {3.715477638247345*^9, 3.715477820550665*^9}, {
   3.715477857134968*^9, 3.715477879515625*^9}, {3.715478013394927*^9, 
   3.715478136008112*^9}, {3.716872174804722*^9, 3.716872205080433*^9}, {
   3.716902330327292*^9, 3.7169023432069063`*^9}, 
   3.717897414534379*^9},ExpressionUUID->"7e94c100-03a1-49dd-a35c-\
7c80d5032eaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "vecToMat", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecToMat", "[", "vec_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"SparseArray", "[", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"{", "vec", "}"}], "]"}], "]"}], ".", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", "vec", "}"}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.717897940910837*^9, 
  3.717897950447522*^9}},ExpressionUUID->"7a91ba98-be6b-459c-94b8-\
b12748405bc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "matToVecHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matToVecHelper", "[", 
   RowBox[{"row_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"row", "[", 
        RowBox[{"[", "pos", "]"}], "]"}], " ", "===", "  ", "0"}], ")"}]}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "pos"}], "}"}], ",", " ", "False"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.717899382748835*^9, 3.717899417856217*^9}, {
  3.7178994644431877`*^9, 3.717899495556345*^9}, {3.71789983882973*^9, 
  3.7178998661278543`*^9}, {3.717899947496282*^9, 
  3.717899969439877*^9}},ExpressionUUID->"03f16bc1-0973-4619-82a1-\
2a72060917e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "matToVec", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matToVec", "[", "mat_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "pos"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"row", ",", " ", "pos"}], "}"}], " ", "=", " ", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"matToVecHelper", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", " ", 
          "mat"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"False", "===", "#"}], ")"}]}], "&"}]}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"row", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"row", "[", 
        RowBox[{"[", "pos", "]"}], "]"}], "]"}]}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.715484196073102*^9, 3.71548424308594*^9}, {
   3.71548429541007*^9, 3.7154843364021397`*^9}, {3.7154847050176*^9, 
   3.715484736493114*^9}, {3.715484779352688*^9, 3.715484807424138*^9}, {
   3.715484843128563*^9, 3.7154848649575644`*^9}, {3.71548494124043*^9, 
   3.715484944048614*^9}, {3.7154850185525208`*^9, 3.715485065180085*^9}, {
   3.7154851096148243`*^9, 3.715485118950433*^9}, {3.715485185665057*^9, 
   3.7154852735821342`*^9}, {3.7154854462549973`*^9, 3.715485456643058*^9}, {
   3.715485501403493*^9, 3.7154856212928753`*^9}, {3.7154856602846603`*^9, 
   3.715485721230138*^9}, {3.715485785520257*^9, 3.715485792141713*^9}, {
   3.71789741945383*^9, 3.717897421333804*^9}, {3.717897949471046*^9, 
   3.717897958679181*^9}, {3.717898174744206*^9, 3.717898273204597*^9}, {
   3.7178990438837633`*^9, 3.7178990965057487`*^9}, {3.717899134875248*^9, 
   3.717899142419416*^9}, {3.7178992832908373`*^9, 3.717899295345045*^9}, {
   3.7178993358361607`*^9, 3.717899377698143*^9}, {3.717899504182296*^9, 
   3.717899640986308*^9}, {3.717899708847746*^9, 3.717899738669833*^9}, {
   3.717899974826664*^9, 3.717899983825816*^9}, {3.717900014031599*^9, 
   3.7179000208540916`*^9}, {3.717900180768692*^9, 3.717900328173729*^9}, {
   3.71790036130405*^9, 3.717900397253748*^9}, 
   3.7179004727983093`*^9},ExpressionUUID->"77eaae67-a8ae-4d37-9de1-\
93439a4d1aa7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "l1Normalize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"l1Normalize", "[", "vals_List", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/", 
      RowBox[{"(", 
       RowBox[{"Total", " ", "@", " ", "vals"}], ")"}]}], "&"}], ",", " ", 
    "vals"}], "]"}], " "}]}], "Code",
 CellChangeTimes->{{3.717897766247712*^9, 
  3.717897861456724*^9}},ExpressionUUID->"8385e1f8-095c-44cf-adde-\
d861c1062c80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "mixtureHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mixtureHelper", "[", "pairs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mat", ",", " ", "qdits", ",", " ", "states", ",", " ", "probs", ",", 
       " ", "descrips", ",", " ", "ws"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"Keys", " ", "@", " ", 
        RowBox[{"pairs", "[", 
         RowBox[{"[", "All", "]"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"l1Normalize", " ", "@", " ", 
        RowBox[{"Values", " ", "@", " ", 
         RowBox[{"pairs", "[", 
          RowBox[{"[", "All", "]"}], "]"}]}]}]}], ";", "\n", "\t", 
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{
        RowBox[{"states", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
        "\"\<QuditDimensions\>\"", "]"}]}], ";", "\n", "    \t", "\n", "   ", 
      
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"Apply", "[", 
          RowBox[{"SameQ", ",", " ", 
           RowBox[{
            RowBox[{"{", "states", "}"}], "[", 
            RowBox[{"[", 
             RowBox[{
             "All", ",", " ", "1", ",", " ", "1", ",", " ", 
              "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], "]"}]}], ",", "\n",
         "    \t\t", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"QuantumDiscreteState", "::", "qudits"}], "]"}], ";", "\n", 
         "    \t\t", 
         RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "    \t", "]"}], 
      ";", "\n", "    \t", "\n", "    ", 
      RowBox[{"descrips", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vecQ", "[", "#", "]"}], ",", " ", 
            RowBox[{"vecToMat", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<StateVector\>\"", 
              "]"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DensityMatrix\>\"", 
             "]"}]}], "]"}], "&"}], ",", " ", "states"}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"Total", " ", "@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"descrips", ",", " ", "probs"}], "}"}]}], "]"}]}]}], ";", 
      "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"mat", ".", "mat"}], "]"}], " ", "\[Equal]", " ", "1"}], 
        ",", " ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "ws"}], ",",
           " ", 
          RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", 
           RowBox[{"matToVec", "[", "mat", "]"}]}]}], "|>"}], ",", "\n", 
        "\t\t", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "ws"}], ",",
           " ", 
          RowBox[{"\"\<DensityMatrix\>\"", " ", "\[Rule]", " ", "mat"}]}], 
         "|>"}]}], "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7154865115538*^9, 3.715486570343343*^9}, {
   3.7154866907971907`*^9, 3.715486769097095*^9}, {3.7154868529478903`*^9, 
   3.7154868982240353`*^9}, {3.715486930664913*^9, 3.7154869776798267`*^9}, {
   3.715487014010796*^9, 3.7154871793849792`*^9}, {3.7154872581626587`*^9, 
   3.715487259302598*^9}, {3.715487307707553*^9, 3.715487315183361*^9}, {
   3.71548735248908*^9, 3.7154873535825644`*^9}, 3.71548740906292*^9, {
   3.715487447821031*^9, 3.715487478156302*^9}, {3.715487521677033*^9, 
   3.7154876158517513`*^9}, {3.715488044325252*^9, 3.715488061116778*^9}, {
   3.715560849905569*^9, 3.715560851191674*^9}, {3.7168722146315813`*^9, 
   3.716872243351735*^9}, {3.71707713317391*^9, 3.717077140727231*^9}, {
   3.717897685868267*^9, 3.717897686352213*^9}, {3.717897909714394*^9, 
   3.717897911114533*^9}},ExpressionUUID->"7dad74aa-4788-4604-a528-\
d02360203d85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"tensorHelper", ",", " ", "tensorPure", ",", " ", "tensorMixed"}],
     "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tensorHelper", "[", "states_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AnyTrue", "[", 
       RowBox[{"states", ",", " ", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"vecQ", "[", "#", "]"}]}], "&"}]}], "]"}], ",", 
      RowBox[{"tensorMixed", "[", "states", "]"}], ",", " ", 
      RowBox[{"tensorPure", "[", "states", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tensorPure", "[", "states_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rep", ",", " ", "ws", ",", " ", "sortedWS", ",", " ", "sortedSizes", 
        ",", " ", "wires", ",", " ", "sortedWires", ",", " ", "dm", ",", " ", 
        "shape", ",", " ", "perm", ",", " ", "newState"}], "}"}], ",", "\n", 
      "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"Join", " ", "@@", " ", 
         RowBox[{"states", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", " ", "\"\<QuditDimensions\>\""}], 
           "]"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"wires", " ", "=", " ", 
        RowBox[{"ws", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"shape", " ", "=", " ", 
        RowBox[{"ws", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"sortedWS", " ", "=", " ", 
        RowBox[{"SortBy", "[", 
         RowBox[{"ws", ",", " ", "First"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"sortedWires", " ", "=", " ", 
        RowBox[{"sortedWS", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"sortedSizes", " ", "=", " ", 
        RowBox[{"sortedWS", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", 
         RowBox[{"states", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1", ",", " ", "1"}], "]"}], "]"}]}]}], 
       ";", "\n", "\t", 
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"ArrayReshape", "[", 
         RowBox[{"rep", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"perm", " ", "=", " ", 
        RowBox[{"Ordering", "[", "wires", "]"}]}], ";", "\n", "\t", 
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"rep", ",", " ", 
           RowBox[{"InversePermutation", "[", "perm", "]"}]}], "]"}]}]}], ";",
        "\n", "\t", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "sortedWS"}],
          ",", " ", 
         RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", "rep"}]}], 
        "|>"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tensorMixed", "[", "states_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ws", ",", " ", "sortedWS", ",", " ", "sizes", ",", " ", "sortedSizes", 
       ",", " ", "wires", ",", " ", "sortedWires", ",", " ", "dm", ",", " ", 
       "shape", ",", " ", "perm", ",", " ", "ord", ",", " ", "newSize", ",", 
       " ", "newState", ",", " ", "reps"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{"Join", " ", "@@", " ", 
        RowBox[{"states", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1", ",", "\"\<QuditDimensions\>\""}], "]"}], 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"wires", " ", "=", " ", 
       RowBox[{"ws", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"sizes", " ", "=", " ", 
       RowBox[{"ws", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"sortedWS", " ", "=", " ", 
       RowBox[{"SortBy", "[", 
        RowBox[{"ws", ",", " ", "First"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"sortedWires", " ", "=", " ", 
       RowBox[{"sortedWS", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"sortedSizes", " ", "=", " ", 
       RowBox[{"sortedWS", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"reps", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Keys", "[", "#", "]"}], ",", " ", 
              "\"\<StateVector\>\""}], "]"}], ",", " ", "\n", "\t\t", 
            RowBox[{"vecToMat", "[", 
             RowBox[{"#", "[", "\"\<StateVector\>\"", "]"}], "]"}], ",", " ", 
            
            RowBox[{"#", "[", "\"\<DensityMatrix\>\"", "]"}]}], "]"}], "&"}], 
         ",", " ", 
         RowBox[{"states", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"KroneckerProduct", " ", "@@", " ", "reps"}]}], ";", "\n", 
      "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"sizes", ",", " ", "2"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"dm", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"ord", " ", "=", " ", 
       RowBox[{"Ordering", "[", "wires", "]"}]}], ";", "\n", "\t", 
      RowBox[{"perm", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"ord", ",", " ", 
         RowBox[{"ord", " ", "+", " ", 
          RowBox[{"Length", "@", "ord"}]}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"dm", ",", " ", 
         RowBox[{"InversePermutation", "[", "perm", "]"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"newSize", " ", "=", " ", 
       RowBox[{"Times", " ", "@@", " ", "sizes"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "dm"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"newSize", ",", " ", "newSize"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<QuditDimensions\>\"", " ", "\[Rule]", " ", "sortedWS"}], 
        ",", " ", 
        RowBox[{"\"\<DensityMatrix\>\"", " ", "\[Rule]", " ", "dm"}]}], 
       "|>"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQLcaxe+W9da8drVLtt4DogB1r94Ho1+ZyR0B02q3f
L0F0wrUTr0D0oQ0XfoLouEesv0H0Oe6rLPeBtEZiMgeIllmuKQSi9d++kgfR
ZXectEC00ys5AxDt4i3oBKLzzteB6d6/GyNA9Iv1y3NA9LzpYm0g+liFeS+I
zjB2ngii4xY3zQLRC/67rQfR6xScd4BoMb/TB0F0it+RI2BzaxacANsTM+0U
iO4T+3IVRM8pSHoGoruaGIUfAOnki8tEQLQI11RZEK3RfFQJRK97t1cTRC8t
/akDop+rrzIG0Xs6GSxB9II/PPYgenIykweIvqfh6geilawMAkC00fuf5SC6
bEV9FYgWLCjlid/42vHUckYBEA0AkJvVmQ==
  
  "],ExpressionUUID->"ec05bb27-9563-4557-9550-783d8d0eecb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"tracePure", ",", " ", "traceMixed"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traceMixed", "[", 
     RowBox[{"qs_", ",", " ", "wOut_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dm", ",", " ", "dims", ",", " ", "ws", ",", " ", "wsContract", ",", 
        " ", "sizes", ",", " ", "newSize", ",", " ", "newSizes", ",", " ", 
        "perm", ",", " ", "newPerm", ",", " ", "shape", ",", " ", "newDims", 
        ",", " ", "posContract", ",", " ", "tensor", ",", " ", "reducedDM", 
        ",", " ", "newState"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"wsContract", " ", "=", " ", "wOut"}], ";", "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{
         RowBox[{"qs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<DensityMatrix\>\"", 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"dims", " ", "=", " ", 
        RowBox[{
         RowBox[{"qs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<QuditDimensions\>\"", 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{
         RowBox[{"#1", " ", "&"}], " ", "@@@", " ", "dims"}]}], ";", "\n", 
       "\t", "ws", ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{"ws", ",", " ", "wsContract"}], "]"}], " ", "==", " ", 
          RowBox[{"{", "}"}]}], ",", " ", 
         RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\t", "\n", "\t", 
       RowBox[{"sizes", " ", "=", " ", 
        RowBox[{
         RowBox[{"#2", " ", "&"}], " ", "@@@", " ", "dims"}]}], ";", "\n", 
       "\t", 
       RowBox[{"posContract", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"ws", ",", " ", "#"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", " ", 
          "wsContract"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"newDims", " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Delete", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", "dims", 
          ",", " ", 
          RowBox[{"ReverseSort", " ", "@", " ", "posContract"}]}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"newSizes", " ", "=", " ", 
        RowBox[{
         RowBox[{"#2", " ", "&"}], " ", "@@@", " ", "newDims"}]}], ";", "\n", 
       "\t", 
       RowBox[{"shape", " ", "=", " ", 
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"sizes", ",", " ", "2"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"ArrayReshape", "[", 
         RowBox[{"dm", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"perm", " ", "=", " ", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Range", "@", 
           RowBox[{"Length", "@", "sizes"}]}], ",", " ", 
          RowBox[{
           RowBox[{"Range", "@", 
            RowBox[{"Length", "@", "sizes"}]}], " ", "+", " ", 
           RowBox[{"Length", "@", "sizes"}]}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"dm", ",", " ", 
          RowBox[{"InversePermutation", "[", "perm", "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"TensorContract", "[", 
         RowBox[{"dm", ",", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", " ", 
              RowBox[{"#", " ", ",", " ", 
               RowBox[{"#", " ", "+", " ", 
                RowBox[{"Length", " ", "@", " ", "dims"}]}]}], "}"}], "&"}], 
            ",", " ", "posContract"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"newPerm", " ", "=", " ", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"Range", "@", 
           RowBox[{"Length", "@", "newSizes"}]}], ",", " ", 
          RowBox[{
           RowBox[{"Range", "@", 
            RowBox[{"Length", "@", "newSizes"}]}], " ", "+", " ", 
           RowBox[{"Length", " ", "@", " ", "newSizes"}]}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"dm", ",", " ", "newPerm"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"newSize", " ", "=", " ", 
        RowBox[{"Times", " ", "@@", " ", "newSizes"}]}], ";", "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"ArrayReshape", "[", 
         RowBox[{
          RowBox[{"Flatten", " ", "@", " ", "dm"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"newSize", ",", " ", "newSize"}], "}"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"newState", " ", "=", " ", "qs"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], " ", "=",
         " ", "dm"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}], " ", 
        "=", " ", "newDims"}], ";", "\n", "\t", "newState"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tracePure", "[", 
    RowBox[{"qs_", ",", " ", "wOut_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vec", ",", " ", "dims", ",", " ", "ws", ",", " ", "wsContract", ",", 
       " ", "sizes", ",", " ", "newSize", ",", " ", "newSizes", ",", " ", 
       "perm", ",", " ", "newPerm", ",", " ", "shape", ",", " ", "newDims", 
       ",", " ", "posContract", ",", " ", "tensor", ",", " ", "reducedDM", 
       ",", " ", "newState"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"wsContract", " ", "=", "  ", "wOut"}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<StateVector\>\"", "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"dims", " ", "=", " ", 
       RowBox[{
        RowBox[{"qs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<QuditDimensions\>\"", 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{
        RowBox[{"#1", " ", "&"}], " ", "@@@", " ", "dims"}]}], ";", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Complement", "[", 
          RowBox[{"ws", ",", " ", "wsContract"}], "]"}], " ", "==", " ", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", "\n", "\t", 
      RowBox[{"sizes", " ", "=", " ", 
       RowBox[{
        RowBox[{"#2", " ", "&"}], " ", "@@@", " ", "dims"}]}], ";", "\n", 
      "\t", 
      RowBox[{"posContract", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"ws", ",", " ", "#"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", " ", 
         "wsContract"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"newDims", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Delete", "[", 
           RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", "dims", 
         ",", " ", 
         RowBox[{"ReverseSort", " ", "@", " ", "posContract"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"newSizes", " ", "=", " ", 
       RowBox[{
        RowBox[{"#2", " ", "&"}], " ", "@@@", " ", "newDims"}]}], ";", "\n", 
      "\t", 
      RowBox[{"shape", " ", "=", " ", "sizes"}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"vec", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"perm", " ", "=", " ", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "sizes"}]}]}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"vec", ",", " ", 
         RowBox[{"InversePermutation", "[", "perm", "]"}]}], "]"}]}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"TensorContract", "[", 
        RowBox[{"vec", ",", " ", "posContract"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"newPerm", " ", "=", " ", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "newSizes"}]}]}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"vec", ",", " ", "newPerm"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"newState", " ", "=", " ", "qs"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"newState", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], " ", "=", 
       " ", "vec"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"newState", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}], " ", 
       "=", " ", "newDims"}], ";", "\n", "\t", "newState"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.715482692746921*^9, 3.715482721605061*^9}, {
   3.715482761501436*^9, 3.715482905510063*^9}, {3.71548299630928*^9, 
   3.715483012539629*^9}, {3.715483062651911*^9, 3.7154830945569*^9}, {
   3.715483182241413*^9, 3.715483185926978*^9}, {3.715483220405884*^9, 
   3.715483323983531*^9}, {3.715483360187764*^9, 3.715483402410269*^9}, {
   3.715564426429123*^9, 3.715564444334045*^9}, 3.716901570157419*^9, {
   3.71690161388113*^9, 3.716901619817299*^9}, {3.7169024796723146`*^9, 
   3.716902481760976*^9}, {3.716902648290607*^9, 3.7169026490933847`*^9}, {
   3.717077569584956*^9, 3.717077582866782*^9}, {3.717900537476017*^9, 
   3.717900540587934*^9}, {3.718500840120791*^9, 3.7185008465645437`*^9}, {
   3.718500947336316*^9, 3.718500953129682*^9}, {3.718501304597968*^9, 
   3.718501315266704*^9}, {3.718584164222001*^9, 3.718584168359653*^9}, {
   3.71864544830851*^9, 3.7186454589108562`*^9}, {3.718648255417366*^9, 
   3.7186482770332413`*^9}},ExpressionUUID->"6a2cc76c-c82e-4e64-87c6-\
11ca2585d071"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "traceHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"traceHelper", "[", 
    RowBox[{"qs_", ",", " ", "wOut_"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", 
     RowBox[{"tracePure", "[", 
      RowBox[{"qs", ",", " ", "wOut"}], "]"}], ",", " ", 
     RowBox[{"traceMixed", "[", 
      RowBox[{"qs", ",", " ", "wOut"}], "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7186460633841963`*^9, 
  3.7186461255999203`*^9}},ExpressionUUID->"e177d08a-d9ce-4544-a92f-\
cd74e2939f3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumPartialTr", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"qs_QuantumDiscreteState", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], ":=", " ", "qs"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"qs_QuantumDiscreteState", ",", " ", "wOut_List"}], "]"}], ":=", 
    " ", 
    RowBox[{"Fold", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"traceHelper", "[", 
        RowBox[{"#1", ",", " ", 
         RowBox[{"{", "#2", "}"}]}], "]"}], "&"}], ",", " ", "qs", ",", " ", 
      "wOut"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"qs_QuantumDiscreteState", ",", " ", "wOut_"}], "]"}], ":=", " ", 
    RowBox[{"traceHelper", "[", 
     RowBox[{"qs", ",", " ", 
      RowBox[{"{", "wOut", "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPartialTr", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.708171352929369*^9, 3.7081714021175623`*^9}, {
   3.7081716373093367`*^9, 3.708171694961471*^9}, {3.70817191167881*^9, 
   3.70817198559494*^9}, {3.708172199298778*^9, 3.708172327114018*^9}, {
   3.708173129459968*^9, 3.708173310122191*^9}, {3.708173358694131*^9, 
   3.708173384366612*^9}, {3.7081735678062687`*^9, 3.708173573556264*^9}, {
   3.708173766681509*^9, 3.708173766964587*^9}, {3.708174461745716*^9, 
   3.708174462358386*^9}, {3.708174535049645*^9, 3.708174553076378*^9}, {
   3.7081746547044353`*^9, 3.708174689068323*^9}, {3.708174720896339*^9, 
   3.708174782207424*^9}, {3.708174927300015*^9, 3.708174928425611*^9}, {
   3.708174989450037*^9, 3.70817501825483*^9}, {3.70817506165654*^9, 
   3.708175081717822*^9}, {3.708175139599757*^9, 3.70817514193335*^9}, {
   3.708175185137076*^9, 3.7081752196628723`*^9}, {3.708175344944666*^9, 
   3.7081753604575233`*^9}, {3.708179508806177*^9, 3.708179529286509*^9}, {
   3.7081796817179823`*^9, 3.7081796987780848`*^9}, {3.7081797326948433`*^9, 
   3.708179769670704*^9}, {3.708179802034567*^9, 3.708179817871684*^9}, {
   3.70817985968501*^9, 3.708179942259293*^9}, {3.708179984420392*^9, 
   3.708180082713901*^9}, 3.7081801425312977`*^9, {3.7081802432089853`*^9, 
   3.708180325832219*^9}, {3.708180374342778*^9, 3.7081803886212606`*^9}, {
   3.708180447750615*^9, 3.708180448911726*^9}, {3.708180503333709*^9, 
   3.7081805060112953`*^9}, {3.7081805576407957`*^9, 3.708180569351995*^9}, {
   3.708180855062788*^9, 3.708180860008195*^9}, {3.708180939046*^9, 
   3.708181009967424*^9}, {3.708181398116647*^9, 3.708181405419096*^9}, 
   3.708181636867448*^9, {3.708181698220893*^9, 3.708181699438341*^9}, {
   3.7081817585429173`*^9, 3.70818186175073*^9}, 3.708181900227043*^9, {
   3.708181945198028*^9, 3.7081819889917088`*^9}, {3.708182739729528*^9, 
   3.708182743055855*^9}, {3.708182808333933*^9, 3.7081828151110888`*^9}, {
   3.708183769449751*^9, 3.708183800768066*^9}, {3.708183896235174*^9, 
   3.7081838976172457`*^9}, {3.708183959703392*^9, 3.70818396125672*^9}, {
   3.7081839981928787`*^9, 3.708183999772903*^9}, {3.7081843323708477`*^9, 
   3.708184338804936*^9}, {3.7081853936260757`*^9, 3.708185596199409*^9}, {
   3.708185655015978*^9, 3.708185683276393*^9}, {3.70818574516012*^9, 
   3.7081857773753767`*^9}, {3.708185837278061*^9, 3.708185883394287*^9}, {
   3.708185989363237*^9, 3.708186040902293*^9}, {3.708186135639337*^9, 
   3.70818614397149*^9}, 3.708186270344564*^9, {3.708186683785611*^9, 
   3.708186705048114*^9}, {3.7081870381918297`*^9, 3.708187054091715*^9}, {
   3.7081870903260813`*^9, 3.708187092256631*^9}, {3.708187127004678*^9, 
   3.708187236330118*^9}, {3.708187347039483*^9, 3.70818737140123*^9}, {
   3.70818741721894*^9, 3.708187510920789*^9}, {3.708187542010083*^9, 
   3.708187569438629*^9}, {3.708187604966757*^9, 3.708187645713293*^9}, {
   3.708187683980933*^9, 3.708187735820846*^9}, {3.7081877874177*^9, 
   3.708187807376794*^9}, 3.708188518978094*^9, {3.7081886957062607`*^9, 
   3.7081886971697187`*^9}, {3.7082013956434593`*^9, 3.708201429670019*^9}, {
   3.708201891218032*^9, 3.7082019068029222`*^9}, {3.708201970113329*^9, 
   3.708201994066194*^9}, 3.708202048650494*^9, {3.708202090349059*^9, 
   3.708202091668852*^9}, {3.708202121876622*^9, 3.70820221425981*^9}, {
   3.708202305109311*^9, 3.7082023054268293`*^9}, {3.708202545143766*^9, 
   3.708202547399588*^9}, {3.70820258987045*^9, 3.708202629832365*^9}, {
   3.708202665232172*^9, 3.7082027330588493`*^9}, {3.708202886529879*^9, 
   3.708202905617319*^9}, {3.7082029420236387`*^9, 3.708203044873226*^9}, {
   3.7082030930451117`*^9, 3.708203097309256*^9}, {3.708203154352446*^9, 
   3.7082032155548277`*^9}, {3.708203253378825*^9, 3.7082032715778*^9}, {
   3.708203351937685*^9, 3.7082034100411263`*^9}, {3.708203450827778*^9, 
   3.708203530518265*^9}, {3.708203599656567*^9, 3.708203604700317*^9}, {
   3.708203639057736*^9, 3.7082036458462973`*^9}, {3.708203686260901*^9, 
   3.708203705379259*^9}, {3.7082037434485273`*^9, 3.708203852183466*^9}, {
   3.708203900811363*^9, 3.70820390766883*^9}, {3.7082040124840107`*^9, 
   3.7082040611218576`*^9}, {3.708204170978829*^9, 3.7082041838984423`*^9}, {
   3.708204855187478*^9, 3.7082049787386513`*^9}, {3.7082050562763243`*^9, 
   3.70820508091325*^9}, {3.708205112802601*^9, 3.708205199044045*^9}, {
   3.708205756496076*^9, 3.7082060863268957`*^9}, {3.7082071989729013`*^9, 
   3.708207268298147*^9}, {3.708207309377491*^9, 3.708207316022614*^9}, {
   3.7082513589923573`*^9, 3.708251363137999*^9}, {3.71241039778872*^9, 
   3.7124104528464947`*^9}, {3.712410527081164*^9, 3.712410551794132*^9}, {
   3.712410862605317*^9, 3.712410870321062*^9}, 3.712684849984779*^9, {
   3.712684889295566*^9, 3.712684890302746*^9}, 3.713106285743485*^9, {
   3.713132170207322*^9, 3.713132190512659*^9}, {3.713132221228931*^9, 
   3.713132309746793*^9}, {3.713132348697817*^9, 3.713132350084618*^9}, {
   3.713132446044881*^9, 3.7131324744036903`*^9}, {3.713132569812896*^9, 
   3.713132593423375*^9}, 3.713132937065194*^9, {3.713132992843746*^9, 
   3.7131330259960747`*^9}, {3.713133087099421*^9, 3.7131331145977087`*^9}, {
   3.7131331462381973`*^9, 3.713133196096858*^9}, {3.713133274885*^9, 
   3.7131333065657263`*^9}, {3.7131333627730417`*^9, 3.713133399225712*^9}, {
   3.7131334409132347`*^9, 3.71313347475574*^9}, {3.713133543175962*^9, 
   3.7131336192342873`*^9}, {3.713133664534443*^9, 3.713133671585661*^9}, {
   3.7131337589988623`*^9, 3.713133796829818*^9}, {3.713133840327998*^9, 
   3.713133861797584*^9}, {3.713133908494566*^9, 3.7131339096561117`*^9}, {
   3.7131340466702414`*^9, 3.713134053770945*^9}, {3.713134116517885*^9, 
   3.713134119755628*^9}, {3.7131344239725657`*^9, 3.7131344393413563`*^9}, {
   3.7131344829487123`*^9, 3.7131344832437963`*^9}, {3.713134526920182*^9, 
   3.713134539181176*^9}, {3.713134575710397*^9, 3.7131348377002573`*^9}, {
   3.713134879499032*^9, 3.713134885689859*^9}, {3.713134932005116*^9, 
   3.713134934502336*^9}, {3.713134987236754*^9, 3.713135023456259*^9}, {
   3.713135058964759*^9, 3.713135080643504*^9}, {3.713135154166329*^9, 
   3.7131351848220387`*^9}, {3.713135266284595*^9, 3.7131352814483557`*^9}, {
   3.713135312390324*^9, 3.713135315970182*^9}, {3.713135389263291*^9, 
   3.713135429907279*^9}, {3.713135512147883*^9, 3.7131355137579813`*^9}, {
   3.713135559617422*^9, 3.7131355684057417`*^9}, {3.7131356267786922`*^9, 
   3.713135628650415*^9}, {3.7131359764930487`*^9, 3.71313603178891*^9}, {
   3.713136076892188*^9, 3.71313608611145*^9}, {3.7131361730807877`*^9, 
   3.713136175964834*^9}, {3.713290280287978*^9, 3.71329030982064*^9}, {
   3.714535048946801*^9, 3.714535051330922*^9}, {3.714958745074868*^9, 
   3.714958805913575*^9}, {3.714958837810873*^9, 3.71495885285179*^9}, {
   3.71495890695225*^9, 3.714958909113392*^9}, 3.714959222690854*^9, {
   3.71495936777509*^9, 3.714959371821104*^9}, {3.714959411306264*^9, 
   3.714959416670599*^9}, {3.7149594952240143`*^9, 3.714959503012011*^9}, {
   3.714959922629156*^9, 3.714959934666502*^9}, {3.714960024998213*^9, 
   3.714960034157295*^9}, {3.7153093307252483`*^9, 3.715309334553411*^9}, {
   3.715310505479718*^9, 3.715310507166555*^9}, {3.715483934497452*^9, 
   3.715484008126895*^9}, {3.7154877316654987`*^9, 3.715487732086771*^9}, {
   3.715564447644535*^9, 3.715564451653482*^9}, {3.7168228707895527`*^9, 
   3.7168228803877*^9}, {3.716872343665985*^9, 3.7168723462094316`*^9}, {
   3.71690167887331*^9, 3.7169016792393303`*^9}, {3.716901746396152*^9, 
   3.716901761109281*^9}, {3.716902460052231*^9, 3.7169024628809223`*^9}, {
   3.717077850290638*^9, 3.717077850596137*^9}, {3.717900531538341*^9, 
   3.717900534135901*^9}, {3.718645180772634*^9, 3.7186452766202707`*^9}, {
   3.718646134601926*^9, 3.718646156812426*^9}, {3.7186461869934072`*^9, 
   3.718646233824437*^9}, {3.7186463120480328`*^9, 3.718646325371129*^9}, {
   3.718647710245871*^9, 3.71864772824081*^9}, {3.718647886041182*^9, 
   3.718647913765196*^9}, {3.718647953775111*^9, 3.718647963241341*^9}, {
   3.718648193908614*^9, 
   3.718648207382024*^9}},ExpressionUUID->"51739c7f-725d-457c-8c23-\
a977f806adf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "inputs"}], " ", "=", " ", 
   "\"\<QuantumDiscreteState takes either a list of quantum states or a set \
of rules\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "qudits"}], " ", "=", " ", 
   "\"\<Input quantum entities are not consistent\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "probs"}], " ", "=", " ", 
    "\"\<Probabilities for states in ensemble must add up to 1\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"qs_QuantumDiscreteState", "?", "QuantumDiscreteStateQ"}], "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"extractQuantumStateProperty", "[", 
     RowBox[{"qs", ",", " ", "prop"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Mixed", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"\"\<Mixture\>\"", ",", " ", 
      RowBox[{"ingredients", " ", ":", " ", 
       RowBox[{"KeyValuePattern", "[", 
        RowBox[{"_QuantumDiscreteState", " ", "->", " ", 
         RowBox[{"_", "?", "NumericQ"}]}], "]"}]}]}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"mixtureHelper", "[", "ingredients", "]"}], "]"}]}], ";"}], "\n",
   "  ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Subsystem", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"\"\<Trace\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{"state_QuantumDiscreteState", ",", " ", "ws_"}], "}"}]}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"state", ",", " ", "ws"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Tensor", " ", "Product", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"\"\<Product\>\"", ",", " ", 
      RowBox[{"states_", "?", "stateListQ"}]}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"tensorHelper", "[", "states", "]"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Pure", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"rules__", "?", "ruleListQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"stateVector", "[", "rules", "]"}], "]"}]}], ";"}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"QuantumDiscreteState", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], "*)"}]}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71119507825423*^9, 3.711195090793158*^9}, {
   3.711195173219952*^9, 3.711195173990535*^9}, {3.711195300274858*^9, 
   3.711195304200856*^9}, {3.711199225645968*^9, 3.711199227746791*^9}, {
   3.7111994397170763`*^9, 3.711199443943767*^9}, {3.7111995257986097`*^9, 
   3.7111995359490433`*^9}, {3.711199618071438*^9, 3.711199618820506*^9}, 
   3.711199743579317*^9, {3.7111999923989573`*^9, 3.711200008360547*^9}, {
   3.7112015356811733`*^9, 3.711201582044498*^9}, {3.711201650381831*^9, 
   3.711201652676557*^9}, {3.7112027921878767`*^9, 3.711202801403425*^9}, {
   3.7112029410568743`*^9, 3.711202941358416*^9}, {3.711243551734209*^9, 
   3.711243580972764*^9}, {3.711243876409671*^9, 3.711243896497086*^9}, {
   3.711244732406856*^9, 3.711244734274239*^9}, {3.7112448075011806`*^9, 
   3.711244824793767*^9}, 3.7112449811892023`*^9, {3.711245031293412*^9, 
   3.7112450323665457`*^9}, {3.711245289589398*^9, 3.7112453150875473`*^9}, {
   3.711246372546438*^9, 3.711246383445312*^9}, {3.7112464219499283`*^9, 
   3.711246446854176*^9}, {3.711246478277512*^9, 3.711246543757587*^9}, {
   3.711246587342846*^9, 3.711246647195842*^9}, {3.711246684672818*^9, 
   3.711246700907126*^9}, {3.711246771569901*^9, 3.7112467893951483`*^9}, {
   3.7112468331964827`*^9, 3.711246846506095*^9}, {3.711246977955761*^9, 
   3.711246989830914*^9}, {3.7112470285290947`*^9, 3.711247163639139*^9}, {
   3.7112472093832197`*^9, 3.711247229419742*^9}, {3.711247332326865*^9, 
   3.711247350634902*^9}, {3.711247435982683*^9, 3.71124744331458*^9}, {
   3.7112476305779867`*^9, 3.711247641035956*^9}, {3.711247729007798*^9, 
   3.711247729373417*^9}, 3.711247888758498*^9, {3.7112484829905*^9, 
   3.711248483785849*^9}, {3.711397522609391*^9, 3.711397525134377*^9}, {
   3.711397564407292*^9, 3.711397564666909*^9}, {3.711544375585524*^9, 
   3.71154440343382*^9}, {3.7115525984623613`*^9, 3.711552626029779*^9}, {
   3.7116273924026203`*^9, 3.711627392494138*^9}, {3.71163980980503*^9, 
   3.711639812954417*^9}, 3.7123727876082697`*^9, {3.71237411851665*^9, 
   3.712374143764954*^9}, {3.712374238351048*^9, 3.712374346756888*^9}, {
   3.712374410049184*^9, 3.712374414215583*^9}, {3.712374445791394*^9, 
   3.7123744790731287`*^9}, {3.712374549221965*^9, 3.712374551104274*^9}, {
   3.712684758592902*^9, 3.712684831187245*^9}, {3.7126848653228817`*^9, 
   3.712684881126989*^9}, {3.7130563852507467`*^9, 3.713056499857234*^9}, 
   3.7130565708577127`*^9, {3.7131362112264137`*^9, 3.713136227761972*^9}, {
   3.713140260510824*^9, 3.713140300333269*^9}, {3.71314040937573*^9, 
   3.713140409492947*^9}, {3.713140461243638*^9, 3.7131404661201982`*^9}, {
   3.71314051081528*^9, 3.713140549141314*^9}, {3.7131405978312283`*^9, 
   3.713140683568078*^9}, {3.71314071477188*^9, 3.713140742302176*^9}, {
   3.713140866222556*^9, 3.713140881753984*^9}, {3.7131409620235167`*^9, 
   3.713140968221732*^9}, {3.713141106533104*^9, 3.713141119487718*^9}, {
   3.713141197348469*^9, 3.71314120768156*^9}, {3.713141416737941*^9, 
   3.713141482287239*^9}, {3.713141531572831*^9, 3.713141548696025*^9}, {
   3.713141638394002*^9, 3.713141697604228*^9}, {3.7131421231327963`*^9, 
   3.713142174292354*^9}, {3.71344598309162*^9, 3.713445997828782*^9}, 
   3.713454821263361*^9, {3.713455121364049*^9, 3.713455131195997*^9}, {
   3.7144736942383957`*^9, 3.7144736951688547`*^9}, {3.714473946526971*^9, 
   3.714473952902663*^9}, {3.714474500142112*^9, 3.7144745037938643`*^9}, {
   3.714474616871022*^9, 3.7144746245886374`*^9}, 3.714474658736916*^9, {
   3.714474772221209*^9, 3.714474775591218*^9}, {3.714535034429192*^9, 
   3.7145350425228252`*^9}, {3.714960122015671*^9, 3.7149601233081617`*^9}, {
   3.715308436970063*^9, 3.7153084647611847`*^9}, {3.715308517291601*^9, 
   3.7153085862716093`*^9}, {3.7153086802913*^9, 3.7153086821593513`*^9}, {
   3.715309206221141*^9, 3.715309222850601*^9}, 3.715310450187285*^9, {
   3.7153110694659357`*^9, 3.7153110723609343`*^9}, {3.715474320545826*^9, 
   3.715474450999227*^9}, {3.715474488209734*^9, 3.715474489873835*^9}, {
   3.715486318433661*^9, 3.7154863644525347`*^9}, {3.715486397504311*^9, 
   3.715486399707944*^9}, {3.715486455091145*^9, 3.7154864722140093`*^9}, {
   3.715486604275805*^9, 3.715486681452546*^9}, {3.715487649449133*^9, 
   3.715487681414627*^9}, {3.7154877721650476`*^9, 3.715487773952559*^9}, {
   3.715488171933415*^9, 3.715488206797964*^9}, {3.715563379434546*^9, 
   3.715563412324445*^9}, {3.7155643706970797`*^9, 3.715564371196323*^9}, {
   3.715564757742651*^9, 3.715564801003358*^9}, {3.71682286367803*^9, 
   3.716822864156488*^9}, {3.7179051342799788`*^9, 3.717905138049047*^9}, {
   3.7179051744862547`*^9, 3.71790518924796*^9}, {3.71808148933832*^9, 
   3.7180814904379377`*^9}, 
   3.7180820065545597`*^9},ExpressionUUID->"a1353e4b-c5ea-4c25-aca6-\
86d36a4ede1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteStateQ", "]"}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteStateQ", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Head", "[", "qs", "]"}], " ", "===", " ", 
         "QuantumDiscreteState"}], ")"}], " ", "&&", " ", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Keys", "[", 
          RowBox[{"qs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
         "\"\<QuditDimensions\>\""}], "]"}], " ", "&&", "\n", "\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"qs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
             "\"\<StateVector\>\""}], "]"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{"Length", " ", "@", " ", 
             RowBox[{"Dimensions", " ", "@", " ", 
              RowBox[{
               RowBox[{"qs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "\"\<StateVector\>\"", "]"}], "]"}]}]}], " ", 
            "\[Equal]", " ", "1"}]}], ")"}], " ", "||", "\n", "\t", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"qs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
             "\"\<DensityMatrix\>\""}], "]"}], "  ", "&&", " ", 
           RowBox[{
            RowBox[{"Length", " ", "@", " ", 
             RowBox[{"Dimensions", " ", "@", " ", 
              RowBox[{
               RowBox[{"qs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "\"\<DensityMatrix\>\"", "]"}], "]"}]}]}], " ", 
            "\[Equal]", " ", "2"}]}], ")"}]}], ")"}]}], ",", "\n", "\t", 
      "True", ",", " ", "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.715473898084507*^9, 3.715474126306176*^9}, {
   3.715474172485951*^9, 3.715474304549198*^9}, {3.715474745264839*^9, 
   3.7154747541099443`*^9}, {3.715475064986155*^9, 3.715475073782658*^9}, {
   3.715477484374016*^9, 3.715477498292148*^9}, {3.71690219392136*^9, 
   3.716902225516691*^9}, {3.716902263542624*^9, 3.716902291963805*^9}, 
   3.717082306349883*^9, 3.7178974103363037`*^9, 
   3.7184180483015003`*^9},ExpressionUUID->"863fd740-9993-43c2-b156-\
800650d5bc13"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantum Operations", "Chapter",
 CellDingbat->None,
 CellChangeTimes->{{3.7076486444926605`*^9, 3.707648646449054*^9}, {
  3.707842932915454*^9, 3.707842934572921*^9}, {3.707842980310257*^9, 
  3.7078429813051033`*^9}, {3.711397596952771*^9, 
  3.711397598278742*^9}},ExpressionUUID->"8dd4d474-e741-4243-98a0-\
72513c9e9e99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "opDisplayFormat", "]"}], ";"}], "\n", "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{"\[Theta]1_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"\"\<D(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]1", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rx\>\"", ",", " ", 
       RowBox[{"\[Theta]2_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<R\>\"", ",", "\"\<x\>\""}], "]"}], ",", " ", 
      "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]2", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Ry\>\"", ",", " ", 
       RowBox[{"\[Theta]3_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<R\>\"", ",", "\"\<y\>\""}], "]"}], ",", " ", 
      "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]3", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Rz\>\"", ",", " ", 
        RowBox[{"\[Theta]4_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
      " ", "2"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\"\<R\>\"", ",", "\"\<z\>\""}], "]"}], ",", " ", 
       "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
     RowBox[{"ToString", "[", "\[Theta]4", "]"}], "<>", "\"\<)\>\""}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<Identity\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}],
    " ", ":=", " ", "\"\<\[ScriptCapitalI]\[ScriptD]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalH]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<PauliYGate\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ",
     ":=", " ", "\"\<\[ScriptCapitalY]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<PauliXGate\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", 
   ":=", " ", "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<PauliXGate\>\"", ",", " ", "1", ",", " ", "D_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalX]\>\"", ",", "D"}], "]"}], ",", " ", 
     "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{
     "\"\<PauliXGate\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subsuperscript", "[", 
       RowBox[{"\"\<\[ScriptCapitalX]\>\"", ",", " ", "d", ",", " ", "k"}], 
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<PauliZGate\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", 
   ":=", " ", "\"\<\[ScriptCapitalZ]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<PauliZGate\>\"", ",", " ", "1", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalZ]\>\"", ",", "d"}], "]"}], ",", " ", 
     "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{
     "\"\<PauliZGate\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subsuperscript", "[", 
       RowBox[{"\"\<\[ScriptCapitalZ]\>\"", ",", " ", "d", ",", " ", "k"}], 
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalQ]\[ScriptCapitalF]\[ScriptCapitalT]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{
      "\"\<\[ScriptCapitalQ]\[ScriptCapitalF]\[ScriptCapitalT]\>\"", ",", 
       "d"}], "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{
     "\"\<Fourier\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], "]"}],
     " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subsuperscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalQ]\[ScriptCapitalF]\[ScriptCapitalT]\>\"", ",", 
        " ", "d", ",", " ", "k"}], "]"}], ",", " ", "StandardForm"}], "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<SUM\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalS]\[ScriptU]\[ScriptM]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<SUM\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<\[ScriptCapitalS]\[ScriptU]\[ScriptM]\>\"", ",", "d"}], 
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<S\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalS]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<T\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalT]\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalF]\[ScriptR]\[ScriptE]\[ScriptD]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalT]\[ScriptO]\[ScriptF]\[ScriptF]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<SWAP\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<SWAP\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\"", ",", "d"}], "]"}], ",", " ", "StandardForm"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<RootSWAP\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
     "Sqrt", "[", 
      "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\"", "]"}], ",", " ", "StandardForm"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<RootSWAP\>\"", ",", " ", "1", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Sqrt", " ", "@", " ", 
       RowBox[{"Subscript", "[", 
        RowBox[{
        "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\"", ",", "d"}], "]"}]}], ",", " ", "StandardForm"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<NOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<RootNOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "\"\<\[ScriptCapitalX]\>\"", "]"}], ",", " ", 
      "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalX]\>\""}],
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<CPhase\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalZ]\>\""}], "]"}],
       ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", 
       RowBox[{"Subscript", "[", 
        RowBox[{"\"\<\[ScriptCapitalX]\>\"", ",", " ", 
         RowBox[{"ToString", "[", "d", "]"}]}], "]"}]}], "]"}], ",", " ", 
     "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{"\"\<CPhase\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", 
        RowBox[{"Subscript", "[", 
         RowBox[{"\"\<\[ScriptCapitalZ]\>\"", ",", " ", 
          RowBox[{"ToString", "[", "d", "]"}]}], "]"}]}], "]"}], ",", " ", 
      "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDisplayFormat", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"un_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", 
      "k_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalU]\>\""}], "]"}],
       ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "1", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "\"\<\[ScriptCapitalU]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opDisplayFormat", "[", 
    RowBox[{
     RowBox[{"cond_", "?", "condListQ"}], ",", " ", "k_Integer", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\>\""}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7129684705609426`*^9, 3.712968567933194*^9}, {
   3.712968671344685*^9, 3.712968731147493*^9}, {3.7129688105354853`*^9, 
   3.7129688670063*^9}, {3.712968978029748*^9, 3.71296926802986*^9}, {
   3.712969308927154*^9, 3.71296935158243*^9}, {3.712969508457259*^9, 
   3.712969610325734*^9}, {3.712970634126395*^9, 3.712970952636045*^9}, {
   3.712971747145282*^9, 3.712971781992641*^9}, {3.712971863701434*^9, 
   3.712971949279022*^9}, {3.712972371705594*^9, 3.7129723953020782`*^9}, {
   3.712972559979014*^9, 3.712972569696015*^9}, 3.712972744897488*^9, {
   3.712972926819644*^9, 3.712972940736354*^9}, {3.712972974876416*^9, 
   3.712972976503883*^9}, {3.7129730967439537`*^9, 3.712973114341484*^9}, {
   3.7132007140027113`*^9, 3.713200742831785*^9}, {3.713285146912704*^9, 
   3.713285160003614*^9}, {3.713285215558818*^9, 3.713285218326665*^9}, {
   3.7134905759843388`*^9, 3.713490577060152*^9}, {3.715308772176961*^9, 
   3.715308780293708*^9}, {3.7159940458755693`*^9, 3.715994083855802*^9}, {
   3.71599412922722*^9, 3.7159942938273*^9}, {3.715994332583449*^9, 
   3.7159944812733393`*^9}, 3.7159946633809767`*^9, {3.7159947833861322`*^9, 
   3.715994965502123*^9}, {3.7168631383066473`*^9, 3.716863156907363*^9}, {
   3.7168734072620363`*^9, 3.7168734076617947`*^9}, {3.716904584385914*^9, 
   3.716904614526658*^9}, {3.7169065391997147`*^9, 3.716906540266697*^9}, {
   3.7169067120703297`*^9, 3.7169067861239367`*^9}, {3.716907090472089*^9, 
   3.716907200337124*^9}, {3.716907771296056*^9, 3.716907797507053*^9}, {
   3.7169078278837957`*^9, 3.716907831711348*^9}, {3.716921463292527*^9, 
   3.716921465416438*^9}, {3.716921672856338*^9, 3.716921680564582*^9}, {
   3.718585974884763*^9, 
   3.718586011569913*^9}},ExpressionUUID->"22dd2b85-d337-481a-b271-\
037db0251abc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteConditionalOperation", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"QuantumDiscreteConditionalOperation", "[", "specs_", "]"}], ",",
      " ", "StandardForm"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "specs", "]"}], " ", "&&", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"specs", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], " ", "\[Equal]", " ", "2"}], 
         "&"}]}], "]"}], " ", "&&", " ", "\n", "\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"specs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
        "QuantumDiscreteOperationQ"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{
     "Panel", " ", "@", " ", 
      "\"\<\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\>\""}], ",", " ", 
     "$Failed"}], "]"}]}], "\n", "\t\t\t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\"\<\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]: \>\"", "<>", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"Map", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", "\n", "\t\t\t\t\t", 
                RowBox[{"opDisplayFormat", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
               " ", "<>", " ", "\"\<: \>\"", " ", "<>", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", " ", 
             RowBox[{"specs", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
          ",", " ", "\"\<  \>\""}], "]"}]}], ")"}], ",", " ", "$Failed"}], 
     "]"}], ";"}], "*)"}], "\n", "\t"}], "\n"}], "Code",
 CellChangeTimes->{{3.717120958534665*^9, 3.7171210116193132`*^9}, {
  3.7171210430398207`*^9, 3.71712108517829*^9}, {3.717121123245666*^9, 
  3.717121215219892*^9}, {3.7171212656503277`*^9, 3.717121324636771*^9}, {
  3.717122982130707*^9, 3.717123071240459*^9}, {3.717123124681918*^9, 
  3.717123186534954*^9}, {3.717123218459938*^9, 3.717123221890188*^9}, {
  3.717123308572657*^9, 3.7171233605093403`*^9}, {3.717123396804967*^9, 
  3.717123426130969*^9}, {3.717123506861659*^9, 3.717123535056735*^9}, {
  3.7171240147062807`*^9, 3.717124024167635*^9}, {3.718572003551936*^9, 
  3.718572024952978*^9}},ExpressionUUID->"dffdc6bd-d1fb-4f05-b9bf-\
4ca301e9f75c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteConditionalOperationQ", "]"}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteConditionalOperationQ", "[", "qcond_", "]"}], " ",
     ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cand", " ", "=", " ", 
        RowBox[{"qcond", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"ListQ", "[", "cand", "]"}], " ", "&&", " ", "\n", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"cand", ",", " ", 
         RowBox[{
          RowBox[{"ListQ", "[", "#", "]"}], "&"}]}], "]"}], "&&", "\n", 
       "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"cand", ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], " ", "\[Equal]", " ", "2"}], 
           ")"}], "&"}]}], "]"}], " ", "&&", "\n", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"cand", ",", " ", 
         RowBox[{
          RowBox[{"condQ", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}]}], "]"}], " ", "&&", 
       "\n", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"cand", ",", " ", 
         RowBox[{
          RowBox[{"QuantumDiscreteOperationQ", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteConditionalOperationQ", "[", "cond___", "]"}], " ", 
  ":=", " ", "False"}]}], "Code",
 CellChangeTimes->{{3.717121489228054*^9, 3.717121490867632*^9}, {
   3.717121581497608*^9, 3.7171219423381577`*^9}, {3.717122609162841*^9, 
   3.7171226156744947`*^9}, 3.7178972743610497`*^9, 3.71790237090492*^9, {
   3.7179024164899473`*^9, 3.717902449626883*^9}, {3.717902543328961*^9, 
   3.7179026732780313`*^9}, {3.7179028222623873`*^9, 
   3.7179028238024817`*^9}, {3.71790286652765*^9, 3.717902881634248*^9}, {
   3.7179029167865467`*^9, 
   3.717903033040003*^9}},ExpressionUUID->"371eed8f-c6c8-4633-b34d-\
08c6a599579a"],

Cell[CellGroupData[{

Cell["Valid Discrete Operation Checking", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711627974628892*^9, 3.711627978050462*^9}, {
  3.7116280750075493`*^9, 3.7116280800925217`*^9}, {3.715992756155876*^9, 
  3.715992760663678*^9}},ExpressionUUID->"9473a38c-b23d-4b1d-8eef-\
372d8377834e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "discreteOperationQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{
    "\"\<PauliXGate\>\"", "|", "\"\<PauliYGate\>\"", "|", 
     "\"\<PauliZGate\>\"", "|", "\"\<Identity\>\""}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{"\"\<Hadamard\>\"", "|", " ", "\"\<Fourier\>\""}], "]"}], ":=", 
   "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{"\"\<S\>\"", "|", "\"\<T\>\""}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteOperationQ", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<Rx\>\"", " ", "|", " ", "\"\<Ry\>\"", " ", "|", " ", 
        "\"\<Rz\>\""}], " ", ",", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], "]"}], ":=", "True"}],
    ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteOperationQ", "[", 
     RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], "]"}], ":=", "True"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{
    "\"\<CNOT\>\"", "|", "\"\<CPhase\>\"", "|", "\"\<SUM\>\"", "|", 
     "\"\<Toffoli\>\""}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\"", "|", "\"\<Fredkin\>\""}],
     "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteOperationQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], "]"}], ":=", "True"}],
    ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", 
    RowBox[{"qop_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteOperationQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<CU\>\"", ",", " ", 
       RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], "]"}], ":=", "True"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationQ", "[", "expr___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "op"}], ",", "expr"}], "]"}],
      ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711198978902726*^9, 3.711199008205306*^9}, {
   3.711199667452841*^9, 3.711199670222505*^9}, {3.71155259862556*^9, 
   3.711552598705518*^9}, {3.711627450751006*^9, 3.711627450870048*^9}, 
   3.711627744051405*^9, 3.711627962922064*^9, 3.711628034756383*^9, {
   3.71162809049618*^9, 3.711628113397143*^9}, {3.711893203227656*^9, 
   3.711893206603079*^9}, {3.711916226919194*^9, 3.7119162956159163`*^9}, {
   3.711922365809868*^9, 3.711922414422842*^9}, {3.711922483166244*^9, 
   3.7119224997268457`*^9}, {3.711922546379245*^9, 3.7119225624429817`*^9}, 
   3.712328391128015*^9, {3.7123284473560123`*^9, 3.7123284495350313`*^9}, 
   3.7123587358431387`*^9, {3.712359762686832*^9, 3.712359781355592*^9}, {
   3.71236875107937*^9, 3.712368758999258*^9}, {3.712411095669664*^9, 
   3.7124111585578423`*^9}, {3.71297206509552*^9, 3.712972084022666*^9}, {
   3.712972131247923*^9, 3.7129721572208757`*^9}, {3.712972320891046*^9, 
   3.7129723363050623`*^9}, {3.71297242395415*^9, 3.712972438937728*^9}, {
   3.712972579161079*^9, 3.712972582229478*^9}, {3.7132003183932257`*^9, 
   3.713200372030808*^9}, {3.7132004034955072`*^9, 3.713200417244158*^9}, {
   3.713200508494343*^9, 3.713200524170044*^9}, {3.71320095255101*^9, 
   3.7132009570816393`*^9}, {3.713202057359105*^9, 3.71320205936329*^9}, {
   3.713203511589941*^9, 3.7132035208260527`*^9}, {3.7134552665131483`*^9, 
   3.713455273707633*^9}, {3.7144760637946043`*^9, 3.714476073855507*^9}, {
   3.7145350642027273`*^9, 3.714535071466085*^9}, {3.715308792670784*^9, 
   3.715308809605103*^9}, {3.715816710071066*^9, 3.715816793295678*^9}, {
   3.715816847894457*^9, 3.715816857132799*^9}, {3.7158182966564913`*^9, 
   3.7158183089518757`*^9}, {3.715818381400161*^9, 3.715818384582245*^9}, {
   3.715993227226075*^9, 3.715993230512813*^9}, {3.7168713646124268`*^9, 
   3.716871380259962*^9}, 3.71687346838511*^9, {3.71690618338161*^9, 
   3.716906201376052*^9}, {3.716906590909512*^9, 
   3.716906592552697*^9}},ExpressionUUID->"f89fb519-b085-471b-927a-\
919b1cb3f1e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wire Dimensions Checking", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711627974628892*^9, 3.711627978050462*^9}, {
  3.7116280750075493`*^9, 
  3.7116280800925217`*^9}},ExpressionUUID->"4283a64f-ce4a-4ec9-98b4-\
8ba689fa960d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "wiresQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\"", "|", 
      "\"\<Identity\>\""}], ",", " ", "D_Integer"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wiresQ", "[", 
     RowBox[{"\"\<PauliYGate\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{
     RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], ",", " ", "2"}], "]"}], 
   ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wiresQ", "[", 
     RowBox[{
      RowBox[{"\"\<S\>\"", "|", "\"\<T\>\"", "|", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Rx\>\"", "|", "\"\<Ry\>\"", "|", "\"\<Rz\>\""}], ",", 
         " ", 
         RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}]}], ",", " ", "2"}], 
     "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPhase\>\""}], ",", " ", "d_Integer"}],
     "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<SUM\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<RootSWAP\>\"", ",", " ", "d_Integer"}], "]"}], ":=", 
   "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wiresQ", "[", 
     RowBox[{"\"\<SWAP\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<Toffoli\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wiresQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", 
        RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "2"}], 
     "]"}], ":=", "True"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wiresQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", 
      "d_Integer"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresQ", "[", "expr___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "wires"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711628096282588*^9, {3.7118932161043577`*^9, 3.711893221591734*^9}, {
   3.711916332063767*^9, 3.711916345297983*^9}, {3.712358260398993*^9, 
   3.7123583615533733`*^9}, 3.712358748608156*^9, {3.712359795558028*^9, 
   3.712359823704911*^9}, {3.712368461176449*^9, 3.712368467500946*^9}, {
   3.7123687842036943`*^9, 3.71236881940063*^9}, {3.712411178311574*^9, 
   3.712411219580862*^9}, {3.712972207133834*^9, 3.712972212761271*^9}, {
   3.7129723041516333`*^9, 3.712972314713561*^9}, {3.712972443333146*^9, 
   3.712972452992194*^9}, 3.7129725907633553`*^9, {3.712973431304184*^9, 
   3.7129734441045227`*^9}, {3.7129734921326237`*^9, 3.712973495291671*^9}, {
   3.712973526320224*^9, 3.712973539226349*^9}, {3.714476115503478*^9, 
   3.714476130908833*^9}, 3.714477167577036*^9, {3.715308813124794*^9, 
   3.715308827366807*^9}, {3.715992255462944*^9, 3.715992266597747*^9}, {
   3.7159923673189983`*^9, 3.715992446275567*^9}, {3.7159932036505404`*^9, 
   3.715993215390847*^9}, {3.7168713039896173`*^9, 3.716871355349173*^9}, 
   3.716873460361434*^9, {3.7169062081645203`*^9, 3.716906260498324*^9}, {
   3.716906600029148*^9, 
   3.7169066154492483`*^9}},ExpressionUUID->"dba7f8eb-be36-4bd7-8d44-\
1e997d7e066f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arity Checking", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711627974628892*^9, 
  3.711627978050462*^9}},ExpressionUUID->"b61b4b71-a9d9-400a-bf1e-\
6be27216f1de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "arityQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{
      "\"\<PauliXGate\>\"", "|", "\"\<PauliYGate\>\"", "|", 
       "\"\<PauliZGate\>\"", "|", "\"\<Identity\>\""}], ",", "1"}], "]"}], ":=",
     "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{"\"\<Hadamard\>\"", "|", "\"\<Fourier\>\""}], ",", "1"}], "]"}],
     ":=", "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arityQ", "[", 
    RowBox[{
     RowBox[{"\"\<S\>\"", "|", "\"\<T\>\""}], ",", "1"}], "]"}], ":=", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arityQ", "[", 
    RowBox[{
     RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], ",", "1"}], "]"}], ":=",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Rx\>\"", "|", "\"\<Ry\>\"", "|", "\"\<Rz\>\""}], ",", 
        " ", 
        RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", "1"}], "]"}], ":=",
     "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arityQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<SUM\>\"", "|", "\"\<CPhase\>\""}], ",",
      "2"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\""}], ",", "2"}], "]"}], ":=",
     "True"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{"\"\<Fredkin\>\"", "|", 
       RowBox[{"{", 
        RowBox[{"\"\<Deutsch\>\"", ",", " ", 
         RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}]}], ",", " ", "3"}], 
     "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "n_Integer"}], "]"}], ":=", 
    "True"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"arityQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "n_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"IntegerQ", " ", "@", " ", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Length", " ", "@", " ", "un"}], ",", " ", 
      RowBox[{"1", "/", "n"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"arityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", "2"}], 
     "]"}], " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"arityQ", "[", "expr__", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "arity"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711627966785308*^9, {3.711893229852388*^9, 3.711893233891757*^9}, {
   3.711916386652781*^9, 3.711916409279182*^9}, 3.712358405535966*^9, 
   3.7123587565396442`*^9, {3.7123598528664227`*^9, 3.71235991648102*^9}, {
   3.7124112318351803`*^9, 3.71241125945887*^9}, {3.7129722199592247`*^9, 
   3.712972225984437*^9}, {3.712972286470264*^9, 3.712972294474381*^9}, {
   3.712972463117008*^9, 3.712972470233869*^9}, {3.712972529313553*^9, 
   3.7129725452115993`*^9}, 3.712972595181594*^9, {3.712973332657415*^9, 
   3.712973408158164*^9}, {3.71447619607191*^9, 3.714476205830765*^9}, {
   3.714476392890403*^9, 3.714476408802706*^9}, {3.714476507655168*^9, 
   3.714476507747018*^9}, {3.715308832539727*^9, 3.715308842725155*^9}, {
   3.715992526680908*^9, 3.715992552718854*^9}, {3.715993193738078*^9, 
   3.715993220136948*^9}, {3.716871272221931*^9, 3.716871290827629*^9}, 
   3.7168734516654873`*^9, {3.716906280118031*^9, 3.716906287690298*^9}, {
   3.716906395983388*^9, 
   3.7169064211997538`*^9}},ExpressionUUID->"b737e85e-82a0-40e6-b151-\
7bf29e79ff67"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Power Checking", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711627974628892*^9, 3.711627978050462*^9}, {
  3.7116280750075493`*^9, 3.7116280800925217`*^9}, {3.715992779561508*^9, 
  3.7159927802473087`*^9}},ExpressionUUID->"53397cfe-6d83-4f3f-8de7-\
106a0f0790e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "powerQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<PauliXGate\>\"", "|", "\"\<Fourier\>\"", "|", 
      "\"\<PauliZGate\>\""}], ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
    "]"}], ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<Hadamard\>\"", "|", "\"\<PauliYGate\>\"", "|", "\"\<Identity\>\""}],
      ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<S\>\"", "|", "\"\<T\>\"", "|", "\"\<NOT\>\"", "|", 
      "\"\<RootNOT\>\""}], ",", " ", "1", ",", " ", "2"}], "]"}], ":=", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"powerQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Rx\>\"", "|", "\"\<Ry\>\"", "|", "\"\<Rz\>\""}], ",", 
        " ", 
        RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
      " ", "2"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPhase\>\"", "|", "\"\<SUM\>\""}], ",",
      " ", "1", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\""}], ",", "1", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{"\"\<Fredkin\>\"", "|", 
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", " ", 
        RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}]}], ",", " ", "1", ",",
      " ", "2"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"powerQ", "[", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], ":=", 
    "True"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "1", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"powerQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", "1", ",", 
      " ", "d_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"powerQ", "[", "expr__", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "power"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711627966785308*^9, {3.711893229852388*^9, 3.711893233891757*^9}, {
   3.711916386652781*^9, 3.711916409279182*^9}, 3.712358405535966*^9, 
   3.7123587565396442`*^9, {3.7123598528664227`*^9, 3.71235991648102*^9}, {
   3.7124112318351803`*^9, 3.71241125945887*^9}, {3.7129722199592247`*^9, 
   3.712972225984437*^9}, {3.712972286470264*^9, 3.712972294474381*^9}, {
   3.712972463117008*^9, 3.712972470233869*^9}, {3.712972529313553*^9, 
   3.7129725452115993`*^9}, 3.712972595181594*^9, {3.712973332657415*^9, 
   3.712973408158164*^9}, {3.71447619607191*^9, 3.714476205830765*^9}, {
   3.714476392890403*^9, 3.714476408802706*^9}, {3.714476507655168*^9, 
   3.714476507747018*^9}, {3.715308832539727*^9, 3.715308842725155*^9}, {
   3.715992526680908*^9, 3.715992552718854*^9}, {3.715992783561956*^9, 
   3.715992784961246*^9}, {3.7159928358988132`*^9, 3.71599285171985*^9}, {
   3.715992891481058*^9, 3.715993048112455*^9}, {3.715993091186911*^9, 
   3.715993183641243*^9}, {3.715993242863654*^9, 3.715993260380096*^9}, 
   3.7159933095200653`*^9, {3.715995601420124*^9, 3.715995609401073*^9}, {
   3.7168636374567223`*^9, 3.716863638071794*^9}, {3.716873440953582*^9, 
   3.716873443001604*^9}, {3.716904723314499*^9, 3.716904797030004*^9}, {
   3.7169064297606573`*^9, 3.7169064544790382`*^9}, {3.716907026724821*^9, 
   3.716907029470969*^9}},ExpressionUUID->"85fb908e-8ca9-4ce6-8c83-\
28aff4f96a58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "paulix", ",", " ", "pauliy", ",", " ", "pauliz", ",", " ", "rootNot", 
     ",", " ", "hadamard", ",", " ", "Rx", ",", " ", "Ry", ",", " ", "Rz", 
     ",", " ", "identity", ",", " ", "fourier"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"pauliy", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"-", "\[ImaginaryI]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
       "\[ImaginaryI]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"not", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rootNot", " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"not", ",", " ", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hadamard", " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rz", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "]"}]}]}], "}"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rx", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"\[ImaginaryI]", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "*", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ry", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"paulix", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", "d", ",", "1"}], "]"}], "\[Equal]",
            "j"}]}], ")"}], "\[Rule]", "  ", "1"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", "d"}], "}"}]}], "]"}], ",", " ", "k"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pauliz", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j_", ",", "j_"}], "}"}], "\[RuleDelayed]", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
          RowBox[{"j", "/", "d"}]}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", "d"}], "}"}]}], "]"}], ",", " ", "k"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"identity", "[", "d_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fourier", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{
        RowBox[{"Exp", "[", " ", 
         RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "*", "k"}], ",", "d"}], "]"}], 
           "/", "d"}]}], "]"}], "/", 
        RowBox[{"Sqrt", "[", "d", "]"}]}]}], ")"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"d", ",", "d"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7116278430435266`*^9, 3.711627843289535*^9}, {
   3.711893168613676*^9, 3.7118931866224337`*^9}, {3.7119159245301533`*^9, 
   3.7119160251274548`*^9}, {3.711916062221611*^9, 3.7119160945398073`*^9}, 
   3.712360789053784*^9, {3.7129693987790956`*^9, 3.71296945703728*^9}, 
   3.715994773745091*^9, {3.716862193366439*^9, 3.716862213738224*^9}, {
   3.7168664389598703`*^9, 3.71686650264631*^9}, {3.7168734315615883`*^9, 
   3.716873432929658*^9}, {3.7169047520803623`*^9, 3.716904752966516*^9}, {
   3.7169064639636717`*^9, 
   3.7169064642718*^9}},ExpressionUUID->"d0da4721-210e-4321-b41c-\
4ad47a1592f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "sum", ",", " ", "swap", ",", " ", "rootSwap", ",", " ", "control", ",", 
     " ", "cnot", ",", " ", "cphase", ",", " ", "toffoli", ",", " ", 
     "fredkin", ",", " ", "deutsch"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sum", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d"}], "]"}], " ", 
          "\n", "\t", "\[Equal]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"Total", " ", "@", " ", 
               RowBox[{"IntegerDigits", "[", 
                RowBox[{
                 RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d"}], "]"}]}], 
              ",", " ", "d"}], "]"}]}], "}"}]}]}], ")"}], " ", "\[Rule]", " ",
        "1"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"swap", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", "2"}],
            "]"}], " ", "\n", "\t", "\[Equal]", " ", 
          RowBox[{"Reverse", " ", "@", " ", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
             "2"}], "]"}]}]}]}], ")"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rootSwap", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"swap", "[", "d", "]"}], ",", " ", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"control", "[", 
     RowBox[{"d_Integer", ",", " ", "u_", ",", " ", "a_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", "\n", "\t ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "a"}], " ", 
          "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "a"}]}], 
         ",", "\n", "\t ", 
         RowBox[{"u", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}], ",", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}]}], "]"}], 
          "]"}], ",", "\n", "\t ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", "True", ",", " ", "0"}], 
        "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cnot", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
             "2"}], "]"}], " ", "\[Equal]", " ", "\n", "\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"-", " ", 
                RowBox[{"Total", " ", "@", " ", 
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{
                   RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ",
                    "2"}], "]"}]}]}], ",", " ", "d"}], "]"}]}], "}"}]}], 
          ")"}], ",", "\n", "\t", "1", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cphase", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}]}], ",", " ", 
         
         RowBox[{"Exp", "[", " ", 
          RowBox[{
          "2", " ", "*", " ", "Pi", " ", "*", " ", "\[ImaginaryI]", " ", "*", 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "/", "d"}]}], "]"}],
          ",", "\n", "\t ", "True", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toffoli", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
            RowBox[{"i", " ", "<", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", "-", " ", "1"}]}]}], ")"}], " ", "||",
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", "-", " ", "1"}]}], " ", "&&", " ", 
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "n"}]}]}], ")"}], "||", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", "-", " ", "1"}]}], " ", "&&", " ", 
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "n"}]}]}], ")"}]}], ",", " ", "1", ",", " ", 
         "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "^", "n"}], ",", 
        RowBox[{"2", "^", "n"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fredkin", " ", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}],
       ",", " ", 
      RowBox[{"{", 
       RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deutsch", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7123604590120497`*^9, 3.712360504549571*^9}, {
   3.71236074376906*^9, 3.7123607876468077`*^9}, {3.712360956876532*^9, 
   3.712361093860203*^9}, {3.712361384531433*^9, 3.71236138541682*^9}, {
   3.712361672069833*^9, 3.712361686657036*^9}, {3.712361718272491*^9, 
   3.712361732431643*^9}, {3.7123618303534393`*^9, 3.712361835334807*^9}, {
   3.712362071278109*^9, 3.712362091335247*^9}, {3.712362124578648*^9, 
   3.712362192184993*^9}, {3.712362275281781*^9, 3.712362304726241*^9}, {
   3.712362410607421*^9, 3.712362432903242*^9}, {3.712362493566148*^9, 
   3.712362594123538*^9}, {3.712362638388043*^9, 3.7123626618617163`*^9}, {
   3.712362725200081*^9, 3.712362730448077*^9}, {3.712362819455179*^9, 
   3.712362830303667*^9}, {3.712362869201971*^9, 3.7123629369592943`*^9}, {
   3.7123630180628643`*^9, 3.7123630880571938`*^9}, {3.712363137612783*^9, 
   3.712363168950859*^9}, {3.712363202886537*^9, 3.7123632038914413`*^9}, {
   3.712363269963624*^9, 3.712363270055517*^9}, {3.712363303227912*^9, 
   3.712363303309057*^9}, {3.712363466751629*^9, 3.712363485139674*^9}, {
   3.712363538772883*^9, 3.712363541624593*^9}, {3.7123636398913393`*^9, 
   3.712363659581258*^9}, {3.712363802697412*^9, 3.712363803485156*^9}, {
   3.712363838284791*^9, 3.712363858753538*^9}, {3.712363960951539*^9, 
   3.7123639715190067`*^9}, {3.712364279294125*^9, 3.712364307521596*^9}, {
   3.712364616356872*^9, 3.712364679186853*^9}, {3.712364741354355*^9, 
   3.712364804716555*^9}, {3.712364844863818*^9, 3.712364847390418*^9}, {
   3.712364886323525*^9, 3.712364948366549*^9}, {3.712364998438534*^9, 
   3.7123650775768127`*^9}, {3.712365114937334*^9, 3.712365244769127*^9}, 
   3.712365279746662*^9, {3.712365403892071*^9, 3.712365460462977*^9}, {
   3.712365521870961*^9, 3.712365568115073*^9}, {3.712365716037512*^9, 
   3.712365732209968*^9}, {3.712365820880282*^9, 3.712365821475018*^9}, {
   3.712365870153413*^9, 3.712365873825449*^9}, {3.7123659084195843`*^9, 
   3.712365908860791*^9}, {3.712365967242805*^9, 3.7123659674675922`*^9}, {
   3.7123660288901987`*^9, 3.712366124046949*^9}, {3.712366161593215*^9, 
   3.712366173546135*^9}, {3.712366222064199*^9, 3.7123662414114437`*^9}, {
   3.712366299656809*^9, 3.7123663099753237`*^9}, {3.7123663598806334`*^9, 
   3.7123663831437187`*^9}, {3.712366420766018*^9, 3.712366426990053*^9}, {
   3.7123664619888887`*^9, 3.712366498671918*^9}, {3.7123670070873528`*^9, 
   3.7123670375770407`*^9}, 3.71236711574851*^9, {3.712367203566156*^9, 
   3.71236722333046*^9}, {3.712368096968631*^9, 3.712368288944454*^9}, {
   3.712368536584958*^9, 3.7123686259636793`*^9}, {3.71236871523526*^9, 
   3.712368717167465*^9}, {3.712411040821576*^9, 3.7124110437544603`*^9}, {
   3.716865868905058*^9, 3.7168659008824797`*^9}, {3.716866036835518*^9, 
   3.716866225036405*^9}, {3.716866294285301*^9, 3.716866294899723*^9}, {
   3.71686633083989*^9, 3.716866348398978*^9}, {3.7168663983055468`*^9, 
   3.716866428861063*^9}},ExpressionUUID->"2943fc40-bd9a-4cfc-9263-\
6c6f9d6be655"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "oneQuditOperation", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<Identity\>\"", ",", " ", "1", ",", " ", "d_Integer"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"identity", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
    "\"\<PauliXGate\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"paulix", "[", 
    RowBox[{"d", ",", " ", "k"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
    "\"\<PauliZGate\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"pauliz", "[", 
    RowBox[{"d", ",", " ", "k"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"fourier", "[", 
    RowBox[{"d", ",", " ", "k"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rx\>\"", ",", " ", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"Rx", "[", "\[Theta]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Ry\>\"", ",", " ", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"Ry", "[", "\[Theta]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rz\>\"", ",", " ", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"Rz", "[", "\[Theta]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<PauliYGate\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", 
   ":=", " ", "pauliy"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "hadamard"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<NOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "not"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<RootNOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "rootNot"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{"\"\<S\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oneQuditOperation", "[", 
     RowBox[{"\"\<T\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Rz", "[", 
     RowBox[{"Pi", "/", "4"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperation", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "UnitaryMatrixQ"}], ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", "mat"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711627802102491*^9, 3.7116278396895533`*^9}, {
   3.711729601181856*^9, 3.711729617757085*^9}, {3.711916133149301*^9, 
   3.711916198771625*^9}, {3.712334972420026*^9, 3.712335003245472*^9}, {
   3.7129694744165*^9, 3.7129694937377977`*^9}, {3.713448241678858*^9, 
   3.713448247902111*^9}, {3.713448305871522*^9, 3.71344831684617*^9}, {
   3.71349416295219*^9, 3.713494181248212*^9}, {3.715308712209654*^9, 
   3.715308734631833*^9}, {3.715994759944625*^9, 3.71599476389154*^9}, {
   3.716002306118935*^9, 3.716002392462278*^9}, {3.716861505295163*^9, 
   3.716861530930921*^9}, {3.7168657225755243`*^9, 3.716865729189637*^9}, {
   3.7168733883984222`*^9, 3.716873388778406*^9}, {3.7169064711467733`*^9, 
   3.716906474518895*^9}, 3.7170823360060368`*^9, {3.7180828273542147`*^9, 
   3.718082827584771*^9}},ExpressionUUID->"45ec965d-6051-4a9f-b1c9-\
b2f4f5b497f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "oneQuditOperationQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperationQ", "[", 
    RowBox[{
    "\"\<PauliXGate\>\"", "|", "\"\<PauliYGate\>\"", "|", 
     "\"\<PauliZGate\>\""}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperationQ", "[", "\"\<Fourier\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperationQ", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Rx\>\"", "|", "\"\<Ry\>\"", "|", "\"\<Rz\>\""}], ",", " ", 
      
      RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oneQuditOperationQ", "[", 
     RowBox[{
     "\"\<Hadamard\>\"", "|", "\"\<NOT\>\"", "|", "\"\<RootNOT\>\"", "|", 
      "\"\<S\>\"", "|", "\"\<T\>\"", "|", 
      RowBox[{"mat_", "?", "UnitaryMatrixQ"}]}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oneQuditOperationQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.713448094944687*^9, 3.713448173491867*^9}, {
  3.713448259269668*^9, 3.7134484256412287`*^9}, {3.715308743903879*^9, 
  3.7153087572776833`*^9}, {3.715994698580576*^9, 3.7159947545093813`*^9}, {
  3.716003989482335*^9, 3.71600399230453*^9}, {3.7168712231521463`*^9, 
  3.716871229755295*^9}, {3.716873395209372*^9, 3.716873395537238*^9}, {
  3.71690648137878*^9, 
  3.716906481774699*^9}},ExpressionUUID->"c156305b-ea22-4951-a82b-\
c8697b8169bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "multiQuditOperation", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<Identity\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", 
     "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"identity", "[", 
    RowBox[{"d", "^", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<CNOT\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"cnot", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<CPhase\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"cphase", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CU\>\"", ",", " ", 
       RowBox[{"u_", "?", "UnitaryMatrixQ"}], ",", " ", 
       RowBox[{"a_:", "1"}]}], "}"}], ",", " ", "1", ",", " ", "d_Integer", 
     ",", " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"control", "[", 
    RowBox[{"d", ",", " ", "u", ",", " ", "a"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<SUM\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"sum", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<SWAP\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"swap", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<RootSWAP\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"rootSwap", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "1", ",", " ", "2", ",", " ", "3"}], 
    "]"}], " ", ":=", " ", "fredkin"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
    "\"\<Toffoli\>\"", ",", " ", "1", ",", " ", "2", ",", " ", "n_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"toffoli", "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"multiQuditOperation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", " ", 
        RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
      " ", "2", ",", " ", "3"}], "]"}], " ", ":=", " ", 
    RowBox[{"deutsch", "[", "\[Theta]", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperation", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "UnitaryMatrixQ"}], ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", "mat"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711627802102491*^9, 3.7116278396895533`*^9}, {
   3.711729601181856*^9, 3.711729617757085*^9}, {3.711916133149301*^9, 
   3.711916198771625*^9}, {3.712334972420026*^9, 3.712335003245472*^9}, {
   3.712336009664887*^9, 3.71233611284415*^9}, {3.712336701241724*^9, 
   3.712336735841483*^9}, {3.712336830564012*^9, 3.71233683855579*^9}, {
   3.712357921268471*^9, 3.712357991618842*^9}, {3.712358042010742*^9, 
   3.712358048331049*^9}, {3.7123581732189493`*^9, 3.712358252597331*^9}, 
   3.712358722174755*^9, {3.712359668438987*^9, 3.712359726113505*^9}, {
   3.7123597855247593`*^9, 3.712359786088593*^9}, {3.712368434368578*^9, 
   3.712368441182098*^9}, {3.712410983165258*^9, 3.7124110199193783`*^9}, {
   3.712411051535833*^9, 3.71241105588643*^9}, 3.7129684910903893`*^9, {
   3.713448229992814*^9, 3.713448232452343*^9}, {3.713494206992497*^9, 
   3.713494211151392*^9}, {3.716003926987005*^9, 3.716003955372871*^9}, {
   3.716865745693699*^9, 3.716865845935561*^9}, 3.718585922773767*^9, 
   3.718586021802964*^9},ExpressionUUID->"55d74854-50ea-4834-81a9-\
b93fe4cddd16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "multiQuditOperationQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperationQ", "[", 
    RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPhase\>\"", "|", 
     RowBox[{"{", 
      RowBox[{"\"\<CU\>\"", ",", " ", 
       RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}]}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperationQ", "[", 
    RowBox[{
    "\"\<SUM\>\"", "|", "\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\"", "|", 
     "\"\<Fredkin\>\"", "|", "\"\<Toffoli\>\"", "|", 
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{"\[Theta]_", "?", "NumericQ"}]}], "}"}]}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"multiQuditOperationQ", "[", 
     RowBox[{"mat_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", "True"}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOperationQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7134484339862757`*^9, 3.713448591026493*^9}, 
   3.7134552551285133`*^9, {3.716004003823765*^9, 3.716004006382698*^9}, {
   3.716906501195075*^9, 
   3.716906503181888*^9}},ExpressionUUID->"f7a3a78c-aa12-4570-ab2e-\
badcda9bae9d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "opQueries", "]"}], ";"}], "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opQueries", "[", 
    RowBox[{"spec_", ",", " ", "ws_", ",", " ", "d_", ",", " ", "k_"}], "]"}],
    " ", ":=", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"discreteOperationQ", "[", "spec", "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"arityQ", "[", 
     RowBox[{"spec", ",", " ", 
      RowBox[{"Length", " ", "@", " ", "ws"}]}], "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"wiresQ", "[", 
     RowBox[{"spec", ",", " ", "d"}], "]"}], " ", "&&", "\n", "\t", 
    RowBox[{"powerQ", "[", 
     RowBox[{"spec", ",", " ", "k", ",", " ", "d"}], "]"}]}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.716919572541795*^9, 3.716919619223921*^9}, {
  3.716919720285701*^9, 3.716919724690289*^9}, {3.716919815112667*^9, 
  3.716919915664825*^9}},ExpressionUUID->"5d8322cc-6295-4fb6-b310-\
80c1d6ea3976"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "singleQuditOpMatrix", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditOpMatrix", "[", 
    RowBox[{
    "spec_", ",", " ", "opW_", ",", " ", "power_", ",", " ", "dim_", ",", " ",
      "state_QuantumDiscreteState"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "stateWs", ",", " ", "dims", ",", " ", "opMats", ",", " ", "wPos", ",", 
       " ", "opMat"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"stateWs", " ", "=", " ", 
       RowBox[{"state", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{"stateWs", ",", " ", "opW"}], "]"}], ",", " ", 
        RowBox[{"Return", "[", "state", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"dims", " ", "=", " ", 
       RowBox[{"stateWs", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMats", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"identity", "[", "#", "]"}], "&"}], ",", " ", "dims"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"wPos", " ", "=", " ", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"stateWs", ",", " ", "opW"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"opMats", "[", 
        RowBox[{"[", "wPos", "]"}], "]"}], " ", "=", " ", 
       RowBox[{"oneQuditOperation", "[", 
        RowBox[{"spec", ",", " ", "power", ",", " ", "dim"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "opMats"}], " ", "\[Equal]", " ", 
          "1"}], ",", " ", 
         RowBox[{"opMats", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"KroneckerProduct", " ", "@@", " ", "opMats"}]}], "]"}]}], 
      ";", "\n", "\t", "opMat"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7160020827348623`*^9, 3.716002153704912*^9}, {
  3.716002208247395*^9, 3.716002239300078*^9}, {3.716003506124955*^9, 
  3.716003528923283*^9}, {3.7160036762082043`*^9, 
  3.716003676816223*^9}},ExpressionUUID->"64d6fd45-2704-4cee-ad68-\
c5e35b7b59d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "multiQuditOpMatrix", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"multiQuditOpMatrix", "[", 
   RowBox[{
   "spec_", ",", " ", "opWs_", ",", " ", "power_", ",", " ", "dim_", ",", " ",
     "qstate_QuantumDiscreteState"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "orderedWs", ",", " ", "otherWs", ",", " ", "currOrder", ",", " ", "rep",
       ",", " ", "restOfRep", ",", " ", "shape", ",", " ", "newPerm", ",", 
      " ", "size", ",", " ", "dims", ",", " ", "orderedDims", ",", " ", 
      "stateDims", ",", " ", "allDims", ",", " ", "wPos", ",", " ", "opMat"}],
      "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"orderedWs", " ", "=", " ", 
      RowBox[{"qstate", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"stateDims", " ", "=", " ", 
      RowBox[{"orderedWs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"size", " ", "=", " ", 
      RowBox[{"Times", " ", "@@", " ", "stateDims"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"opWs", ",", " ", 
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"orderedWs", ",", " ", "#"}], "]"}], "&"}]}], "]"}], ",", 
       " ", 
       RowBox[{"Return", "[", "qstate", "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AnyTrue", "[", 
        RowBox[{"opWs", ",", " ", 
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"orderedWs", ",", " ", "#"}], "]"}], "&"}]}], "]"}], ",", 
       " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteOperation", "::", "eval"}], ",", 
          RowBox[{"opWs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "qstate"}], "]"}], 
        ";", 
        RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"otherWs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"orderedWs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "opWs"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"currOrder", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"opWs", ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"orderedDims", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
         "&"}], ",", " ", "currOrder"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"restOfRep", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"identity", "[", 
          RowBox[{
           RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
          "]"}], "&"}], ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#"}], "}"}], "&"}], ",", " ", "orderedDims"}], 
        "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"opMat", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "opWs"}], " ", "\[Equal]", " ", 
         RowBox[{"Length", " ", "@", " ", "orderedWs"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"multiQuditOperation", "[", 
         RowBox[{"spec", ",", " ", "power", ",", " ", "dim", ",", " ", 
          RowBox[{"Length", " ", "@", " ", "opWs"}]}], "]"}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"multiQuditOperation", "[", 
             RowBox[{"spec", ",", " ", "power", ",", " ", "dim", ",", " ", 
              RowBox[{"Length", " ", "@", " ", "opWs"}]}], "]"}], "}"}], ",", 
           " ", "restOfRep"}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"opMat", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"opMat", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Ordering", " ", "@", " ", "currOrder"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"newPerm", ",", " ", 
        RowBox[{"newPerm", " ", "+", " ", 
         RowBox[{"Length", " ", "@", " ", "newPerm"}]}]}], "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"opMat", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"opMat", ",", " ", "newPerm"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"opMat", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", " ", "@", " ", "opMat"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"size", ",", " ", "size"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", "opMat"}]}], "\n", "\t", "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.716002772719261*^9, 3.716002825982003*^9}, {
   3.716003575359682*^9, 3.716003580028356*^9}, {3.7160036221198874`*^9, 
   3.716003668337838*^9}, {3.716003742201303*^9, 3.716003789795239*^9}, {
   3.716862069007972*^9, 3.716862070611651*^9}, {3.716865681138733*^9, 
   3.716865690015192*^9}, {3.718113823428801*^9, 3.718113831865471*^9}, {
   3.7181139066410427`*^9, 3.718113920349408*^9}, {3.7181140797106323`*^9, 
   3.718114109614377*^9}, {3.718114257794113*^9, 3.71811426572556*^9}, {
   3.718421360594589*^9, 3.718421366819437*^9}, {3.718421408976838*^9, 
   3.718421410220481*^9}, {3.718421443868354*^9, 3.718421456216982*^9}, {
   3.7184214935800867`*^9, 3.718421548800221*^9}, {3.7184215833516817`*^9, 
   3.718421617637385*^9}, {3.718421664034997*^9, 3.718421672649267*^9}, {
   3.718422846827105*^9, 3.71842285660437*^9}, {3.718422924529209*^9, 
   3.718422931204137*^9}, 3.718424335441832*^9, {3.718424365928179*^9, 
   3.718424371384419*^9}, {3.7184246661871433`*^9, 3.7184247313480167`*^9}, {
   3.718424847914875*^9, 3.7184248550349483`*^9}, {3.71842738952092*^9, 
   3.718427421330261*^9}, {3.718427495656273*^9, 
   3.718427510286262*^9}},ExpressionUUID->"65b98fbb-b590-4a41-9ad1-\
9767f75601ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "applyMatToState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"applyMatToState", "[", 
   RowBox[{"mat_", ",", " ", "state_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "newState", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newState", " ", "=", " ", "state"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vecQ", "[", "state", "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], " ", "=", 
        " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"mat", ".", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], 
         "]"}]}], ",", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], " ", "=",
         " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"mat", ".", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], ".", 
          RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}], "]"}]}]}], "\n", 
      "\t\t", "]"}], ";", "\n", "\t", "newState"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.715997208192526*^9, 3.715997211679542*^9}, {
  3.715998382705456*^9, 3.715998393463386*^9}, {3.716003183012261*^9, 
  3.7160031856283627`*^9}, {3.71687236731427*^9, 3.716872380794446*^9}, {
  3.718113988199182*^9, 3.7181139926313047`*^9}, {3.7181142513255463`*^9, 
  3.718114251547942*^9}},ExpressionUUID->"5b606191-eeca-46be-90db-\
5e9f33251a4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "quantumOpEvaluate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"quantumOpEvaluate", "[", 
   RowBox[{
   "qop_QuantumDiscreteOperation", ",", " ", "qstate_QuantumDiscreteState"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "opWires", ",", " ", "spec", ",", " ", "power", ",", " ", "dim", ",", 
      " ", "mat", ",", " ", "dims"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"spec", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"opWires", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"dims", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"qstate", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}]}], ";",
      "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"opWires", ",", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Keys", " ", "@", " ", "dims"}], ",", " ", "#"}], 
            "]"}]}], "&"}]}], "]"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteOperation", "::", "notPresent"}], ",", 
          "opWires", ",", "spec"}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"Return", "[", "qstate", "]"}]}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"dim", " ", "=", " ", 
      RowBox[{"dims", "[", 
       RowBox[{"[", 
        RowBox[{"opWires", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"dims", ",", "opWires"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"#", " ", "\[Equal]", " ", "dim"}], "&"}]}], "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteOperation", "::", "opDims"}], ",", 
          "opWires", ",", "spec"}], "]"}], ";", "$Failed"}]}], "]"}], ";", 
     "\n", "\t", 
     RowBox[{"power", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "opWires"}], " ", "\[Equal]", " ", 
         "1"}], ",", " ", "\n", "\t\t", 
        RowBox[{"singleQuditOpMatrix", "[", 
         RowBox[{"spec", ",", " ", 
          RowBox[{"opWires", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "power", ",", " ", "dim",
           ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"multiQuditOpMatrix", "[", 
         RowBox[{
         "spec", ",", " ", "opWires", ",", " ", "power", ",", " ", "dim", ",",
           " ", "qstate"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"applyMatToState", "[", 
      RowBox[{"mat", ",", " ", "qstate"}], "]"}]}]}], "\t", "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.716004128291029*^9, 3.7160041544163446`*^9}, {
  3.7168773177764072`*^9, 3.716877347468552*^9}, {3.7168773809219112`*^9, 
  3.716877454104561*^9}, {3.7169107006936274`*^9, 3.7169107460373077`*^9}, {
  3.716910841800905*^9, 3.716910953543845*^9}, {3.716911010740224*^9, 
  3.716911070469014*^9}, {3.7169111062847652`*^9, 3.716911108355864*^9}, {
  3.7169111783886557`*^9, 3.7169111797807827`*^9}, {3.716923139076976*^9, 
  3.7169232763805923`*^9}, {3.7181136653224154`*^9, 3.718113769175557*^9}, {
  3.718114019085401*^9, 3.718114024515967*^9}, {3.7181142258649197`*^9, 
  3.718114236740981*^9}},ExpressionUUID->"8a8b795d-b718-4947-87a8-\
26abe01b7d9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "QuantumDiscreteOperation", ",", " ", "QuantumDiscreteOperationQ"}], 
    "]"}], ";"}], "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "op"}], "=", 
    "\"\<Argument `1` at position 1 is not a valid specification\>\""}], 
   ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "arity"}], "=", 
    "\"\<Number of wires not equal to number of gate inputs for `1`\>\""}], 
   ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "wires"}], "=", 
    "\"\<Dimensions of argument `1` at position 1 are not compatible with the \
specified operations.\>\""}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "power"}], "=", 
    "\"\<Not an accepted power for applying operator at position 1.\>\""}], 
   ";"}], "Code"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "eval"}], "=", 
   "\"\<At least one element of `1` is not in `2`\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "opDims"}], "=", 
   "\"\<Subsystems `1` acted on by `2` must all have same dimension.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "notPresent"}], "=", 
    "\"\<Input wires `1` for operation `2` do not overlap with wires of input \
quantum system.\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec_", ",", " ", "wires_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec", ",", " ", "wires", ",", " ", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
     RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec_", ",", " ", "wires_"}], "]"}], " ", ":=", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec", ",", " ", 
      RowBox[{"{", "wires", "}"}], ",", " ", 
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
      
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec1_", ",", " ", "wires1_List", ",", " ", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}]}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec1", ",", " ", "wires1", ",", " ", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", " ", 
     RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec1_", ",", " ", "wires1_", ",", " ", 
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}]}], 
     "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec1", ",", " ", 
      RowBox[{"{", "wires1", "}"}], ",", " ", 
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", " ", 
      
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec2_", ",", " ", "wires2_List", ",", " ", 
     RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}], ",", " ", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}]}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"spec2", ",", " ", "wires2", ",", " ", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", " ", 
     RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec2_", ",", " ", "wires2_", ",", " ", 
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}], ",", " ", 
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}]}], 
     "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"spec2", ",", " ", 
      RowBox[{"{", "wires2", "}"}], ",", " ", 
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", " ", 
      
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{
      RowBox[{"qop", ":", 
       RowBox[{"QuantumDiscreteOperation", "[", 
        RowBox[{"spec_", ",", " ", "ws_", ",", " ", 
         RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}],
          ",", " ", 
         RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
        "]"}]}], ",", " ", "StandardForm"}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wrs", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "ws", "]"}], ",", " ", "ws", ",", " ", 
          RowBox[{"{", "ws", "}"}]}], "]"}]}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"condListQ", "[", "spec", "]"}], " ", "&&", " ", 
           RowBox[{"AllTrue", "[", 
            RowBox[{
             RowBox[{"spec", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
             RowBox[{
              RowBox[{"opQueries", "[", 
               RowBox[{"#", ",", " ", "wrs", ",", " ", "d", ",", " ", "k"}], 
               "]"}], "&"}]}], "]"}]}], ")"}], " ", "||", " ", 
         RowBox[{"opQueries", "[", 
          RowBox[{"spec", ",", " ", "wrs", ",", " ", "d", ",", " ", "k"}], 
          "]"}]}], ",", " ", "\n", "\t\t\t", 
        RowBox[{"Panel", " ", "@", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"opDisplayFormat", "[", 
            RowBox[{"spec", ",", " ", "k", ",", " ", "d"}], "]"}], " ", "<>", 
           " ", "\"\< : \>\"", " ", "<>", " ", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Sequence", " ", "@", "ToString"}], " ", "/@", " ", 
               "wrs"}], ",", " ", "\"\<, \>\""}], "]"}], "]"}]}], ")"}]}], 
        ",", "\n", "\t\t\t\t", "$Failed"}], "]"}]}], "\n", "\t\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qop", ":", 
        RowBox[{"QuantumDiscreteOperation", "[", 
         RowBox[{
          RowBox[{"conds_", "?", "condListQ"}], ",", " ", "expr___"}], 
         "]"}]}], ")"}], "[", "state_QuantumDiscreteState", "]"}], " ", "/;", 
     " ", 
     RowBox[{"QuantumDiscreteOperationQ", "[", "qop", "]"}]}], ":=", "\n", 
    "\t", 
    RowBox[{"quantumOpEvaluate", "[", 
     RowBox[{
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{
        RowBox[{"conds", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", "expr"}], "]"}], 
      ",", " ", "state"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"op", ":", 
       RowBox[{"QuantumDiscreteOperation", "[", "expr___", "]"}]}], ")"}], 
     "[", "qstate_QuantumDiscreteState", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{"quantumOpEvaluate", "[", 
      RowBox[{"op", ",", " ", "qstate"}], "]"}], ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperationQ", "[", 
     RowBox[{"QuantumDiscreteOperation", "[", 
      RowBox[{"spec_", ",", " ", "wires_List", ",", " ", 
       RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], 
       ",", " ", 
       RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], "]"}], 
     "]"}], ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wrs", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "wires", "]"}], ",", " ", "wires", ",", " ", 
          RowBox[{"{", "wires", "}"}]}], "]"}]}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"condListQ", "[", "spec", "]"}], " ", "&&", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{
           RowBox[{"spec", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"opQueries", "[", 
             RowBox[{"#", ",", " ", "wrs", ",", " ", "d", ",", " ", "k"}], 
             "]"}], "&"}]}], "]"}]}], ")"}], " ", "||", " ", 
       RowBox[{"opQueries", "[", 
        RowBox[{"spec", ",", " ", "wrs", ",", " ", "d", ",", " ", "k"}], 
        "]"}]}]}], "\n", "\t\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperationQ", 
    StyleBox["[", "Code"], 
    StyleBox["expr___", "Code"], 
    StyleBox["]", "Code"]}], 
   StyleBox[":=", "Code"], 
   StyleBox["False", "Code"]}], 
  StyleBox[";", "Code"]}]}], "Code",
 CellChangeTimes->{{3.715566903006237*^9, 3.7155669509802856`*^9}, {
   3.715566990438764*^9, 3.7155670548564157`*^9}, {3.715567328796796*^9, 
   3.715567394355373*^9}, {3.715567908597278*^9, 3.715568190086752*^9}, {
   3.715568346052511*^9, 3.71556834789209*^9}, {3.715568587219142*^9, 
   3.715568590382022*^9}, {3.71556868919466*^9, 3.715568736985825*^9}, {
   3.715568945109597*^9, 3.71556896359208*^9}, {3.715797993287818*^9, 
   3.715798005278883*^9}, {3.715798126362937*^9, 3.715798136816839*^9}, {
   3.7157981961551733`*^9, 3.7157982037047586`*^9}, {3.715798473732828*^9, 
   3.715798497638475*^9}, {3.7157988132435513`*^9, 3.7157989237701807`*^9}, 
   3.715798955022242*^9, {3.715799014201229*^9, 3.715799018577785*^9}, {
   3.715799655042789*^9, 3.71579967740431*^9}, {3.71579975023606*^9, 
   3.715799755226741*^9}, {3.7157998368579903`*^9, 3.7157998433135233`*^9}, {
   3.7157999288129053`*^9, 3.715799980286024*^9}, {3.715800054515524*^9, 
   3.715800085786272*^9}, {3.715800147601457*^9, 3.715800376480448*^9}, {
   3.715800430575012*^9, 3.71580046558998*^9}, {3.715800509716634*^9, 
   3.715800545680316*^9}, {3.715800590969701*^9, 3.715800612959536*^9}, {
   3.715800649719634*^9, 3.7158007523460913`*^9}, {3.715800797833449*^9, 
   3.715800801558991*^9}, {3.715800861630145*^9, 3.7158008955313473`*^9}, {
   3.715800983388383*^9, 3.715801007765059*^9}, 3.715801138361511*^9, {
   3.715801426883247*^9, 3.715801472697137*^9}, {3.715801905916566*^9, 
   3.715801950910831*^9}, {3.715815908076447*^9, 3.7158159148517923`*^9}, 
   3.715816039096612*^9, {3.715816165005933*^9, 3.715816179838792*^9}, {
   3.715816216910763*^9, 3.715816265298705*^9}, {3.7158163000659847`*^9, 
   3.7158163471222153`*^9}, {3.715816434064932*^9, 3.715816465694705*^9}, 
   3.71581651453448*^9, {3.7158166072513638`*^9, 3.715816613716634*^9}, {
   3.715817620450954*^9, 3.7158176296582127`*^9}, {3.71581780422723*^9, 
   3.7158178762826366`*^9}, {3.7158179186679573`*^9, 3.71581794530233*^9}, {
   3.7158180365176992`*^9, 3.715818046299612*^9}, {3.715818264822929*^9, 
   3.7158182672279778`*^9}, {3.7158183246144133`*^9, 3.715818360864395*^9}, {
   3.715818425383011*^9, 3.715818458398876*^9}, {3.7158184987453947`*^9, 
   3.7158185579487343`*^9}, {3.715992202769771*^9, 3.715992208824758*^9}, {
   3.715992690004202*^9, 3.715992691603931*^9}, {3.715993330684416*^9, 
   3.715993434711711*^9}, {3.7159934730261583`*^9, 3.715993553114727*^9}, {
   3.715993952332864*^9, 3.7159939648802357`*^9}, {3.715995263534575*^9, 
   3.715995319675753*^9}, {3.715995627385099*^9, 3.71599572931564*^9}, {
   3.715995939596991*^9, 3.715995955306048*^9}, {3.71599601814697*^9, 
   3.715996042549589*^9}, {3.7160026978918047`*^9, 3.7160027013550777`*^9}, {
   3.716862584063135*^9, 3.7168625937179193`*^9}, {3.7168626342937393`*^9, 
   3.716862742452446*^9}, {3.716862777097308*^9, 3.716862853115006*^9}, {
   3.716862914855238*^9, 3.7168629152774563`*^9}, {3.7168632094027767`*^9, 
   3.7168632153106613`*^9}, {3.716863679503975*^9, 3.716863680388795*^9}, {
   3.716863734056691*^9, 3.716863783458701*^9}, {3.716866843686398*^9, 
   3.7168668482164593`*^9}, {3.716867070799809*^9, 3.7168670865738487`*^9}, {
   3.7168680275022306`*^9, 3.716868111180151*^9}, {3.7168681447837667`*^9, 
   3.71686850700287*^9}, {3.716868767922868*^9, 3.716868768662985*^9}, {
   3.716868832692541*^9, 3.716868837442184*^9}, {3.716869015502346*^9, 
   3.716869290333487*^9}, {3.716869375002573*^9, 3.716869389279862*^9}, {
   3.71686946084696*^9, 3.716869461493141*^9}, {3.716869559648038*^9, 
   3.716869564756104*^9}, 3.7168698527220078`*^9, {3.7168698885110493`*^9, 
   3.716869889452252*^9}, {3.716870046944255*^9, 3.716870047595681*^9}, {
   3.716876845163872*^9, 3.7168768715988894`*^9}, {3.71687691829963*^9, 
   3.716876942632791*^9}, {3.716876978565675*^9, 3.716876992133359*^9}, {
   3.716877023785893*^9, 3.716877210243594*^9}, {3.716877242705983*^9, 
   3.716877243590562*^9}, {3.716903857456025*^9, 3.716904022677741*^9}, {
   3.71690405368565*^9, 3.7169040541489143`*^9}, {3.716904117796143*^9, 
   3.71690413352973*^9}, {3.71690430035406*^9, 3.716904312824871*^9}, {
   3.716904397797635*^9, 3.716904502640336*^9}, {3.716911122665989*^9, 
   3.716911213502884*^9}, {3.71691945986518*^9, 3.716919570655797*^9}, {
   3.716920003645605*^9, 3.716920010626548*^9}, {3.716920260136464*^9, 
   3.716920274554738*^9}, {3.716920409222439*^9, 3.716920473554956*^9}, {
   3.716920505590481*^9, 3.716920548039442*^9}, {3.716920622662148*^9, 
   3.716920830511816*^9}, {3.716920942062784*^9, 3.716921016641911*^9}, {
   3.716921075545986*^9, 3.716921082228322*^9}, {3.716921153842731*^9, 
   3.716921157743101*^9}, {3.716921195969368*^9, 3.716921198367564*^9}, {
   3.7169214479095583`*^9, 3.716921449618713*^9}, {3.716921626523897*^9, 
   3.7169216312645283`*^9}, {3.716921709179884*^9, 3.7169218032195587`*^9}, {
   3.716922362053421*^9, 3.716922394286496*^9}, {3.716922461922057*^9, 
   3.716922544264084*^9}, {3.7169227313721952`*^9, 3.716922757374188*^9}, {
   3.716923320431574*^9, 3.71692339627101*^9}, {3.717078263989335*^9, 
   3.7170782773325033`*^9}, 3.717120901319384*^9, {3.717901614796884*^9, 
   3.717901614899839*^9}, {3.718113481488957*^9, 3.718113490616969*^9}, 
   3.718114285942852*^9},ExpressionUUID->"b813cc51-620a-42a4-9fdc-\
848615df0354"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumMeasurement", "Chapter",
 CellDingbat->None,
 CellChangeTimes->{{3.713028204767645*^9, 
  3.713028214716609*^9}},ExpressionUUID->"332b0b33-2d6f-4b3d-adef-\
85fb1d6e2986"],

Cell[CellGroupData[{

Cell["POVM", "Subsection",
 CellChangeTimes->{{3.716858965810465*^9, 
  3.716858966385379*^9}},ExpressionUUID->"40e7f334-3275-4564-bc3e-\
7d7fdc81cd6c"],

Cell[CellGroupData[{

Cell["POVM Queries", "Subsubsection",
 CellChangeTimes->{{3.718417003895557*^9, 
  3.718417011054706*^9}},ExpressionUUID->"ec1434ea-288a-4fe0-a8fc-\
8c063d485782"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "positiveQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"positiveQ", "[", "ops_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"PositiveSemidefiniteMatrixQ", "[", "#1", "]"}]}], ",", 
          " ", "\n", "\t\t", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"QuantumDiscretePOVM", "::", "positivity"}], ",", "#1", 
              ",", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", "False"}], ")"}],
           ",", " ", "True"}], "]"}], "&"}], ",", " ", "ops"}], "]"}], "/.", 
     " ", 
     RowBox[{"List", " ", "\[Rule]", " ", "And"}]}]}], ";"}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"positiveQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.716856999701168*^9, 3.716857074512271*^9}, {
  3.716858351078676*^9, 3.716858353434925*^9}, {3.716858462395836*^9, 
  3.716858475434226*^9}, {3.716861812525408*^9, 3.716861822277701*^9}, {
  3.718416954683989*^9, 
  3.7184169760557613`*^9}},ExpressionUUID->"bd08a340-b126-453a-9241-\
ece1dd524676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sumToIdentityQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sumToIdentityQ", "[", "ops_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dimensions", " ", "@", " ", 
           RowBox[{"ops", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{
          RowBox[{"Total", " ", "@", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ConjugateTranspose", "[", "#1", "]"}], ".", "#1"}], 
               ")"}], "&"}], ",", "ops"}], "]"}]}], " ", "===", " ", 
          RowBox[{"IdentityMatrix", "[", "dim", "]"}]}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumDiscretePOVM", "::", "sum"}], ",", "dim"}], "]"}],
           ";", "False"}], ")"}], ",", " ", "True"}], "]"}]}], "]"}]}], ";"}],
   "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sumToIdentityQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.716856999701168*^9, 3.716857074512271*^9}, {
  3.71685735945404*^9, 3.716857370510391*^9}, {3.716857475087858*^9, 
  3.716857578120534*^9}, {3.716857970435835*^9, 3.716857977796094*^9}, {
  3.7168580258363047`*^9, 3.716858168351429*^9}, {3.7168582726998873`*^9, 
  3.71685827416357*^9}, {3.716858426991844*^9, 3.716858428084879*^9}, {
  3.716858485140139*^9, 3.7168584942102633`*^9}, {3.716858651776451*^9, 
  3.7168586525522423`*^9}, {3.71686176821705*^9, 
  3.716861783253969*^9}},ExpressionUUID->"5ddcfbfd-6a60-42b2-aa45-\
e4423515afad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sameDimensionQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameDimensionQ", "[", "ops_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Dimensions", ",", " ", "ops"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"#", " ", "\[Equal]", " ", 
           RowBox[{"Dimensions", " ", "@", " ", 
            RowBox[{"ops", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "&"}]}], "]"}]}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscretePOVM", "::", "dimensions"}], ",", "ops"}], 
         "]"}], ";", "False"}], ")"}], ",", " ", "True"}], "]"}]}], ";"}], 
  "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sameDimensionQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.716856999701168*^9, 3.716857074512271*^9}, {
  3.71685735945404*^9, 3.716857370510391*^9}, {3.716857475087858*^9, 
  3.716857578120534*^9}, {3.716858668535692*^9, 3.716858672355769*^9}, {
  3.716861796790165*^9, 
  3.7168618089498787`*^9}},ExpressionUUID->"7a772870-8fe8-4e2a-8214-\
2abad08ad0ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"QuantumDiscretePOVM", ",", " ", "QuantumDiscretePOVMQ"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscretePOVM", "::", "positivity"}], " ", "=", 
   "\"\<Argument `1` at position `2` in list does not satisfy the condition \
\!\(\*SuperscriptBox[\(M\), \(\[Dagger]\)]\)M positive.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscretePOVM", "::", "sum"}], " ", "=", 
   "\"\<Arguments of form {\!\(\*SubscriptBox[\(M\), \(i\)]\)} do not satisfy \
the condition \!\(\*UnderscriptBox[\(\[Sum]\), \
\(i\)]\)\!\(\*SubsuperscriptBox[\(M\), \(i\), \
\(\[Dagger]\)]\)\!\(\*SubscriptBox[\(M\), \(i\)]\) = \!\(\*SubscriptBox[\(\
\[DoubleStruckCapitalI]\), \(`1`\)]\).\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscretePOVM", "::", "dimensions"}], "=", 
    "\"\<Elements of list `1` must have the same dimension\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscretePOVMQ", "[", 
     RowBox[{"HoldPattern", "[", 
      RowBox[{"QuantumDiscretePOVM", "[", "ops_List", "]"}], "]"}], "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"positiveQ", "[", "ops", "]"}], "&&", 
      RowBox[{"sameDimensionQ", "[", "ops", "]"}], "&&", 
      RowBox[{"sumToIdentityQ", "[", "ops", "]"}]}], ")"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscretePOVMQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "False"}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"povm", ":", 
      RowBox[{"QuantumDiscretePOVM", "[", "ops_List", "]"}]}], ",", " ", 
     "StandardForm"}], "]"}], "  ", ":=", " ", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"positiveQ", "[", "ops", "]"}], "&&", 
      RowBox[{"sameDimensionQ", "[", "ops", "]"}], "&&", 
      RowBox[{"sumToIdentityQ", "[", "ops", "]"}]}], ";", " ", 
     RowBox[{
     "Panel", " ", "@", " ", 
      "\"\<\[ScriptCapitalP]\[ScriptCapitalO]\[ScriptCapitalV]\
\[ScriptCapitalM]\>\""}]}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.716853933031246*^9, 3.716853944430272*^9}, {
   3.716854917076454*^9, 3.716854928451254*^9}, {3.716855253546217*^9, 
   3.716855339631587*^9}, {3.716855677870626*^9, 3.716855707894367*^9}, {
   3.716855745471291*^9, 3.716855771190494*^9}, {3.7168558030847473`*^9, 
   3.71685583009231*^9}, {3.7168559400045977`*^9, 3.716855955378859*^9}, {
   3.716855997289382*^9, 3.716856014969225*^9}, {3.716856051783328*^9, 
   3.716856139718852*^9}, {3.716856191421051*^9, 3.716856194321019*^9}, {
   3.716856353122369*^9, 3.716856600303906*^9}, 3.716856687558354*^9, {
   3.716856731018771*^9, 3.7168567327929077`*^9}, {3.716856769398787*^9, 
   3.716856775546796*^9}, {3.716856872678033*^9, 3.7168569559701433`*^9}, {
   3.716857081490395*^9, 3.7168570922801228`*^9}, {3.716857144618785*^9, 
   3.716857251407094*^9}, {3.7168575971390057`*^9, 3.716857631356985*^9}, {
   3.716857676966289*^9, 3.716857726723112*^9}, {3.716857793763769*^9, 
   3.716857843274482*^9}, {3.716857888048338*^9, 3.716857899560644*^9}, {
   3.7168582089497347`*^9, 3.7168582521052837`*^9}, {3.7168586362332163`*^9, 
   3.716858642416039*^9}, {3.7168586956933317`*^9, 3.716858708109408*^9}, 
   3.716993301701817*^9, {3.716998579483066*^9, 3.716998586490247*^9}, {
   3.7170274043561707`*^9, 3.717027404839181*^9}, {3.717027471262762*^9, 
   3.7170274733251133`*^9}},ExpressionUUID->"4e9450cd-eb9b-446a-a11c-\
e203d788bbc8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observable", "Subsection",
 CellChangeTimes->{{3.7168589934343567`*^9, 
  3.7168589953048143`*^9}},ExpressionUUID->"660f0830-2f00-4275-bb11-\
14eab64b6b7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "QuantumDiscreteObservable", ",", " ", "QuantumDiscreteObservableQ"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteObservable", "::", "hermitian"}], " ", "=", 
    "\"\<Argument `1` is not a hermitian matrix\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteObservableQ", "[", 
     RowBox[{"HoldPattern", "[", 
      RowBox[{"QuantumDiscreteObservable", "[", "op_", "]"}], "]"}], "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"HermitianMatrixQ", "[", "op", "]"}]}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteObservable", "::", "hermitian"}], ",", 
          "op"}], "]"}], ";", "False"}], ")"}], ",", " ", "True"}], "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteObservableQ", "[", "expr___", "]"}], " ", ":=", 
    " ", "False"}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{
     RowBox[{"obs", ":", 
      RowBox[{"QuantumDiscreteObservable", "[", "op_", "]"}]}], ",", " ", 
     "StandardForm"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"HermitianMatrixQ", "[", "op", "]"}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantumDiscreteObservable", "::", "hermitian"}], ",", 
           "op"}], "]"}], ";", "False"}], ")"}]}], "]"}], ";", " ", 
     RowBox[{
     "Panel", " ", "@", " ", 
      "\"\<\[ScriptCapitalO]\[ScriptB]\[ScriptS]\>\""}]}], ")"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.716858999657118*^9, 3.716859111968055*^9}, {
   3.7168591521053143`*^9, 3.716859174471252*^9}, {3.716859233468276*^9, 
   3.716859262497677*^9}, {3.71685933696911*^9, 3.716859339606351*^9}, {
   3.7168594200050163`*^9, 3.7168594524484987`*^9}, {3.716859528903729*^9, 
   3.7168595353327293`*^9}, 3.71699325234241*^9, {3.7169985074841223`*^9, 
   3.716998569170457*^9}, {3.7169986342904587`*^9, 3.716998634725621*^9}, 
   3.7170274632295313`*^9, {3.717082378540165*^9, 3.7170823823166428`*^9}, {
   3.717900775710704*^9, 3.717900783372353*^9}, {3.718418114474234*^9, 
   3.7184181206335506`*^9}, {3.7184986473110228`*^9, 3.718498652048335*^9}, {
   3.718571357978601*^9, 3.718571362539319*^9}, {3.7186429200441933`*^9, 
   3.718642923435483*^9}},ExpressionUUID->"59a8d735-2470-44e9-ba0e-\
d6982153d348"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "obsSizeQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"obsSizeQ", "[", 
   RowBox[{"w_", ",", " ", "obs_", ",", " ", "stateQudits_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ws", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "w", "]"}], ",", " ", "w", ",", " ", 
        RowBox[{"{", "w", "}"}]}], "]"}]}], "}"}], ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"Times", " ", "@@", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"stateQudits", ",", " ", "ws"}], "]"}]}], " ", "==", " ", 
     RowBox[{"Length", " ", "@", " ", 
      RowBox[{"obs", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.71699493823346*^9, 3.716994969289282*^9}, {
   3.7169951735844707`*^9, 3.7169952728922453`*^9}, {3.7169972173706512`*^9, 
   3.7169972304621*^9}, {3.716997585907919*^9, 3.716997586842806*^9}, {
   3.7169983112853413`*^9, 3.716998337395112*^9}, 
   3.716998399836203*^9},ExpressionUUID->"5d4c001c-b0c4-4633-8d29-\
c27a7610bffc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validMeasComboQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validMeasComboQ", "[", "specs_List", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "specs", "]"}], " ", "==", " ", "1"}], " ", "&&",
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", " ", "@", " ", 
          RowBox[{"specs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "==", " ", "2"}], ")"}], 
       " ", "&&", " ", 
       RowBox[{"QuantumDiscretePOVMQ", "[", 
        RowBox[{"specs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}], " ", "||", 
     " ", "\n", "\t", 
     RowBox[{"AllTrue", "[", 
      RowBox[{"specs", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", " ", "@", " ", "#"}], " ", "==", " ", "0"}], 
          ")"}], " ", "||", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", " ", "@", " ", "#"}], " ", "==", " ", "2"}], 
           " ", "&&", " ", 
           RowBox[{"QuantumDiscreteObservableQ", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}]}], " ", "&"}]}], 
      "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validMeasComboQ", "[", "spec_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "spec", "]"}], " ", "==", " ", "1"}], " ", "||", 
     " ", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "spec", "]"}], " ", "==", " ", "2"}], " ", "&&",
        " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"QuantumDiscreteObservableQ", "[", 
          RowBox[{"spec", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "||", " ", 
         RowBox[{"QuantumDiscretePOVMQ", "[", 
          RowBox[{"spec", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}]}], ")"}]}]}], ";"}],
   "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validMeasComboQ", "[", 
     RowBox[{"specs_List", ",", " ", "stateQudits_Association"}], "]"}], " ", 
    ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "specWs", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"specWs", " ", "=", " ", 
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], " ", "==", " ", "0"}], ",", 
              " ", 
              RowBox[{"{", "#", "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], "&"}], ",", 
           " ", "specs"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Keys", " ", "@", " ", "stateQudits"}], ",", " ", 
               "#"}], "]"}]}], ",", " ", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               RowBox[{"QuantumDiscreteMeasurement", "::", "wireNotPresent"}],
                ",", "#"}], "]"}], ";", 
             RowBox[{"Return", "[", "False", "]"}]}]}], "]"}], "&"}], ",", 
         " ", "specWs"}], "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "specs", "]"}], " ", "==", " ", "1"}], " ", 
          "&&", " ", "\n", "\t\t", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", " ", "@", " ", 
             RowBox[{"specs", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "==", " ", "2"}], ")"}], 
          " ", "&&", "\n", "\t\t", 
          RowBox[{"QuantumDiscretePOVMQ", "[", 
           RowBox[{"specs", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], " ", "&&", "\n", 
          "\t\t", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Times", " ", "@@", " ", 
             RowBox[{"Map", "[", 
              RowBox[{"stateQudits", ",", " ", "specWs"}], "]"}]}], " ", 
            "\[Equal]", " ", 
            RowBox[{"Length", "[", 
             RowBox[{"specs", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}], 
             "]"}]}], ")"}]}], ",", " ", 
         RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"specs", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", " ", "@", " ", "#"}], " ", "==", " ", "0"}], 
            ")"}], " ", "||", "\n", "\t\t", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", " ", "@", " ", "#"}], " ", "==", " ", "2"}], 
             " ", "&&", " ", "\n", "\t\t\t", 
             RowBox[{"QuantumDiscreteObservableQ", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "&&", "\n", 
             "\t\t\t", 
             RowBox[{"obsSizeQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", "stateQudits"}], 
              "]"}]}], ")"}]}], "&"}]}], "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"validMeasComboQ", "[", 
   RowBox[{"spec_", ",", " ", "stateQudits_Association"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "specWs", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "spec", "]"}], " ", "\[Equal]", " ", "0"}], 
       ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "stateQudits", "]"}], ",", " ", "spec"}], 
         "]"}], "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", " ", "@", " ", "spec"}], " ", "==", " ", "2"}], ",",
        " ", "\n", "\t\t", 
       RowBox[{"specWs", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", " ", "@", " ", 
            RowBox[{"spec", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], " ", "==", " ", "0"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"spec", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", " ", 
          RowBox[{"spec", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", " ", 
       RowBox[{"Return", "[", "False", "]"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Keys", "[", "stateQudits", "]"}], ",", " ", "#"}], 
            "]"}]}], ",", " ", 
          RowBox[{"Return", "[", "False", "]"}]}], "]"}], "&"}], ",", " ", 
       "specWs"}], "]"}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"QuantumDiscreteObservableQ", "[", 
         RowBox[{"spec", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "&&", " ", 
        RowBox[{"obsSizeQ", "[", 
         RowBox[{"specWs", ",", " ", 
          RowBox[{"spec", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "stateQudits"}], "]"}]}],
        ")"}], " ", "||", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"QuantumDiscretePOVMQ", "[", 
         RowBox[{"spec", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "&&", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Times", " ", "@@", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"stateQudits", ",", " ", "specWs"}], "]"}]}], " ", "==", 
          " ", 
          RowBox[{"Length", "[", 
           RowBox[{"spec", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], "]"}]}], 
         ")"}]}], ")"}]}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.716938138465806*^9, 3.7169385245373497`*^9}, {
   3.716938633790922*^9, 3.716938674647053*^9}, {3.716938776061355*^9, 
   3.716938800056319*^9}, {3.7169389891727953`*^9, 3.71693907242489*^9}, {
   3.7169391427128077`*^9, 3.716939147872527*^9}, 3.716939256696265*^9, {
   3.716990570466159*^9, 3.7169905756423397`*^9}, {3.716991172295425*^9, 
   3.7169911756187677`*^9}, {3.716991289809009*^9, 3.716991335411332*^9}, {
   3.716991381455182*^9, 3.7169915862386923`*^9}, {3.71699174199366*^9, 
   3.716991761336773*^9}, {3.716991829465858*^9, 3.716991841640339*^9}, {
   3.716991989223317*^9, 3.7169920186851482`*^9}, 3.7169920639360237`*^9, {
   3.716992113175596*^9, 3.71699225440454*^9}, {3.71699228523219*^9, 
   3.716992362246492*^9}, {3.7169924129937696`*^9, 3.7169925333089457`*^9}, {
   3.7169926137785177`*^9, 3.716992735065702*^9}, {3.716992939622237*^9, 
   3.716992941461981*^9}, {3.716992990596582*^9, 3.7169930139879017`*^9}, {
   3.716993057542642*^9, 3.7169930711994867`*^9}, {3.71699310287116*^9, 
   3.716993107140893*^9}, {3.7169934051700068`*^9, 3.71699344662087*^9}, {
   3.716993529533297*^9, 3.71699353539835*^9}, {3.716993573117443*^9, 
   3.716993578229185*^9}, {3.7169936193950863`*^9, 3.716993625705742*^9}, {
   3.7169936651739693`*^9, 3.716993698017384*^9}, {3.716993743783307*^9, 
   3.716993761689209*^9}, {3.716993817249956*^9, 3.7169939246910877`*^9}, {
   3.716993978339522*^9, 3.716994003462932*^9}, {3.716994060800468*^9, 
   3.716994125029182*^9}, {3.716994163241049*^9, 3.716994322575624*^9}, {
   3.716994431233273*^9, 3.716994432125041*^9}, {3.7169945015577993`*^9, 
   3.716994502524968*^9}, {3.716994630767469*^9, 3.716994645576438*^9}, {
   3.716994824461269*^9, 3.7169948485860033`*^9}, {3.71699528050215*^9, 
   3.7169953045154533`*^9}, {3.7169953565349827`*^9, 
   3.7169954193085957`*^9}, {3.716995522173046*^9, 3.716995539458009*^9}, {
   3.716995629226701*^9, 3.716995662526876*^9}, {3.716995722043621*^9, 
   3.7169957753732452`*^9}, {3.716995806477601*^9, 3.716995812419133*^9}, {
   3.716995847169828*^9, 3.7169958625548563`*^9}, {3.716995897938632*^9, 
   3.7169959293965797`*^9}, {3.7169959738206472`*^9, 
   3.7169959753919907`*^9}, {3.716996110082952*^9, 3.716996110888646*^9}, {
   3.716996233735407*^9, 3.7169962765407887`*^9}, {3.716996310008945*^9, 
   3.716996326670154*^9}, {3.71699636676548*^9, 3.716996373443098*^9}, {
   3.71699640745198*^9, 3.7169966020598907`*^9}, {3.7169966356473207`*^9, 
   3.716996743414287*^9}, {3.716996993976231*^9, 3.716997009712284*^9}, {
   3.716997044740584*^9, 3.7169970523489923`*^9}, {3.716997088806079*^9, 
   3.716997106446419*^9}, {3.716997397142214*^9, 3.716997405551182*^9}, {
   3.716997439660055*^9, 3.716997443909848*^9}, {3.716997590816601*^9, 
   3.7169976480311623`*^9}, {3.716997807652625*^9, 3.716997827912902*^9}, {
   3.7169978842744637`*^9, 3.716997896773531*^9}, {3.71699811439662*^9, 
   3.716998118095583*^9}, {3.7169982138861303`*^9, 3.716998222953072*^9}, {
   3.716998276780575*^9, 3.716998277561157*^9}, {3.716998419425194*^9, 
   3.716998435450029*^9}, {3.7169986102016373`*^9, 3.7169986181095867`*^9}, {
   3.7169987904437017`*^9, 3.716998818638822*^9}, {3.716998957649639*^9, 
   3.7169989602931423`*^9}, {3.7170274541284657`*^9, 3.7170274544796543`*^9}, 
   3.717082389318822*^9, {3.7170886595013638`*^9, 3.717088659856089*^9}, {
   3.71712198239528*^9, 3.71712200124995*^9}, {3.718118114591996*^9, 
   3.7181181199799757`*^9}},ExpressionUUID->"f138658a-fc7e-4cdc-b773-\
e71b762048ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "repHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"repHelper", "[", 
   RowBox[{"measWs_", ",", " ", "mats_", ",", " ", "qstate_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "orderedWs", ",", " ", "otherWs", ",", " ", "currOrder", ",", " ", 
      "restOfRep", ",", " ", "fullReps", ",", " ", "shape", ",", " ", 
      "newPerm", ",", " ", "size", ",", " ", "dims", ",", " ", "orderedDims", 
      ",", " ", "stateDims", ",", " ", "a", ",", " ", "b", ",", " ", "c"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"orderedWs", " ", "=", " ", 
      RowBox[{"qstate", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"stateDims", " ", "=", " ", 
      RowBox[{"orderedWs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"size", " ", "=", " ", 
      RowBox[{"Times", " ", "@@", " ", "stateDims"}]}], ";", "\n", "\t", 
     RowBox[{"otherWs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"orderedWs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "measWs"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"currOrder", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"measWs", ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Association", "[", "orderedWs", "]"}], ";", "\n", "\t", 
     RowBox[{"orderedDims", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
         "&"}], ",", " ", "currOrder"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"restOfRep", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"identity", "[", 
          RowBox[{
           RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
          "]"}], "&"}], ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Ordering", " ", "@", " ", "currOrder"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"newPerm", ",", " ", 
        RowBox[{"newPerm", " ", "+", " ", 
         RowBox[{"Length", " ", "@", " ", "newPerm"}]}]}], "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#"}], "}"}], "&"}], ",", " ", "orderedDims"}], 
        "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"fullReps", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "measWs"}], " ", "\[Equal]", " ", 
         RowBox[{"Length", " ", "@", " ", "orderedWs"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"SparseArray", " ", "/@", " ", "mats"}], ",", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KroneckerProduct", " ", "@@", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "#", "}"}], ",", " ", "restOfRep"}], "]"}]}], 
           "&"}], ",", " ", "mats"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArrayReshape", "[", 
          RowBox[{"#", ",", " ", "shape"}], "]"}], "&"}], ",", " ", 
        "fullReps"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"#", ",", " ", "newPerm"}], "]"}], "&"}], ",", " ", "a"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"Flatten", " ", "@", " ", "#"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"size", ",", " ", "size"}], "}"}]}], "]"}], "&"}], ",", 
        " ", "b"}], "]"}]}], ";", "\n", "\t", "c"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.716002772719261*^9, 3.716002825982003*^9}, {
   3.716003575359682*^9, 3.716003580028356*^9}, {3.7160036221198874`*^9, 
   3.716003668337838*^9}, {3.716003742201303*^9, 3.716003789795239*^9}, {
   3.716862069007972*^9, 3.716862070611651*^9}, {3.716865681138733*^9, 
   3.716865690015192*^9}, 3.71701612391057*^9, {3.7170165329508257`*^9, 
   3.717016543738287*^9}, {3.717016583835536*^9, 3.717016609831478*^9}, {
   3.7170166560004473`*^9, 3.717016671119475*^9}, {3.717016753671332*^9, 
   3.71701678059947*^9}, {3.717016838689258*^9, 3.7170169335870047`*^9}, {
   3.717018104540339*^9, 3.717018113134848*^9}, {3.717018189566757*^9, 
   3.717018198905493*^9}, {3.717018250331703*^9, 3.7170183149094973`*^9}, 
   3.717018451515994*^9, {3.71701849095443*^9, 3.71701849673099*^9}, {
   3.717018587181736*^9, 3.717018589002787*^9}, {3.717018701623555*^9, 
   3.717018722939474*^9}, {3.71701876116811*^9, 3.717018763170183*^9}, {
   3.7170187938266373`*^9, 3.717018820262982*^9}, {3.717018884332732*^9, 
   3.7170188848694887`*^9}, {3.717018921317181*^9, 3.717018929220224*^9}, {
   3.717019033700766*^9, 3.717019034795463*^9}, {3.717024444911327*^9, 
   3.717024466193186*^9}, {3.717024597976221*^9, 3.7170246005770893`*^9}, {
   3.717025411677199*^9, 3.717025472230503*^9}, {3.7170255050279512`*^9, 
   3.717025569133704*^9}, {3.7170256651368923`*^9, 3.717025666343504*^9}, {
   3.7170309219304037`*^9, 3.717030923466343*^9}, {3.717030969671886*^9, 
   3.717031011456382*^9}, {3.717031231433399*^9, 3.717031246768807*^9}, {
   3.7170314083840523`*^9, 3.7170314180906143`*^9}, {3.717032492044545*^9, 
   3.717032509793187*^9}, {3.7170814379664593`*^9, 3.717081439212187*^9}, {
   3.717081503069889*^9, 3.717081569765375*^9}, {3.717081639210844*^9, 
   3.717081651401347*^9}, {3.717081715016446*^9, 3.717081731768523*^9}, {
   3.71708177241593*^9, 3.717081803377529*^9}, {3.717081836373889*^9, 
   3.71708191578347*^9}, {3.717081947506557*^9, 3.717081972676709*^9}, {
   3.71708202473389*^9, 3.717082104199397*^9}, {3.717082168653411*^9, 
   3.7170821731223087`*^9}, {3.7170825374702053`*^9, 3.717082540345149*^9}, {
   3.717120770788887*^9, 3.7171208284323797`*^9}, 
   3.718510922444767*^9},ExpressionUUID->"7045785d-c581-4465-b810-\
37fe3bb24b48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "singleRepHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"singleRepHelper", "[", 
   RowBox[{"measWs_", ",", " ", "mat_", ",", " ", "qstate_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "orderedWs", ",", " ", "otherWs", ",", " ", "currOrder", ",", " ", 
      "restOfRep", ",", " ", "fullRep", ",", " ", "shape", ",", " ", 
      "newPerm", ",", " ", "size", ",", " ", "dims", ",", " ", "orderedDims", 
      ",", " ", "stateDims", ",", " ", "a", ",", " ", "b", ",", " ", "c"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"orderedWs", " ", "=", " ", 
      RowBox[{"qstate", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"stateDims", " ", "=", " ", 
      RowBox[{"orderedWs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"size", " ", "=", " ", 
      RowBox[{"Times", " ", "@@", " ", "stateDims"}]}], ";", "\n", "\t", 
     RowBox[{"otherWs", " ", "=", " ", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"orderedWs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "measWs"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"currOrder", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"measWs", ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Association", "[", "orderedWs", "]"}], ";", "\n", "\t", 
     RowBox[{"orderedDims", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
         "&"}], ",", " ", "currOrder"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"restOfRep", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"identity", "[", 
          RowBox[{
           RowBox[{"Association", "[", "orderedWs", "]"}], "[", "#", "]"}], 
          "]"}], "&"}], ",", " ", "otherWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Ordering", " ", "@", " ", "currOrder"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"newPerm", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"newPerm", ",", " ", 
        RowBox[{"newPerm", " ", "+", " ", 
         RowBox[{"Length", " ", "@", " ", "newPerm"}]}]}], "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#"}], "}"}], "&"}], ",", " ", "orderedDims"}], 
        "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"fullRep", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "measWs"}], " ", "\[Equal]", " ", 
         RowBox[{"Length", " ", "@", " ", "orderedWs"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"SparseArray", "[", "mat", "]"}], ",", " ", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "mat", "}"}], ",", " ", "restOfRep"}], "]"}]}]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"a", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"fullRep", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"b", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"a", ",", " ", "newPerm"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "b", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"size", ",", " ", "size"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", "c"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.716002772719261*^9, 3.716002825982003*^9}, {
   3.716003575359682*^9, 3.716003580028356*^9}, {3.7160036221198874`*^9, 
   3.716003668337838*^9}, {3.716003742201303*^9, 3.716003789795239*^9}, {
   3.716862069007972*^9, 3.716862070611651*^9}, {3.716865681138733*^9, 
   3.716865690015192*^9}, 3.71701612391057*^9, {3.7170165329508257`*^9, 
   3.717016543738287*^9}, {3.717016583835536*^9, 3.717016609831478*^9}, {
   3.7170166560004473`*^9, 3.717016671119475*^9}, {3.717016753671332*^9, 
   3.71701678059947*^9}, {3.717016838689258*^9, 3.7170169335870047`*^9}, {
   3.717018104540339*^9, 3.717018113134848*^9}, {3.717018189566757*^9, 
   3.717018198905493*^9}, {3.717018250331703*^9, 3.7170183149094973`*^9}, 
   3.717018451515994*^9, {3.71701849095443*^9, 3.71701849673099*^9}, {
   3.717018587181736*^9, 3.717018589002787*^9}, {3.717018701623555*^9, 
   3.717018722939474*^9}, {3.71701876116811*^9, 3.717018763170183*^9}, {
   3.7170187938266373`*^9, 3.717018820262982*^9}, {3.717018884332732*^9, 
   3.7170188848694887`*^9}, {3.717018921317181*^9, 3.717018929220224*^9}, {
   3.717019033700766*^9, 3.717019034795463*^9}, {3.717024444911327*^9, 
   3.717024466193186*^9}, {3.717024597976221*^9, 3.7170246005770893`*^9}, {
   3.717025411677199*^9, 3.717025472230503*^9}, {3.7170255050279512`*^9, 
   3.717025569133704*^9}, {3.7170256651368923`*^9, 3.717025666343504*^9}, {
   3.7170309219304037`*^9, 3.717030923466343*^9}, {3.717030969671886*^9, 
   3.717031011456382*^9}, {3.717031231433399*^9, 3.717031246768807*^9}, {
   3.7170314083840523`*^9, 3.7170314180906143`*^9}, {3.717032492044545*^9, 
   3.717032509793187*^9}, {3.7170814379664593`*^9, 3.717081439212187*^9}, {
   3.717081503069889*^9, 3.717081569765375*^9}, {3.717081639210844*^9, 
   3.717081651401347*^9}, {3.717081715016446*^9, 3.717081731768523*^9}, {
   3.71708177241593*^9, 3.717081803377529*^9}, {3.717081836373889*^9, 
   3.71708191578347*^9}, {3.717081947506557*^9, 3.717081972676709*^9}, {
   3.71708202473389*^9, 3.717082104199397*^9}, {3.717082168653411*^9, 
   3.7170821731223087`*^9}, {3.7170825374702053`*^9, 3.717082540345149*^9}, {
   3.717082951324102*^9, 3.717083133455291*^9}, {3.717083282005472*^9, 
   3.71708328526976*^9}, {3.717083378933394*^9, 3.7170833803399763`*^9}, {
   3.717087022600021*^9, 3.717087033606269*^9}, {3.71851089562719*^9, 
   3.718510906975028*^9}},ExpressionUUID->"1e66dad7-da80-4c14-b236-\
375972b32f7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "povmHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"povmHelper", "[", 
   RowBox[{"measWs_", ",", " ", "povm_", ",", " ", "qstate_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "reps", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"reps", " ", "=", " ", 
      RowBox[{"repHelper", "[", 
       RowBox[{"measWs", ",", " ", 
        RowBox[{"povm", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "qstate"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"Association", " ", "@", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", " ", "@", " ", 
          RowBox[{"povm", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", "\[Rule]", " ", 
        "reps"}], "]"}]}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.716002772719261*^9, 3.716002825982003*^9}, {
   3.716003575359682*^9, 3.716003580028356*^9}, {3.7160036221198874`*^9, 
   3.716003668337838*^9}, {3.716003742201303*^9, 3.716003789795239*^9}, {
   3.716862069007972*^9, 3.716862070611651*^9}, {3.716865681138733*^9, 
   3.716865690015192*^9}, 3.71701612391057*^9, {3.7170165329508257`*^9, 
   3.717016543738287*^9}, {3.717016583835536*^9, 3.717016609831478*^9}, {
   3.7170166560004473`*^9, 3.717016671119475*^9}, {3.717016753671332*^9, 
   3.71701678059947*^9}, {3.717016838689258*^9, 3.7170169335870047`*^9}, {
   3.717018104540339*^9, 3.717018113134848*^9}, {3.717018189566757*^9, 
   3.717018198905493*^9}, {3.717018250331703*^9, 3.7170183149094973`*^9}, 
   3.717018451515994*^9, {3.71701849095443*^9, 3.71701849673099*^9}, {
   3.717018587181736*^9, 3.717018589002787*^9}, {3.717018701623555*^9, 
   3.717018722939474*^9}, {3.71701876116811*^9, 3.717018763170183*^9}, {
   3.7170187938266373`*^9, 3.717018820262982*^9}, {3.717018884332732*^9, 
   3.7170188848694887`*^9}, {3.717018921317181*^9, 3.717018929220224*^9}, {
   3.717019033700766*^9, 3.717019034795463*^9}, {3.717024444911327*^9, 
   3.717024466193186*^9}, {3.717024597976221*^9, 3.7170246005770893`*^9}, {
   3.717025614119279*^9, 3.717025686946529*^9}, {3.7170286951826687`*^9, 
   3.7170286982312613`*^9}},ExpressionUUID->"a99ab7c0-da55-47fe-b05c-\
6e96351052f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigToProjector", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"eigToProjector", "[", "eig_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"SparseArray", " ", "@", " ", 
    RowBox[{"ConjugateTranspose", "[", 
     RowBox[{"{", "eig", "}"}], "]"}]}], ".", 
   RowBox[{"{", "eig", "}"}]}]}]}], "Code",
 CellChangeTimes->{{3.717026224515604*^9, 3.717026271965954*^9}, {
  3.717026922403317*^9, 
  3.717026924690404*^9}},ExpressionUUID->"314c9df2-2694-4690-a094-\
8c8cf4f029b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "combineReps", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"combineReps", "[", "reps_", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{"SparseArray", " ", "@", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "reps", "]"}], " ", "\[Equal]", " ", "1"}], ",",
       " ", 
      RowBox[{"reps", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"KroneckerProduct", " ", "@@", " ", "reps"}]}], "]"}]}], 
   ")"}]}]}], "Code",
 CellChangeTimes->{{3.717026361213004*^9, 3.7170264042424383`*^9}, {
   3.7170264808041277`*^9, 3.7170264847942867`*^9}, {3.717026930874824*^9, 
   3.7170269323219748`*^9}, {3.717030478161585*^9, 3.717030503701095*^9}, 
   3.717031291179213*^9, {3.717032439402532*^9, 
   3.717032440617806*^9}},ExpressionUUID->"e9103ab3-cfb3-4350-b36b-\
42ad2a816841"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "tupToRep", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"tupToRep", "[", 
   RowBox[{
   "tuple_", ",", " ", "eigs_", ",", " ", "measWs_", ",", " ", "qstate_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"tuple", " ", "\[Rule]", " ", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vecs", " ", "=", " ", 
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"eigs", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"First", "[", "#2", "]"}], ",", " ", "#1"}], "]"}], 
           "]"}], "&"}], ",", " ", "tuple"}], "]"}]}], "}"}], ",", " ", "\n", 
     "\t", 
     RowBox[{"singleRepHelper", "[", 
      RowBox[{"measWs", ",", " ", 
       RowBox[{"combineReps", "[", 
        RowBox[{"eigToProjector", " ", "/@", " ", "vecs"}], "]"}], ",", " ", 
       "qstate"}], "]"}]}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.717023727423276*^9, 3.717023770305537*^9}, {
   3.717023878951323*^9, 3.717023950855383*^9}, {3.7170243308103447`*^9, 
   3.717024334994885*^9}, {3.717026092104148*^9, 3.717026164213089*^9}, {
   3.717026555464341*^9, 3.7170265738788033`*^9}, {3.717026714077385*^9, 
   3.717026774816432*^9}, {3.717026833577827*^9, 3.717026896519034*^9}, {
   3.717027201313936*^9, 3.717027237481415*^9}, {3.717032209486114*^9, 
   3.7170322187747*^9}, {3.71703226170783*^9, 3.717032304242455*^9}, {
   3.717032337887373*^9, 3.717032340704587*^9}, {3.717032446671382*^9, 
   3.717032453183009*^9}, {3.7170333799006433`*^9, 3.71703338195793*^9}, {
   3.7170335394074593`*^9, 3.717033540321505*^9}, 3.7170809526455317`*^9, {
   3.717080996038752*^9, 3.717081013402588*^9}, {3.7170811494933558`*^9, 
   3.717081170309273*^9}, 3.717081243080474*^9, {3.717081340650607*^9, 
   3.717081366187599*^9}, 3.717081403925167*^9, {3.7170815833493767`*^9, 
   3.717081583621416*^9}, {3.7170832000429697`*^9, 
   3.717083206515944*^9}},ExpressionUUID->"f7eda724-26e3-4835-943f-\
21e13692c6f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "obsHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"obsHelper", "[", 
   RowBox[{"measWs_", ",", " ", "obs_", ",", " ", "qstate_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eigs", ",", " ", "tuples", ",", " ", "repTable", ",", " ", "obMats"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"measWs", ",", " ", "obs", ",", " ", "qstate"}], "}"}], ";", 
     "\n", "\t", 
     RowBox[{"obMats", " ", "=", " ", 
      RowBox[{"obs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"Eigenvectors", ",", " ", "obMats"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"tuples", " ", "=", " ", 
      RowBox[{"Tuples", "[", 
       RowBox[{"Range", " ", "/@", " ", 
        RowBox[{"Length", "/@", " ", "eigs"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"tupToRep", "[", 
      RowBox[{
       RowBox[{"tuples", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "eigs", ",", " ", "measWs", ",", 
       " ", "qstate"}], "]"}], ";", "\n", "\t", 
     RowBox[{"repTable", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tupToRep", "[", 
           RowBox[{"#", ",", "eigs", ",", " ", "measWs", ",", " ", "qstate"}],
            "]"}], "&"}], ",", " ", "tuples"}], "]"}]}]}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJwd0Vsow3EcBfA1lOWyWV5cJuaSJk2ZS2jYUDNT02xIisiSUItISUrRViQ1
Dx5MYbZR82IPeFjTJGkbY24h0cooNEQu//N7+PZ5PKfzTWnrreug02g0LnUw
VHUgNVofywU8kxwGHOxhuBzxPAot94daqO7J1kGPnr8OW8bnNqGxeN4DF6cK
rmD8huQWvs/eEHt0SQHY0PFHVIzpPuFlK/8LRtfbfknO09UfVB0aElYp34p4
SXBP6yyBIo+5AiptLil0mapqYHhBnxwq9AZiOL+sEzrSa9XQQre2mSjdFwPt
sGtyZg3ercSsQ06jxAkXRpTELFnREdxxVxIzjJpuM2Ue47sXPgi9p1ARdJ9B
gzT5GlaXDhFLo6Meob2WQ2TTH1It2KuGmQbjP5S50DcjzIcTupdyYn+mCDYF
pcw1/GNbQyw8jYyFn7NmDtxP1Ipg8w9DDP1LAq8DvTrtJ3Aw7usGakJoL9Av
Z7B2KcNcMmLOliAOvgq5HGg7DvqclLztkHM4zXIx9ijFNh/xHyftNBU=
  
  "],ExpressionUUID->"f50b2ac1-17e8-41d6-a90e-22bfeeb8634b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "measurementProbability", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"measurementProbability", "[", 
   RowBox[{"measOp_", ",", " ", "qstate_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"vecQ", "[", "qstate", "]"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vec", " ", "=", " ", 
        RowBox[{"qstate", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", 
         RowBox[{"{", "vec", "}"}], "]"}], ".", 
        RowBox[{"{", "vec", "}"}], ".", 
        RowBox[{"ConjugateTranspose", "[", "measOp", "]"}], ".", "measOp"}], 
       "]"}]}], "]"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"qstate", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"Tr", "[", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "measOp", "]"}], ".", "measOp", 
        ".", "mat"}], "]"}]}], "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.717019122175211*^9, 3.717019161592725*^9}, {
  3.717019258492388*^9, 3.71701927442589*^9}, {3.717020042595407*^9, 
  3.717020082549057*^9}, {3.717020173825433*^9, 3.717020307749569*^9}, {
  3.7170252206551228`*^9, 3.717025242773344*^9}, {3.7170278638441887`*^9, 
  3.717027913549242*^9}},ExpressionUUID->"a1b50898-fbfe-4e1b-8a83-\
829fc18a1d1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "measurementOutcome", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"measurementOutcome", "[", 
   RowBox[{"measOp_", ",", " ", "qstate_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"vecQ", "[", "qstate", "]"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vec", " ", "=", " ", 
        RowBox[{"qstate", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"measOp", ".", "vec"}]}], "]"}], ",", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"qstate", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], "}"}], 
      ",", " ", 
      RowBox[{"measOp", ".", "mat", ".", 
       RowBox[{"ConjugateTranspose", "[", "measOp", "]"}]}]}], "]"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.717020449554953*^9, 3.717020517057562*^9}, {
  3.717020569122732*^9, 3.717020580699689*^9}, {3.717020656037973*^9, 
  3.717020673815119*^9}, {3.717020747877082*^9, 3.717020882349031*^9}, {
  3.717025249706253*^9, 3.717025262181408*^9}, {3.717027919237144*^9, 
  3.717027947508909*^9}},ExpressionUUID->"95c4ca61-0d65-49d4-a60b-\
68f547951924"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "measurementHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measurementHelper", "[", 
     RowBox[{
      RowBox[{"w_", " ", "\[Rule]", " ", "povms_QuantumDiscretePOVM"}], ",", 
      " ", "state_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "w", "]"}], ",", " ", "w", ",", " ", 
          RowBox[{"{", "w", "}"}]}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"povmHelper", "[", 
       RowBox[{"ws", ",", " ", "povms", ",", " ", "state"}], "]"}]}], "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measurementHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w_", " ", "\[Rule]", " ", "povm_QuantumDiscretePOVM"}], "}"}],
       ",", " ", "state_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "w", "]"}], ",", " ", "w", ",", " ", 
          RowBox[{"{", "w", "}"}]}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"povmHelper", "[", 
       RowBox[{"ws", ",", " ", "povm", ",", " ", "state"}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measurementHelper", "[", 
     RowBox[{
      RowBox[{"w_", " ", "\[Rule]", " ", "obs_QuantumDiscreteObservable"}], 
      ",", " ", "qstate_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "w", "]"}], ",", " ", "w", ",", " ", 
          RowBox[{"{", "w", "}"}]}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"obsHelper", "[", 
       RowBox[{"ws", ",", " ", 
        RowBox[{"{", "obs", "}"}], ",", " ", "qstate"}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measurementHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1_", " ", "\[Rule]", " ", "obs_QuantumDiscreteObservable"}], 
       "}"}], ",", " ", "state_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "w1", "]"}], ",", " ", "w1", ",", " ", 
          RowBox[{"{", "w1", "}"}]}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"obsHelper", "[", 
       RowBox[{"ws", ",", " ", 
        RowBox[{"{", "obs", "}"}], ",", " ", "state"}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measurementHelper", "[", 
     RowBox[{"specs_List", ",", " ", "state_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"stateQudits", ",", " ", "formattedSpecs"}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"stateQudits", " ", "=", " ", 
        RowBox[{"Association", " ", "@", " ", 
         RowBox[{"state", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}]}], 
       ";", "\n", "\t", 
       RowBox[{"formattedSpecs", " ", "=", " ", "\n", "\t\t", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], " ", "\[Equal]", " ", "0"}], 
             ",", " ", "\n", "\t\t\t", 
             RowBox[{"#", " ", "\[Rule]", " ", 
              RowBox[{"QuantumDiscreteObservable", "[", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"stateQudits", "[", "#", "]"}], "]"}], "]"}]}], ",", 
             " ", "#"}], "]"}], "&"}], ",", " ", "specs"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"obsHelper", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"formattedSpecs", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"formattedSpecs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", "state"}], 
        "]"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"measurementHelper", "[", 
   RowBox[{"w_", ",", " ", "state_"}], "]"}], " ", ":=", " ", 
  RowBox[{"measurementHelper", "[", 
   RowBox[{
    RowBox[{"{", "w", "}"}], ",", " ", "state"}], "]"}]}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{{3.717000554402462*^9, 3.7170005746865807`*^9}, {
   3.717005658073019*^9, 3.7170057026510763`*^9}, {3.7170058185937843`*^9, 
   3.717005824264944*^9}, {3.7170059067821608`*^9, 3.717005922238513*^9}, {
   3.7170059749819098`*^9, 3.717006115866623*^9}, {3.717006168758657*^9, 
   3.717006223182128*^9}, {3.71700626192619*^9, 3.717006306760111*^9}, {
   3.7170063404484673`*^9, 3.7170063595270777`*^9}, {3.717006396709244*^9, 
   3.717006481863484*^9}, {3.717006517641718*^9, 3.7170065553647127`*^9}, {
   3.7170066978348207`*^9, 3.717006767381927*^9}, {3.717006808476108*^9, 
   3.717006943482945*^9}, {3.7170069965425653`*^9, 3.717007154648099*^9}, {
   3.717007253196254*^9, 3.717007258246381*^9}, {3.71702470173884*^9, 
   3.717024710169106*^9}, {3.71702861510452*^9, 3.71702861587624*^9}, 
   3.7170286697062073`*^9, {3.717029429679003*^9, 3.717029431320004*^9}, {
   3.717029780602764*^9, 3.717029782129182*^9}, {3.717030654363607*^9, 
   3.717030674997999*^9}, {3.717030742020576*^9, 3.71703074420759*^9}, {
   3.717032623038364*^9, 3.71703269142381*^9}, {3.717032760874217*^9, 
   3.7170328675186043`*^9}, {3.7170805154818373`*^9, 3.717080522402514*^9}, {
   3.71708058373871*^9, 3.717080641560865*^9}, 3.7170872642967663`*^9, {
   3.718509858781205*^9, 3.718510002733509*^9}, {3.718510051693874*^9, 
   3.718510079411697*^9}, {3.718510148709379*^9, 3.718510177167664*^9}, {
   3.718510328690277*^9, 3.718510350446083*^9}, {3.7185106068952*^9, 
   3.7185106481800413`*^9}, {3.7185110961710577`*^9, 
   3.7185111280778418`*^9}},ExpressionUUID->"bba3bc68-ddba-4ba7-8165-\
cd7a6d017ea4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteMeasurement", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{
      RowBox[{"QuantumDiscreteMeasurement", "[", "specs_", "]"}], ",", " ", 
      "StandardForm"}], "]"}], " ", "/;", " ", 
    RowBox[{"validMeasComboQ", "[", "specs", "]"}]}], " ", ":=", " ", 
   RowBox[{"Panel", " ", "@", " ", 
    RowBox[{
    "ToString", "[", 
     "\"\<\[ScriptCapitalM]\[ScriptE]\[ScriptA]\[ScriptS]\>\"", "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{
      RowBox[{"QuantumDiscreteMeasurement", "[", 
       RowBox[{"specs_", ",", " ", "state_QuantumDiscreteState"}], "]"}], ",",
       " ", "StandardForm"}], "]"}], " ", ":=", " ", 
    RowBox[{"Panel", " ", "@", " ", 
     RowBox[{
     "ToString", "[", 
      "\"\<\[ScriptCapitalM]\[ScriptE]\[ScriptA]\[ScriptS]\>\"", "]"}]}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"QuantumDiscreteMeasurement", "[", "specs_", "]"}], "[", 
     "state_QuantumDiscreteState", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"QuantumDiscreteMeasurement", "[", 
      RowBox[{"specs", ",", " ", "state"}], "]"}], "[", "\"\<Collapse\>\"", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"QuantumDiscreteMeasurement", "[", 
      RowBox[{"specs_", ",", " ", "state_"}], "]"}], "[", 
     "\"\<ProbabilityDistribution\>\"", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "reps", ",", " ", "probs", ",", " ", "outcomes", ",", " ", "keys"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"measurementHelper", "[", 
         RowBox[{"specs", ",", " ", "state"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"probs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"measurementProbability", "[", 
            RowBox[{"#", ",", " ", "state"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"outcomes", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"measurementOutcome", "[", 
            RowBox[{"#", ",", " ", "state"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"keys", " ", "=", " ", 
        RowBox[{"Keys", "[", "reps", "]"}]}], ";", "\n", "\t", 
       RowBox[{"Association", " ", "@", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"outcomes", "[", "#", "]"}], " ", "\[Rule]", " ", 
            RowBox[{"probs", "[", "#", "]"}]}], "&"}], ",", " ", "keys"}], 
         "]"}]}]}]}], "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteMeasurement", "[", 
     RowBox[{"specs_", ",", " ", "state_"}], "]"}], "[", "\"\<Collapse\>\"", 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "reps", ",", " ", "probs", ",", " ", "outcomes", ",", " ", "newState"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"reps", " ", "=", " ", 
       RowBox[{"measurementHelper", "[", 
        RowBox[{"specs", ",", " ", "state"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"Values", " ", "@", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"measurementProbability", "[", 
            RowBox[{"#", ",", " ", "state"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"outcomes", " ", "=", " ", 
       RowBox[{"Values", " ", "@", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"measurementOutcome", "[", 
            RowBox[{"#", ",", " ", "state"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"newState", " ", "=", " ", "state"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vecQ", "[", "state", "]"}], ",", " ", 
        RowBox[{
         RowBox[{"newState", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], " ", "=", 
         " ", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"probs", " ", "\[Rule]", " ", "outcomes"}], "]"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"newState", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], " ", 
         "=", " ", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"probs", " ", "\[Rule]", " ", "outcomes"}], "]"}]}]}], 
       "]"}], ";", "\n", "\t", "newState"}]}], "\n", "\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{{3.716938085840794*^9, 3.716938092416051*^9}, 
   3.7169387235112677`*^9, {3.7169392901756153`*^9, 3.716939359024992*^9}, {
   3.716939418619769*^9, 3.716939513416415*^9}, {3.7169395531034946`*^9, 
   3.716939606666853*^9}, {3.716990498117777*^9, 3.716990498819293*^9}, {
   3.717000140624144*^9, 3.717000225779376*^9}, {3.717000295625639*^9, 
   3.717000353209*^9}, {3.7170281011252813`*^9, 3.717028128596716*^9}, {
   3.717028173342545*^9, 3.717028188247315*^9}, {3.7170330506918573`*^9, 
   3.717033148914465*^9}, {3.7170332588971863`*^9, 3.717033260175905*^9}, {
   3.717033570529978*^9, 3.717033572363131*^9}, {3.7170336888645773`*^9, 
   3.717033719140139*^9}, {3.717033827506604*^9, 3.717033877747163*^9}, {
   3.717033919971209*^9, 3.7170339752656813`*^9}, {3.717034164895192*^9, 
   3.7170341654223337`*^9}, {3.717034275552245*^9, 3.717034305029256*^9}, {
   3.7170344440032167`*^9, 3.717034516456883*^9}, {3.717034582720677*^9, 
   3.717034713021656*^9}, {3.717034839246708*^9, 3.71703488529815*^9}, {
   3.717035369141281*^9, 3.7170353715007343`*^9}, {3.717080397363212*^9, 
   3.717080398653564*^9}, {3.717087061996848*^9, 3.71708706349691*^9}, {
   3.7171220150045013`*^9, 3.717122027578618*^9}, {3.7181224375012007`*^9, 
   3.718122437883312*^9}, {3.718509147075673*^9, 3.718509170890397*^9}, {
   3.7185092637822*^9, 3.718509268533361*^9}, {3.718511082966627*^9, 
   3.718511089121583*^9}},ExpressionUUID->"fb1f965d-13c7-4fc2-8ce9-\
0d12827de335"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumCircuit", "Chapter",
 CellDingbat->None,
 CellChangeTimes->{{3.7076486444926605`*^9, 3.707648661780977*^9}, {
   3.707842977577381*^9, 3.707842979061743*^9}, 
   3.71172763562584*^9},ExpressionUUID->"bdfed6ed-eece-427d-b114-\
abbe651b9fdf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "circuitDisplayFormat", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{"\[Theta]1_", "?", "NumericQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"\"\<D(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]1", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Rx\>\"", ",", " ", 
      RowBox[{"\[Theta]2_", "?", "NumericQ"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<R\>\"", ",", "\"\<x\>\""}], "]"}], ",", " ", 
      "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]2", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Ry\>\"", ",", " ", 
      RowBox[{"\[Theta]3_", "?", "NumericQ"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"\"\<R\>\"", ",", "\"\<y\>\""}], "]"}], ",", " ", 
      "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]3", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Rz\>\"", ",", " ", 
       RowBox[{"\[Theta]4_", "?", "NumericQ"}]}], "}"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{
       RowBox[{"Subscript", "[", 
        RowBox[{"\"\<R\>\"", ",", "\"\<z\>\""}], "]"}], ",", " ", 
       "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
     RowBox[{"ToString", "[", "\[Theta]4", "]"}], "<>", "\"\<)\>\""}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "\"\<Hadamard\>\"", "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalH]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<PauliYGate\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalY]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<PauliXGate\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<PauliZGate\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalZ]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<Fourier\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalQ]\[ScriptCapitalF]\[ScriptCapitalT]\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<SUM\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalS]\[ScriptU]\[ScriptM]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "\"\<S\>\"", "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalS]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<T\>\"", "]"}], " ", ":=", " ", 
    "\"\<\[ScriptCapitalT]\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "\"\<Fredkin\>\"", "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalF]\[ScriptR]\[ScriptE]\[ScriptD]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<Toffoli\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalT]\[ScriptO]\[ScriptF]\[ScriptF]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<SWAP\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<RootSWAP\>\"", "]"}], " ", ":=",
     " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{
      "Sqrt", "[", 
       "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\"", "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "\"\<NOT\>\"", "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<RootNOT\>\"", "]"}], " ", ":=", 
    " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", "\"\<\[ScriptCapitalX]\>\"", "]"}], ",", " ", 
      "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "\"\<CNOT\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalX]\>\""}],
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", "\"\<CPhase\>\"", "]"}], " ", ":=", 
    " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalZ]\>\""}], "]"}],
       ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"un_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", 
      "k_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{
       "\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalU]\>\""}], "]"}],
       ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", 
    RowBox[{"un_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalU]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitDisplayFormat", "[", 
     RowBox[{"cond_", "?", "condListQ"}], "]"}], " ", ":=", " ", 
    "\"\<\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitDisplayFormat", "[", "expr_List", "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalM]\>\""}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7129684705609426`*^9, 3.712968567933194*^9}, {
   3.712968671344685*^9, 3.712968731147493*^9}, {3.7129688105354853`*^9, 
   3.7129688670063*^9}, {3.712968978029748*^9, 3.71296926802986*^9}, {
   3.712969308927154*^9, 3.71296935158243*^9}, {3.712969508457259*^9, 
   3.712969610325734*^9}, {3.712970634126395*^9, 3.712970952636045*^9}, {
   3.712971747145282*^9, 3.712971781992641*^9}, {3.712971863701434*^9, 
   3.712971949279022*^9}, {3.712972371705594*^9, 3.7129723953020782`*^9}, {
   3.712972559979014*^9, 3.712972569696015*^9}, 3.712972744897488*^9, {
   3.712972926819644*^9, 3.712972940736354*^9}, {3.712972974876416*^9, 
   3.712972976503883*^9}, {3.7129730967439537`*^9, 3.712973114341484*^9}, {
   3.7132007140027113`*^9, 3.713200742831785*^9}, {3.713285146912704*^9, 
   3.713285160003614*^9}, {3.713285215558818*^9, 3.713285218326665*^9}, {
   3.7134905759843388`*^9, 3.713490577060152*^9}, {3.715308772176961*^9, 
   3.715308780293708*^9}, {3.7159940458755693`*^9, 3.715994083855802*^9}, {
   3.71599412922722*^9, 3.7159942938273*^9}, {3.715994332583449*^9, 
   3.7159944812733393`*^9}, 3.7159946633809767`*^9, {3.7159947833861322`*^9, 
   3.715994965502123*^9}, {3.7168631383066473`*^9, 3.716863156907363*^9}, {
   3.7168734072620363`*^9, 3.7168734076617947`*^9}, {3.716904584385914*^9, 
   3.716904614526658*^9}, {3.7169065391997147`*^9, 3.716906540266697*^9}, {
   3.7169067120703297`*^9, 3.7169067861239367`*^9}, {3.716907090472089*^9, 
   3.716907200337124*^9}, {3.716907771296056*^9, 3.716907797507053*^9}, {
   3.7169078278837957`*^9, 3.716907831711348*^9}, {3.716921463292527*^9, 
   3.716921465416438*^9}, {3.716921672856338*^9, 3.716921680564582*^9}, {
   3.717043282171434*^9, 3.7170434609088697`*^9}, {3.7185131439576797`*^9, 
   3.7185131655960073`*^9}},ExpressionUUID->"6f068243-ab6c-4ae8-8422-\
9dd581346746"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simps", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Paulis\>\"", ",", " ", "\"\<CNOT\>\"", ",", " ", "\"\<CPhase\>\"", 
     ",", " ", "\"\<SWAP\>\"", ",", " ", "\"\<Fourier\>\"", ",", " ", 
     "\"\<Hadamard\>\"", ",", " ", "\"\<Rotation\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circOptionsHelper", "[", "\"\<True\>\"", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"circOptionsHelper", "[", "\"\<All\>\"", "]"}], " ", ":=", " ", 
    "simps"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circOptionsHelper", "[", "\"\<False\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circOptionsHelper", "[", "\"\<None\>\"", "]"}], " ", ":=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circOptionsHelper", "[", "rules_List", "]"}], " ", ":=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"rules", ",", " ", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"simps", ",", " ", "#"}], "]"}], " ", "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circOptionsHelper", "[", "rule_String", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"simps", ",", " ", "rule"}], "]"}], ",", " ", 
     RowBox[{"{", "rule", "}"}], ",", " ", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711640451396867*^9, 3.711640540739266*^9}, {
  3.711640586673698*^9, 3.7116406148735037`*^9}, {3.71164065745138*^9, 
  3.711640777100206*^9}, {3.711640811483069*^9, 3.711640949973612*^9}, {
  3.71164102809832*^9, 3.711641079053893*^9}, {3.711671939063415*^9, 
  3.711671944761972*^9}, {3.711916497823578*^9, 3.711916503929998*^9}, {
  3.715309703373238*^9, 3.715309706265966*^9}, {3.716906559886065*^9, 
  3.7169065605374537`*^9}},ExpressionUUID->"36795600-10a3-41c2-baa0-\
a8ad3c35df81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "measurementWires", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"measurementWires", "[", "qmeas_", "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "qmeas", "]"}], " ", "\[Equal]", " ", "0"}], ",", 
    " ", "qmeas", ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "qmeas", "]"}], " ", "\[Equal]", " ", "2"}], " ",
      "&&", " ", 
     RowBox[{"!", 
      RowBox[{"ListQ", "[", "qmeas", "]"}]}]}], ",", " ", 
    RowBox[{"qmeas", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\n", "\t", "True", ",", " ", 
    RowBox[{"measurementWires", " ", "/@", " ", "qmeas"}]}], "]"}]}]}], "Code",\

 CellChangeTimes->{{3.71704588478576*^9, 3.71704601437816*^9}, {
   3.7170460589899473`*^9, 3.7170460640599194`*^9}, {3.717046102528845*^9, 
   3.71704620941002*^9}, {3.717046264361109*^9, 3.7170463152813883`*^9}, {
   3.717046390695655*^9, 3.717046397903335*^9}, 
   3.717046431406917*^9},ExpressionUUID->"ee046be3-424e-421d-80ab-\
d5997b57cbbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "conditionalWires", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"conditionalWires", "[", "qcond_", "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", " ", "@", " ", 
   RowBox[{"qcond", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All", ",", "2", ",", "2"}], "]"}], "]"}]}]}]}], "Code",\

 CellChangeTimes->{{3.71712223945778*^9, 3.717122273512848*^9}, {
  3.71712230621661*^9, 
  3.717122339081065*^9}},ExpressionUUID->"22350fa9-ab2a-45e2-bc15-\
f75d0329de44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "circuitWires", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"circuitWires", "[", "elems_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"measWires", ",", " ", "condWires", ",", " ", "qopWires"}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"measWires", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"elems", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", 
          "QuantumDiscreteMeasurement"}], " ", "&"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"measWires", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"measurementWires", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", " ", 
        "measWires"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"condWires", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"elems", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", 
          "QuantumDiscreteConditionalOperation"}], " ", "&"}]}], "]"}]}], ";",
      "\n", "\t", 
     RowBox[{"condWires", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"conditionalWires", ",", " ", "condWires"}], "]"}]}], ";", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"qopWires", " ", "=", " ", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"elems", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", 
           "QuantumDiscreteOperation"}], " ", "&"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"Sort", " ", "@", " ", 
      RowBox[{"DeleteDuplicates", " ", "@", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"qopWires", ",", " ", "condWires", ",", " ", "measWires"}], 
         "]"}]}]}]}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.718080791981923*^9, 
  3.7180809549038897`*^9}},ExpressionUUID->"44b9070a-d1ef-4743-a5af-\
4728e88850bf"],

Cell[CellGroupData[{

Cell["Formatting and Simplification of Quantum Circuit", "Subsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711726687784985*^9, 3.711726712624481*^9}, {
  3.712371583827078*^9, 
  3.712371584297306*^9}},ExpressionUUID->"cbdf426b-cbf2-42c8-9714-\
c7d8b22e2292"],

Cell[CellGroupData[{

Cell["Simplification", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711726729500692*^9, 3.711726749671586*^9}, {
  3.711916589912972*^9, 3.7119165910547323`*^9}, {3.712950639800177*^9, 
  3.712950641126318*^9}, {3.71297587776726*^9, 
  3.7129758801894197`*^9}},ExpressionUUID->"216117de-9d0f-42d0-9fc6-\
de44d6731a46"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "applySimpRule", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Pauli", " ", "Simplification", " ", "Rules"}], " ", "*)"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<Paulis\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "middle", "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliYGate\>\"", ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      " ", "middle", ",", " ", "post"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<Paulis\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "middle", "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliYGate\>\"", ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      " ", "middle", ",", " ", "post"}], "}"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliYGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliYGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<Paulis\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "middle", "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle", ",", " ", "post"}], "}"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"exp", ":", 
            RowBox[{"\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\""}]}], ",", 
           " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"exp", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "l_Integer"}]}], 
          "]"}], ",", "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<Paulis\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "middle", "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"exp", ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"l", "+", "k"}], ",", " ", "d"}], "]"}]}]}], "]"}], ",", 
      " ", "post"}], "}"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"applySimpRule", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pre___", ",", " ", "\n", "\t", 
        RowBox[{"QuantumDiscreteOperation", "[", 
         RowBox[{
          RowBox[{"\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\""}], ",", " ",
           "w_", ",", " ", 
          RowBox[{
          "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
          " ", 
          RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "0"}]}], "]"}], ",", 
        "\n", "\t", "post___"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"pre1___", ",", " ", "\"\<Paulis\>\"", ",", " ", "post1___"}], 
       "}"}]}], "\n", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "post"}], "}"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Rotation", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"exp", ":", 
              RowBox[{"\"\<Rx\>\"", "|", "\"\<Ry\>\"", "|", "\"\<Rz\>\""}]}], 
             ",", " ", "\[Theta]1_"}], "}"}], ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"exp", ",", " ", "\[Theta]2_"}], "}"}], ",", " ", "w_", 
           ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "pre1___", ",", " ", "\"\<Rotation\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "mid", "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}], 
       " ", "&&", " ", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "mid", "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", "\n", "\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"exp", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Rx\>\"", " ", "\[Rule]", " ", "\"\<Ry\>\""}], ",", 
             " ", 
             RowBox[{"\"\<Ry\>\"", " ", "\[Rule]", " ", "\"\<Rz\>\""}], ",", 
             RowBox[{"\"\<Rz\>\"", " ", "\[Rule]", " ", "\"\<Rx\>\""}]}], 
            "}"}]}], "]"}]}], "]"}], "\n", "\t", "&&", " ", 
       RowBox[{"FreeQ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "mid", "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", " ", "\n", "\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"exp", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<Rx\>\"", " ", "\[Rule]", " ", "\"\<Rz\>\""}], ",", 
             " ", 
             RowBox[{"\"\<Ry\>\"", " ", "\[Rule]", " ", "\"\<Rx\>\""}], ",", 
             RowBox[{"\"\<Rz\>\"", " ", "\[Rule]", " ", "\"\<Ry\>\""}]}], 
            "}"}]}], "]"}]}], "]"}]}], " ", ")"}]}], " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "mid", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"exp", ",", " ", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", " ", "+", " ", "\[Theta]2"}], ",", " ", 
            RowBox[{"2", " ", "*", " ", "Pi"}]}], "]"}]}], "}"}], ",", " ", 
        "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      " ", "post"}], "}"}]}], ";"}], "\n", "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Hadamard", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Hadamard\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Hadamard\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "pre1___", ",", " ", "\"\<Hadamard\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "mid", "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "mid", ",", " ", "post"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Hadamard\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"ex", ":", 
            RowBox[{"\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\""}]}], ",", 
           " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Hadamard\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "pre1___", ",", " ", "\"\<Hadamard\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mid1", ",", " ", "mid2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "mid1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{"ex", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<PauliXGate\>\"", "->", "\"\<PauliZGate\>\""}], ",", 
            " ", 
            RowBox[{"\"\<PauliZGate\>\"", "->", "\"\<PauliXGate\>\""}]}], 
           "}"}]}], "]"}], ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      "\n", "\t    ", "mid2", ",", " ", "post"}], "}"}]}], ";"}], "\n", 
  "\t    ", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Fourier", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Fourier\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "mid2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Fourier\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "pre1___", ",", " ", "\"\<Fourier\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mid1", ",", " ", "mid2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "mid1", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliXGate\>\"", ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      " ", "mid2", ",", " ", "post"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Fourier\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "mid1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "mid2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<Fourier\>\"", ",", " ", "w_", ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "pre1___", ",", " ", "\"\<Fourier\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"mid1", ",", " ", "mid2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", "w"}], "]"}]}], 
    " ", ":=", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "mid1", ",", " ", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliZGate\>\"", ",", " ", "w", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"-", "k"}], ",", " ", "d"}], "]"}]}]}], "]"}], ",", " ", 
      "mid2", ",", " ", "post"}], "}"}]}], ";"}], "\n", "\t", "\n", "\t", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"CNOT", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
           RowBox[{"{", "w2_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CNOT\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
        RowBox[{"{", "w2", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t    ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
           RowBox[{"{", "w1_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CNOT\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
        RowBox[{"{", "w1", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
        RowBox[{"{", "w2", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"-", "k"}], ",", "d"}], "]"}]}]}], "]"}], ",", "\n", 
      "\t    ", "middle2", ",", " ", "post"}], "\n", "\t", "}"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
           RowBox[{"{", "w2_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CNOT\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
        RowBox[{"{", "w1", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
        RowBox[{"{", "w2", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t    ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
           
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
           RowBox[{"{", "w1_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
           
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
           RowBox[{"{", "w2_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
           
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle3___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CNOT\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
           
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CNOT\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2", ",", " ", "middle3"}], "}"}],
         "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", " ", 
    "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliYGate\>\"", ",", " ", 
        RowBox[{"{", "w1", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliYGate\>\"", ",", " ", 
        RowBox[{"{", "w2", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "2"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
      "\n", "\t    ", "middle2", ",", " ", "middle3", ",", " ", "post"}], 
     "}"}]}], ";"}], "\n", "\t", "\n", "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"SWAP", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<SWAP\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"exp", ":", 
            RowBox[{"\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\""}]}], ",", 
           " ", 
           RowBox[{"{", "w1_", "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<SWAP\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d_Integer"}], 
           ",", " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<SWAP\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"exp", ",", " ", 
        RowBox[{"{", "w2", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "->", " ", "d"}], ",", " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t    ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<SWAP\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{
           RowBox[{"exp", ":", 
            RowBox[{"\"\<PauliXGate\>\"", "|", "\"\<PauliZGate\>\""}]}], ",", 
           " ", 
           RowBox[{"{", "w2_", "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<SWAP\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<SWAP\>\"", ",", " ", "post1___"}], 
        "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"exp", ",", " ", 
        RowBox[{"{", "w1", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      " ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], "\n", "\t", "\n", 
  "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"CPhase", " ", "Simplification", " ", "Rules"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CPhase\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"exp", ":", 
             RowBox[{"(", 
              RowBox[{"w1_", "|", "w2_"}], ")"}]}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CPhase\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CPhase\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
        RowBox[{"{", "exp", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t    ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], "\n", 
  "\t    "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"applySimpRule", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pre___", ",", " ", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CPhase\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "middle1___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"exp", ":", 
             RowBox[{"(", 
              RowBox[{"w1_", "|", "w2_"}], ")"}]}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k_Integer"}]}], 
          "]"}], ",", "\n", "\t", "middle2___", ",", "\n", "\t", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"\"\<CPhase\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"w1_", ",", " ", "w2_"}], "}"}], ",", " ", 
           RowBox[{
           "\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d_Integer"}], ",", 
           " ", 
           RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}], ",", 
         "\n", "\t", "post___"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"pre1___", ",", " ", "\"\<CPhase\>\"", ",", " ", "post1___"}],
         "}"}]}], "\n", "]"}], " ", "/;", " ", 
     RowBox[{"FreeQ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"middle1", ",", " ", "middle2"}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"w1", ",", " ", "w2"}], "}"}]}], "]"}]}], " ", ":=", "\n", 
    "\t\t", 
    RowBox[{"{", 
     RowBox[{"pre", ",", " ", "middle1", ",", "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliXGate\>\"", ",", " ", 
        RowBox[{"{", "exp", "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "k"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"\"\<PauliZGate\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"Replace", "[", 
          RowBox[{"exp", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"w1", " ", "\[Rule]", " ", "w2"}], ",", " ", 
             RowBox[{"w2", " ", "\[Rule]", " ", "w1"}]}], "}"}]}], "]"}], 
         "}"}], ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"-", "k"}], ",", "d"}], "]"}]}]}], "]"}], ",", "\n", 
      "\t    ", "middle2", ",", " ", "post"}], "}"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Catch", "-", "All"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"applySimpRule", "[", 
    RowBox[{"ops_", ",", " ", "rules_List"}], "]"}], " ", ":=", " ", "ops"}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711726786471053*^9, 3.71172713347128*^9, {3.711730015830358*^9, 
   3.711730041696149*^9}, {3.711730094811421*^9, 3.711730104040352*^9}, {
   3.711797272138562*^9, 3.711797286538372*^9}, {3.71179760265068*^9, 
   3.7117976098876867`*^9}, {3.711799394394072*^9, 3.711799402124317*^9}, {
   3.712689677718973*^9, 3.712689695751698*^9}, {3.712690283290303*^9, 
   3.712690293334476*^9}, {3.7126904278479147`*^9, 3.7126904360302887`*^9}, {
   3.712690838925665*^9, 3.7126908515252457`*^9}, {3.712949946341341*^9, 
   3.712949969214295*^9}, {3.712950000618619*^9, 3.7129500148589687`*^9}, {
   3.7129500493227177`*^9, 3.7129500672534637`*^9}, {3.7129501564820757`*^9, 
   3.712950176232853*^9}, {3.712950427138628*^9, 3.7129504849972*^9}, {
   3.712951130697544*^9, 3.7129511347992487`*^9}, {3.7129513994383097`*^9, 
   3.7129514031134577`*^9}, 3.7129520545425873`*^9, {3.712952105981254*^9, 
   3.712952217814598*^9}, {3.712955936752316*^9, 3.712955999928359*^9}, 
   3.712956074242626*^9, {3.712956286531846*^9, 3.712956296249155*^9}, {
   3.712956328820924*^9, 3.712956346079857*^9}, {3.7129740504201612`*^9, 
   3.712974079811061*^9}, {3.7129745699677362`*^9, 3.712974722788458*^9}, {
   3.7129747663323402`*^9, 3.712974847936202*^9}, {3.7129748783970537`*^9, 
   3.712974890861833*^9}, {3.7129749266756067`*^9, 3.712974945053609*^9}, {
   3.712974981912735*^9, 3.712975002988056*^9}, {3.7129750386116343`*^9, 
   3.712975072029045*^9}, {3.7129751201750717`*^9, 3.7129752215860853`*^9}, {
   3.712975275269058*^9, 3.712975420472581*^9}, {3.7129756181677647`*^9, 
   3.7129758536934853`*^9}, {3.7147036733576717`*^9, 3.714703674609829*^9}, {
   3.71530947754852*^9, 3.715309650774609*^9}, {3.716872717614452*^9, 
   3.716872793840824*^9}, {3.716872898140719*^9, 3.716873300592415*^9}, {
   3.716873335971099*^9, 3.716873357050466*^9}, {3.716873539324519*^9, 
   3.716873593822283*^9}, {3.716873633293105*^9, 3.716873964616363*^9}, {
   3.7168740111028852`*^9, 3.716874162816379*^9}, {3.716874196418948*^9, 
   3.7168742796969976`*^9}, {3.716874314274486*^9, 3.716874993243184*^9}, {
   3.7168750509846907`*^9, 3.716875206987452*^9}, {3.716875770238023*^9, 
   3.716875834397216*^9}, {3.716876330987195*^9, 3.716876336040819*^9}, {
   3.716876368496873*^9, 3.716876400199726*^9}, {3.716876430554785*^9, 
   3.716876700328265*^9}, {3.716906573389835*^9, 3.7169065746963663`*^9}, {
   3.717043977791194*^9, 3.717044067878886*^9}, {3.717044924150847*^9, 
   3.717045018553237*^9}},ExpressionUUID->"c3bbe8bb-da77-419e-8589-\
7939ed8967b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Definitions", "Subsubsection",
 CellDingbat->None,
 CellChangeTimes->{{3.711726729500692*^9, 3.711726749671586*^9}, {
  3.7117269861363583`*^9, 3.711726987886814*^9}, {3.711727073458414*^9, 
  3.7117270896372013`*^9}, {3.7117276780326357`*^9, 
  3.711727681861747*^9}},ExpressionUUID->"5e2432fb-d89a-45ff-b8d3-\
14b384fb4859"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "quantumSimplify", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"quantumSimplify", "[", 
    RowBox[{"ops_", ",", " ", "rules_List"}], "]"}], " ", ":=", " ", "\n", 
   "\t\t", 
   RowBox[{"NestWhile", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"applySimpRule", "[", 
       RowBox[{"#", ",", " ", "rules"}], "]"}], "&"}], ",", " ", "ops", ",", 
     " ", 
     RowBox[{
      RowBox[{"#", " ", "\[NotEqual]", " ", 
       RowBox[{"applySimpRule", "[", 
        RowBox[{"#", ",", " ", "rules"}], "]"}]}], " ", "&"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->CompressedData["
1:eJwdyU0og3EAx/GxEJu3acpkzAUnWjsMMx6hLe/yEiHJSiMOWsqF4mCLec8c
TTFtM8xB8xKz8i5xWJqhPA62g1JeajX+v+fw7XP4ijr761ShLBYrlQR5ypTJ
qTU/pRMq9dCl0wxOE7vjGoagOnA9D881X0YYbgvjbhHvvBHRULD+w4MXHG0S
9EqkqVCyYM2CzSu+Ypi+W1QKaU9hGzR8nbczf1ynhvXutz4Y22Echc7vyjFY
di+2weUND2MUPXMA8xYTDmG7VM7ZJpoyFIy9N4Z8GD/ClsHPHrncTrxtKiiB
V5l6BdxcO1PCao3bDE2OLQvM2/Z5oINSeGGgJfhuN/mpUovdB5feWs3PRIfm
yAorFuciXojBGn4k3JdUxUBTsJYxIDp97lr3U3vDAhpWqT0/0Hj8y/gYUs5S
EYWrLi4U2cqK4E7uMAVzBNlOmvgUPXAC08R8N6y9nGXkaYWhMqufapwYY8MP
/UMi5L/+MdJCyicn7iQPMf4Dl9QSlQ==
  
  "],ExpressionUUID->"7f21d5d1-c62a-4acb-be08-373b15db4123"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "updatePositions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"updatePositions", "[", 
   RowBox[{"posAssoc_", ",", " ", "w_", ",", " ", "newPos_"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", "newAssoc", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"newAssoc", " ", "=", " ", "posAssoc"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"newAssoc", "[", "w", "]"}], " ", "=", " ", "newPos"}], ";", 
     "\[IndentingNewLine]", "\t", "newAssoc"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71232001411734*^9, 3.712320042312522*^9}, {
  3.712320296893029*^9, 3.712320337194821*^9}, {3.7123205859970512`*^9, 
  3.712320587875489*^9}, {3.7123206410897207`*^9, 3.712320673890368*^9}, {
  3.712320800346717*^9, 3.7123208036331387`*^9}, {3.714534882053933*^9, 
  3.7145348846140423`*^9}, {3.717040471117872*^9, 
  3.717040476936459*^9}},ExpressionUUID->"dbe2a598-67de-4cc4-a4a5-\
e76254a223ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "addNewMeasStep", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"addNewMeasStep", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "numSteps_", ",", " ", "pos_", ",", " ", "measSteps_", ",", " ", 
       "steps_"}], "}"}], ",", " ", "elem_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newPositions", ",", " ", "newMeasSteps", ",", " ", "ws"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "elem", "]"}], " ", "===", " ", 
          "QuantumDiscreteMeasurement"}], ",", " ", 
         RowBox[{"measurementWires", "[", 
          RowBox[{"elem", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"conditionalWires", "[", "elem", "]"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"newPositions", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"updatePositions", "[", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "numSteps"}], "]"}], "&"}],
          ",", " ", "pos", ",", " ", "ws"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"newMeasSteps", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"measSteps", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"elem", " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Length", " ", "@", " ", "measSteps"}], " ", "+", " ", 
             "numSteps", " ", "+", " ", "1"}]}], "}"}], "}"}]}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{"{", 
       RowBox[{
       "numSteps", ",", " ", "newPositions", ",", " ", "newMeasSteps", ",", 
        " ", "steps"}], "}"}]}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7132208616407833`*^9, 3.713220912095765*^9}, {
   3.713220944597262*^9, 3.713220962178379*^9}, {3.713220993444935*^9, 
   3.71322109987224*^9}, {3.713221137494008*^9, 3.713221164411687*^9}, {
   3.713222507081547*^9, 3.713222508911755*^9}, {3.71322287256653*^9, 
   3.7132228734290943`*^9}, {3.71322311913*^9, 3.713223120917923*^9}, {
   3.713223524497169*^9, 3.713223526513328*^9}, {3.713223646994813*^9, 
   3.713223655945191*^9}, {3.713223964723426*^9, 3.713223975321321*^9}, {
   3.713224008419293*^9, 3.7132240177717953`*^9}, {3.713224088541657*^9, 
   3.713224103522788*^9}, {3.713224157143879*^9, 3.713224159807971*^9}, {
   3.713224238493806*^9, 3.713224248486168*^9}, {3.713224290252133*^9, 
   3.7132243125710297`*^9}, {3.713224476418378*^9, 3.713224506881609*^9}, {
   3.7132266351678534`*^9, 3.713226636237555*^9}, {3.7132845784811583`*^9, 
   3.7132845805765343`*^9}, 3.713406510366399*^9, {3.713455395884385*^9, 
   3.713455396204021*^9}, {3.714534877310351*^9, 3.714534879062622*^9}, {
   3.717046712071664*^9, 3.717046736682252*^9}, {3.7170469064091187`*^9, 
   3.717046908011421*^9}, {3.717046978032949*^9, 3.717046981002002*^9}, {
   3.718587721058817*^9, 3.7185877465232573`*^9}, {3.718587812203298*^9, 
   3.71858781849708*^9}, {3.7185878719488688`*^9, 3.718587873007222*^9}, {
   3.7185880795069513`*^9, 
   3.718588079678815*^9}},ExpressionUUID->"57283437-09bc-483c-a075-\
ca1a2a3b839f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "addElemToCirc", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addElemToCirc", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numSteps_", ",", " ", "positions_", ",", " ", "measSteps_", ",", " ", 
        "steps_"}], "}"}], ",", " ", "elem_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pos", ",", " ", "ws", ",", " ", "rightSteps", ",", " ", "offset", ",",
         " ", "newPositions", ",", " ", "newMeasSteps", ",", " ", 
        "newSteps"}], "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "elem", "]"}], " ", "===", " ", 
           "QuantumDiscreteMeasurement"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"Head", "[", "elem", "]"}], " ", "===", " ", 
           "QuantumDiscreteConditionalOperation"}]}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"addNewMeasStep", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "numSteps", ",", " ", "positions", ",", " ", "measSteps", ",", 
              " ", "steps"}], "}"}], ",", " ", "elem"}], "]"}], "]"}]}], 
        "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "elem", "]"}], " ", "===", " ", 
          "QuantumDiscreteConditionalOperation"}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"addNewMeasStep", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "numSteps", ",", " ", "positions", ",", " ", "measSteps", ",", 
              " ", "steps"}], "}"}], ",", " ", "elem"}], "]"}], "]"}]}], 
        "]"}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", 
           RowBox[{"elem", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"elem", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"elem", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"positions", ",", " ", "ws"}], "]"}], "]"}]}], ";", "\n", 
       "\t", "\n", "\t", 
       RowBox[{"newPositions", " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"updatePositions", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", 
             RowBox[{"pos", " ", "+", " ", "1"}]}], "]"}], "&"}], ",", " ", 
          "positions", ",", " ", "ws"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", " ", "\[Equal]", " ", "numSteps"}], ",", " ", 
         RowBox[{
          RowBox[{"newSteps", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"steps", ",", " ", 
             RowBox[{"{", "elem", "}"}]}], "]"}]}], ";", " ", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"numSteps", " ", "+", " ", "1"}], ",", " ", 
             "newPositions", ",", " ", "measSteps", ",", " ", "newSteps"}], 
            "}"}], "]"}]}]}], "]"}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"newSteps", " ", "=", " ", "steps"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"newSteps", "[", 
         RowBox[{"[", 
          RowBox[{"pos", " ", "+", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"steps", "[", 
           RowBox[{"[", 
            RowBox[{"pos", " ", "+", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"{", "elem", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "numSteps", ",", " ", "newPositions", ",", " ", "measSteps", ",", " ",
          "newSteps"}], "}"}]}]}], "\n", "]"}]}], ";"}], "\t"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7122509122525997`*^9, 3.712250950310074*^9}, {
   3.7122509920394382`*^9, 3.712251106988633*^9}, {3.712251142675091*^9, 
   3.7122512289550877`*^9}, {3.7123191346925364`*^9, 3.712319137455023*^9}, {
   3.712319213983539*^9, 3.7123192190179977`*^9}, {3.712320940342332*^9, 
   3.71232102955863*^9}, {3.7123211401661777`*^9, 3.712321149894429*^9}, 
   3.7123213136214046`*^9, {3.712323879527018*^9, 3.712323888326969*^9}, {
   3.712685631712666*^9, 3.712685632054779*^9}, {3.712685710820344*^9, 
   3.7126857383953123`*^9}, {3.712685824282736*^9, 3.712685850320294*^9}, {
   3.7126859469484262`*^9, 3.712686002660427*^9}, {3.712686091141335*^9, 
   3.712686092554574*^9}, {3.712686132581106*^9, 3.712686167985392*^9}, {
   3.712686239244836*^9, 3.712686243131791*^9}, {3.712686279710987*^9, 
   3.712686299382125*^9}, 3.712686338945839*^9, {3.712686617988391*^9, 
   3.71268665006949*^9}, 3.7126866879695263`*^9, {3.712686750873423*^9, 
   3.712686768658841*^9}, {3.7126868141315804`*^9, 3.71268681933969*^9}, {
   3.7126868532262697`*^9, 3.7126868593674097`*^9}, {3.712686920912264*^9, 
   3.712687013929327*^9}, {3.7126870710800447`*^9, 3.7126870752919283`*^9}, {
   3.712687112780518*^9, 3.712687240856496*^9}, {3.7126874135946074`*^9, 
   3.712687419047214*^9}, {3.712687705342532*^9, 3.7126877359247932`*^9}, {
   3.712687821716796*^9, 3.712687824387624*^9}, {3.7126883978333893`*^9, 
   3.712688401966543*^9}, 3.7132854441490297`*^9, {3.713405285843646*^9, 
   3.713405290386204*^9}, {3.7134053405783157`*^9, 3.71340535364918*^9}, 
   3.713406916009149*^9, {3.713455391398674*^9, 3.713455391781101*^9}, {
   3.714534871623452*^9, 3.714534873183138*^9}, {3.714707300529997*^9, 
   3.714707473929772*^9}, {3.71470762520404*^9, 3.714707643920923*^9}, {
   3.717038919507473*^9, 3.717038923108487*^9}, 3.717039041887166*^9, {
   3.717039076190933*^9, 3.7170390767354603`*^9}, {3.717039108533992*^9, 
   3.717039173373946*^9}, {3.7170396386226*^9, 3.717039639447994*^9}, {
   3.71703971985331*^9, 3.717039726035315*^9}, {3.717039875535962*^9, 
   3.717039876020372*^9}, {3.7170399622570143`*^9, 3.7170399627490273`*^9}, {
   3.7170466319137697`*^9, 3.717046701929701*^9}, {3.717046801736495*^9, 
   3.71704680810501*^9}, {3.717900823309725*^9, 3.717900824581415*^9}, {
   3.7179041800030727`*^9, 3.71790419930544*^9}, {3.717904241373567*^9, 
   3.7179042421852503`*^9}, {3.71858718512916*^9, 3.718587195138715*^9}, {
   3.7185877790071983`*^9, 3.718587783787734*^9}, {3.718588085929494*^9, 
   3.7185880860828857`*^9}},ExpressionUUID->"e8c1045c-f6de-46e6-9c42-\
344c91a07928"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "initialPositions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initialPositions", "[", "wires_", "]"}], " ", ":=", " ", 
   RowBox[{"Association", " ", "@", " ", 
    RowBox[{"Thread", "[", 
     RowBox[{"wires", " ", "\[Rule]", " ", "0"}], "]"}]}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.712250005893477*^9, 3.71225003701661*^9}, {
  3.712320419431776*^9, 3.712320421497591*^9}, {3.713285564307541*^9, 
  3.713285568619646*^9}},ExpressionUUID->"3faa7a0c-1db0-4315-ae4b-\
6d0e5ed38bc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "circuitSteps", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitSteps", "[", "elems_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "positions", ",", " ", "numSteps", ",", " ", "steps", ",", " ", 
       "measSteps", ",", " ", "finalSteps", ",", " ", "wires"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"wires", " ", "=", " ", 
       RowBox[{"circuitWires", "[", "elems", "]"}]}], ";", "\n", "\t", 
      RowBox[{"positions", " ", "=", " ", 
       RowBox[{"initialPositions", "[", "wires", "]"}]}], ";", "\n", "\t", 
      RowBox[{"numSteps", " ", "=", " ", "0"}], ";", "\n", "\t", 
      RowBox[{"steps", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"measSteps", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", 
      RowBox[{"finalSteps", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "numSteps", ",", " ", "positions", ",", " ", "measSteps", ",", " ", 
         "steps"}], "}"}], " ", "=", " ", "\n", "\t\t", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"addElemToCirc", "[", 
           RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "numSteps", ",", " ", "positions", ",", " ", "measSteps", ",", " ", 
           "steps"}], "}"}], ",", " ", "elems"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Fold", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"#1", " ", "\[Equal]", " ", 
            RowBox[{"{", "}"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], "}"}], ",", "\n",
            "\t\t\t", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "\[GreaterEqual]", 
            "  ", 
            RowBox[{"Length", "@", "#1"}]}], ",", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"#2", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], "}"}]}], "]"}],
            ",", " ", "\n", "\t\t\t", "True", ",", " ", 
           RowBox[{"Insert", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"{", 
              RowBox[{"#2", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], ",", " ", 
             RowBox[{"(", 
              RowBox[{"#2", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], ")"}]}], "]"}]}], 
          "]"}], "&"}], ",", " ", "steps", ",", " ", "measSteps"}], "]"}]}]}],
     "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.714533640618894*^9, 3.71453364098568*^9}, {
  3.714535146044527*^9, 3.714535148752462*^9}, {3.7170388204904957`*^9, 
  3.717038884031096*^9}, {3.717038914313093*^9, 3.717038915615368*^9}, {
  3.717038968263921*^9, 3.7170389742880783`*^9}, {3.7170390214248962`*^9, 
  3.7170390259839783`*^9}, {3.717040057320228*^9, 3.717040062515164*^9}, {
  3.717040391351368*^9, 3.717040395254983*^9}, {3.717040501438436*^9, 
  3.7170405029774523`*^9}, {3.717040827498559*^9, 3.717040828302875*^9}, {
  3.7170411357321243`*^9, 3.717041139034224*^9}, {3.717041228772142*^9, 
  3.717041240324366*^9}, {3.718081063425714*^9, 3.718081084583198*^9}, {
  3.7185879236531153`*^9, 3.7185879297588873`*^9}, {3.71858797048945*^9, 
  3.718587972655693*^9}, {3.718588091722384*^9, 
  3.718588091904593*^9}},ExpressionUUID->"a3c50316-e112-48d4-acef-\
cb50abfb6fc1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "singleStepGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleStepGraphics", "[", 
    RowBox[{"step_", ",", " ", "stepNum_", ",", " ", "wires_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "stepGraphics", ",", " ", "stepWires", ",", " ", "ys", ",", " ", "wOps",
        ",", " ", "opsYs", ",", " ", "numWires", ",", " ", "textGraphics"}], 
      "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"stepWires", " ", "=", " ", 
       RowBox[{"Sort", " ", "@", " ", 
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"Which", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"QuantumDiscreteOperationQ", "[", 
            RowBox[{"step", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
           RowBox[{"step", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "\n", "\t\t", 
           
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{"step", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "===", " ", 
            "QuantumDiscreteMeasurement"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"measurementWires", "[", 
             RowBox[{"step", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "}"}], ",", "\n",
            "\t\t", "True", ",", " ", 
           RowBox[{"conditionalWires", "[", 
            RowBox[{"step", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}]}], ";", "\n", 
      "\t", 
      RowBox[{"ys", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"wires", ",", " ", "#"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "&"}], ",", " ", 
         "stepWires"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"numWires", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"opsYs", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"wires", ",", " ", "#"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"step", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"FirstPosition", "[", 
                RowBox[{"step", ",", "#"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}]}], 
          "&"}], ",", " ", "stepWires"}], "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"stepGraphics", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", "\n", "\t\t", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{".3", " ", "*", " ", 
                   RowBox[{"(", 
                    RowBox[{"stepNum", " ", "-", " ", "1"}], ")"}]}], " ", 
                  "+", " ", ".1"}], ",", 
                 RowBox[{".15", " ", "+", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"numWires", " ", "-", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "*", 
                   "0.2"}]}]}], "}"}], ",", "\n", "\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{".3", " ", "*", " ", 
                   RowBox[{"(", 
                    RowBox[{"stepNum", " ", "-", " ", "1"}], ")"}]}], " ", 
                  "+", " ", ".25"}], ",", 
                 RowBox[{".25", " ", "+", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"numWires", " ", "-", " ", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "*", 
                   "0.2"}]}]}], "}"}]}], "]"}]}], "}"}], "}"}], "&"}], ",", 
         " ", "opsYs"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"textGraphics", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Text", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "[", 
                 RowBox[{"step", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "===", " ", 
                "QuantumDiscreteObservableQ"}], ",", " ", 
               RowBox[{"ToString", "[", "\"\<\[ScriptCapitalM]\>\"", "]"}], 
               ",", " ", 
               RowBox[{"circuitDisplayFormat", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
             "\n", "\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{".3", " ", "*", " ", 
                 RowBox[{"(", 
                  RowBox[{"stepNum", " ", "-", " ", "1"}], ")"}]}], " ", "+", 
                " ", "0.175"}], ",", 
               RowBox[{".20", " ", "+", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"numWires", " ", "-", " ", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "*", 
                 "0.2"}]}]}], "}"}]}], "]"}], "}"}], "&"}], ",", " ", 
         "opsYs"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Join", "[", 
       RowBox[{"stepGraphics", ",", " ", "textGraphics"}], "]"}]}]}], "\n", 
    "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.713285555093801*^9, 3.713285560852447*^9}, {
   3.713286055042107*^9, 3.7132860766744537`*^9}, {3.713286109682701*^9, 
   3.7132861227437267`*^9}, {3.713405252434556*^9, 3.7134052549699507`*^9}, {
   3.713405472095249*^9, 3.713405478053187*^9}, {3.713405806963545*^9, 
   3.713405900743127*^9}, 3.713406907865404*^9, {3.714479496910717*^9, 
   3.714479511980425*^9}, {3.714479982953123*^9, 3.714479986947514*^9}, {
   3.71453486370767*^9, 3.714534865823865*^9}, {3.714705299629118*^9, 
   3.7147053001133432`*^9}, {3.71470538539051*^9, 3.714705389339179*^9}, {
   3.714705478636093*^9, 3.7147054810398283`*^9}, {3.714705591249774*^9, 
   3.714705600109733*^9}, {3.714705639566383*^9, 3.714705653161228*^9}, {
   3.7147056870973587`*^9, 3.714705697525639*^9}, {3.7147057596323147`*^9, 
   3.714705947069971*^9}, {3.714706007492234*^9, 3.714706028120163*^9}, {
   3.71470931737893*^9, 3.714709319848763*^9}, 3.7170410245139227`*^9, {
   3.717041058106286*^9, 3.717041098495729*^9}, {3.7170413269589243`*^9, 
   3.7170413273179207`*^9}, {3.717041357494278*^9, 3.7170413601178017`*^9}, {
   3.71704141080075*^9, 3.717041447997374*^9}, {3.717041674485937*^9, 
   3.717041680052224*^9}, {3.717041710960493*^9, 3.7170417488630342`*^9}, {
   3.717041782845207*^9, 3.717041817665359*^9}, {3.7170418730146112`*^9, 
   3.717041905459412*^9}, {3.717041974463477*^9, 3.71704203204128*^9}, {
   3.7170420917319202`*^9, 3.7170421559687853`*^9}, {3.717042242120453*^9, 
   3.7170422438039913`*^9}, {3.717042275760461*^9, 3.717042278729104*^9}, {
   3.7170423203699512`*^9, 3.717042348482094*^9}, {3.7170423810065527`*^9, 
   3.717042381203289*^9}, {3.71704248944624*^9, 3.717042499723549*^9}, {
   3.7170426012503633`*^9, 3.7170426032061167`*^9}, {3.7170426923447723`*^9, 
   3.717042710666535*^9}, {3.717042856873242*^9, 3.717042857539208*^9}, {
   3.717042947572179*^9, 3.717042955314761*^9}, {3.7170430253079357`*^9, 
   3.7170430486415663`*^9}, {3.717043476827938*^9, 3.717043479284289*^9}, {
   3.7170468594506063`*^9, 3.717046862212426*^9}, {3.71708776128615*^9, 
   3.71708776679076*^9}, {3.7170878739266768`*^9, 3.7170878987392797`*^9}, {
   3.7170880009626703`*^9, 3.7170880054358397`*^9}, {3.717088058374687*^9, 
   3.71708812577903*^9}, {3.717088248360763*^9, 3.717088268081326*^9}, {
   3.7170883061686277`*^9, 3.7170883930303183`*^9}, {3.717088459372498*^9, 
   3.717088470441577*^9}, {3.717088525128669*^9, 3.717088530235079*^9}, {
   3.7170885873109083`*^9, 3.7170885874970617`*^9}, {3.717088632582498*^9, 
   3.717088668973597*^9}, 3.7179008298914747`*^9, {3.7179033983885393`*^9, 
   3.717903509016857*^9}},ExpressionUUID->"1191499b-31d1-475c-b4b5-\
78ed3e8275b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "productEvalHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"productEvalHelper", "[", 
   RowBox[{"opMats_", ",", " ", "qop_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"w", ",", " ", "newMats"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newMats", " ", "=", " ", "opMats"}], ";", "\n", "\t", 
     RowBox[{"w", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{
      RowBox[{"newMats", "[", "w", "]"}], " ", "=", " ", 
      RowBox[{"oneQuditOperation", "[", 
       RowBox[{
        RowBox[{"qop", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"qop", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", " ", 
        RowBox[{"qop", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     "newMats"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.7181152912675056`*^9, 3.718115337326868*^9}, {
   3.718115406941811*^9, 3.718115419932279*^9}, {3.718115453280364*^9, 
   3.71811547353503*^9}, 3.718118538458465*^9, {3.718118682129641*^9, 
   3.7181187508948307`*^9}, {3.718118923332431*^9, 
   3.7181189236361*^9}},ExpressionUUID->"111cc4d4-fc15-4ed8-a7e2-\
9c44c67aec32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "productEvaluate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"productEvaluate", "[", 
   RowBox[{"state_", ",", " ", "step_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ws", ",", " ", "opMats", ",", " ", "fullRep"}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{
     RowBox[{"ws", " ", "=", " ", 
      RowBox[{"state", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"opMats", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"identity", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", " ", "ws"}],
         "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"opMats", " ", "=", " ", 
      RowBox[{"Fold", "[", 
       RowBox[{"productEvalHelper", ",", " ", "opMats", ",", " ", "step"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"fullRep", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "opMats"}], " ", ">", " ", "1"}], 
        ",", " ", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", "opMats"}], ",", " ", 
        RowBox[{"opMats", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"applyMatToState", "[", 
      RowBox[{"fullRep", ",", " ", "state"}], "]"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{
  3.7181154914568653`*^9, {3.7181155476121597`*^9, 3.7181155497915277`*^9}, {
   3.7181155920253468`*^9, 3.718115596469885*^9}, {3.718115825444914*^9, 
   3.718115827160535*^9}, {3.7181160491075*^9, 3.7181160551118393`*^9}, {
   3.718118023572914*^9, 3.7181180256415043`*^9}, {3.718118134710897*^9, 
   3.718118134971221*^9}, {3.718118281202125*^9, 3.7181183098874598`*^9}, {
   3.7181185746283073`*^9, 3.718118610899507*^9}, {3.7181187577708282`*^9, 
   3.718118764815592*^9}, {3.718118951975995*^9, 
   3.718118978792799*^9}},ExpressionUUID->"7115d8ef-5023-49e4-8c52-\
ab50a855751f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "transposeEvalHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"transposeEvalHelper", "[", 
   RowBox[{"op_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"power", ",", " ", "spec", ",", " ", "arity"}], "}"}], ",", "\n",
     "\t", 
    RowBox[{
     RowBox[{"power", " ", "=", " ", 
      RowBox[{"op", "[", 
       RowBox[{"[", 
        RowBox[{"4", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"spec", " ", "=", " ", 
      RowBox[{"op", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"arity", " ", "=", " ", 
      RowBox[{"Length", " ", "@", " ", 
       RowBox[{"op", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"oneQuditOperationQ", "[", "spec", "]"}], ",", " ", 
       RowBox[{"oneQuditOperation", "[", 
        RowBox[{"spec", ",", " ", "power", ",", " ", "dim"}], "]"}], ",", 
       "\n", "\t\t", 
       RowBox[{"multiQuditOperation", "[", 
        RowBox[{
        "spec", ",", " ", "power", ",", " ", "dim", ",", " ", "arity"}], 
        "]"}]}], "]"}]}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.718119250304494*^9, 3.718119270528349*^9}, {
  3.718121040811399*^9, 3.718121041137595*^9}, {3.7181211387571363`*^9, 
  3.718121147289476*^9}, {3.718121206218804*^9, 3.718121215983783*^9}, {
  3.7181212576167173`*^9, 3.718121299983139*^9}, {3.7181214465718718`*^9, 
  3.718121524459836*^9}, {3.7181215720068617`*^9, 
  3.71812157557091*^9}},ExpressionUUID->"e4c81b82-bb56-4d70-87ac-\
a9acba6c944b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "transposeEvaluate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"transposeEvaluate", "[", 
   RowBox[{"state_", ",", " ", "step_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ws", ",", " ", "wsAssoc", ",", " ", "dims", ",", " ", "opWs", ",", " ", 
      "opDims", ",", " ", "opMats", ",", " ", "idWs", ",", " ", "idDims", ",",
       " ", "idMats", ",", " ", "\n", "\t\t", "fullRep", ",", " ", 
      "orderedWs", ",", " ", "orderedDims", ",", " ", "orderedMats", ",", " ",
       "size", ",", " ", "shape", ",", " ", "perm"}], "}"}], ",", "\n", "\t", 
    
    RowBox[{
     RowBox[{"ws", " ", "=", " ", 
      RowBox[{"state", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"dims", " ", "=", " ", 
      RowBox[{"ws", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"size", " ", "=", " ", 
      RowBox[{"Times", " ", "@@", " ", "dims"}]}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"opWs", " ", "=", " ", 
      RowBox[{"Flatten", " ", "@", " ", 
       RowBox[{"step", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"idWs", " ", "=", " ", 
      RowBox[{"Sort", " ", "@", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"ws", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "opWs"}], 
        "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"orderedWs", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"opWs", ",", " ", "idWs"}], "]"}]}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"wsAssoc", " ", "=", " ", 
      RowBox[{"Association", " ", "@", " ", "ws"}]}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"opDims", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"wsAssoc", ",", " ", "opWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"idDims", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"wsAssoc", ",", " ", "idWs"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"orderedDims", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"opDims", ",", " ", "idDims"}], "]"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"opMats", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"transposeEvalHelper", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"wsAssoc", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], "&"}], 
        ",", " ", "step"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"idMats", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"identity", ",", " ", "idDims"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"orderedMats", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"opMats", ",", " ", "idMats"}], "]"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"fullRep", " ", "=", " ", 
      RowBox[{"KroneckerProduct", " ", "@@", " ", "orderedMats"}]}], ";", 
     "\n", "\t", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", "#"}], "}"}], "&"}], ",", " ", "orderedDims"}], 
        "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"fullRep", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"fullRep", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", "\n",
      "\t", "\n", "\t", 
     RowBox[{"perm", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Ordering", " ", "@", " ", "orderedWs"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"perm", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"perm", ",", " ", 
        RowBox[{"perm", " ", "+", " ", 
         RowBox[{"Length", " ", "@", " ", "perm"}]}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"fullRep", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"fullRep", ",", " ", "perm"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"size", ",", " ", "size"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"applyMatToState", "[", 
      RowBox[{"fullRep", ",", " ", "state"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.712332055095183*^9, 3.7123320628218117`*^9}, {
   3.712332097760083*^9, 3.712332171683221*^9}, {3.712332247859851*^9, 
   3.712332326968338*^9}, {3.712332369481485*^9, 3.7123323716832933`*^9}, {
   3.7123325396200027`*^9, 3.712332604534329*^9}, {3.712334381445182*^9, 
   3.7123343841205263`*^9}, {3.7123350578497972`*^9, 3.712335060618185*^9}, {
   3.712335112026288*^9, 3.71233511333711*^9}, {3.712335634428781*^9, 
   3.7123356539204493`*^9}, {3.712335756688381*^9, 3.7123357651154547`*^9}, {
   3.7123358472271843`*^9, 3.712335881827343*^9}, 3.712358428446653*^9, {
   3.7123688757204523`*^9, 3.712368923946645*^9}, {3.712418102905734*^9, 
   3.7124181073190117`*^9}, {3.712689862175077*^9, 3.712689867877511*^9}, 
   3.7129759680224333`*^9, {3.7131423865772753`*^9, 3.713142409173099*^9}, {
   3.7131424477866993`*^9, 3.713142536664556*^9}, {3.713142579118061*^9, 
   3.713142618147605*^9}, 3.713142736187749*^9, {3.713143498337557*^9, 
   3.7131435315252943`*^9}, {3.713143576901903*^9, 3.713143638058523*^9}, {
   3.713143813918806*^9, 3.713143873756562*^9}, {3.7131439437564096`*^9, 
   3.713144000604189*^9}, {3.7131440414126873`*^9, 3.713144041912682*^9}, {
   3.71314409875054*^9, 3.713144136773513*^9}, {3.71314420900811*^9, 
   3.713144596560955*^9}, {3.71314468761661*^9, 3.71314475428598*^9}, {
   3.7131448215135393`*^9, 3.713144868763914*^9}, {3.713144903987585*^9, 
   3.7131449424582872`*^9}, {3.713144999453871*^9, 3.713145009122982*^9}, {
   3.713145072130862*^9, 3.713145101649268*^9}, {3.713145167644988*^9, 
   3.713145190070472*^9}, {3.713145303560964*^9, 3.713145347736905*^9}, {
   3.7131453970274353`*^9, 3.713145405088291*^9}, {3.713145443454226*^9, 
   3.713145504272215*^9}, {3.713145557883131*^9, 3.713145589803287*^9}, {
   3.713455770059354*^9, 3.71345579197366*^9}, {3.713456078862526*^9, 
   3.7134563637350817`*^9}, {3.713465974724053*^9, 3.713466050595685*^9}, {
   3.7134661044801807`*^9, 3.713466150079152*^9}, {3.713466283826023*^9, 
   3.713466305357315*^9}, {3.713466361242909*^9, 3.713466513403356*^9}, {
   3.713466650374667*^9, 3.713466836857456*^9}, 3.713466960356827*^9, {
   3.713467022361361*^9, 3.713467189845655*^9}, {3.713467352109514*^9, 
   3.713467370895979*^9}, {3.71346740485179*^9, 3.713467431288836*^9}, {
   3.71346749138146*^9, 3.713467495972363*^9}, {3.713476296631435*^9, 
   3.713476353975758*^9}, {3.7134764030232286`*^9, 3.71347652515055*^9}, {
   3.7134765705433064`*^9, 3.713476584686146*^9}, {3.713476713990514*^9, 
   3.713476893325955*^9}, {3.71347695668613*^9, 3.713476972749239*^9}, {
   3.713477002874391*^9, 3.713477040222959*^9}, {3.71347709040935*^9, 
   3.7134771543187017`*^9}, {3.713477206146089*^9, 3.713477315969002*^9}, {
   3.713477455728786*^9, 3.713477500504814*^9}, {3.713477563710486*^9, 
   3.713477571232993*^9}, {3.713477608302371*^9, 3.7134776560346947`*^9}, {
   3.7134776926286077`*^9, 3.7134778966124563`*^9}, {3.713488563557559*^9, 
   3.7134885649474487`*^9}, {3.713488602682212*^9, 3.713488638641121*^9}, {
   3.713488708602745*^9, 3.713488822621162*^9}, {3.713488868145501*^9, 
   3.713488873366218*^9}, {3.713488908942853*^9, 3.7134889556080923`*^9}, {
   3.71348900923499*^9, 3.713489029529378*^9}, {3.713489151792292*^9, 
   3.7134891572775097`*^9}, {3.7134892179186163`*^9, 3.713489223037031*^9}, {
   3.7134893108918753`*^9, 3.7134893519894533`*^9}, {3.713489437499646*^9, 
   3.713489453046843*^9}, 3.713489508476183*^9, {3.713489591196785*^9, 
   3.7134896784113283`*^9}, {3.71348981890473*^9, 3.7134898293186417`*^9}, {
   3.713490819418276*^9, 3.713490871113496*^9}, {3.7134909306238127`*^9, 
   3.713490974139575*^9}, {3.713491103832202*^9, 3.713491372796227*^9}, {
   3.713491412426578*^9, 3.713491479958282*^9}, {3.7134915372757874`*^9, 
   3.713491582230579*^9}, {3.7134917474113607`*^9, 3.7134917757594624`*^9}, {
   3.713491838565981*^9, 3.713491915624173*^9}, 3.7134919503715973`*^9, {
   3.713491987512718*^9, 3.713492044919628*^9}, {3.713492097203849*^9, 
   3.7134921113462267`*^9}, {3.7134921602159433`*^9, 3.713492234204627*^9}, {
   3.713492747994206*^9, 3.7134927718496227`*^9}, {3.7134928255450478`*^9, 
   3.713492969753784*^9}, {3.713493125182304*^9, 3.713493129076359*^9}, {
   3.713493165132576*^9, 3.713493168015647*^9}, {3.713493215379704*^9, 
   3.713493217825021*^9}, {3.713493259915104*^9, 3.71349326401507*^9}, {
   3.713493544893396*^9, 3.7134937072529907`*^9}, {3.71349389422989*^9, 
   3.713494031612402*^9}, {3.713494062973847*^9, 3.713494072514402*^9}, {
   3.7134942348598127`*^9, 3.713494235489932*^9}, {3.71349429840977*^9, 
   3.713494298742004*^9}, {3.713494354069528*^9, 3.713494438072234*^9}, 
   3.7144757671173077`*^9, {3.714535102756966*^9, 3.714535133948615*^9}, 
   3.714701298656898*^9, {3.7147022745541983`*^9, 3.714702287092208*^9}, {
   3.714704640435073*^9, 3.714704655711235*^9}, {3.714704721382655*^9, 
   3.714704733114662*^9}, {3.7147093699700108`*^9, 3.7147094090697937`*^9}, {
   3.714709781922412*^9, 3.714709845322381*^9}, {3.7147099103665648`*^9, 
   3.714709916932425*^9}, {3.7147099910211763`*^9, 3.714710051622731*^9}, {
   3.714710099959116*^9, 3.7147101305058002`*^9}, {3.714710161877584*^9, 
   3.7147102332538357`*^9}, {3.7147103104850063`*^9, 
   3.7147104445030746`*^9}, {3.714710529196776*^9, 3.714710573491891*^9}, {
   3.714710619901626*^9, 3.7147106406943483`*^9}, {3.7147108059859943`*^9, 
   3.714710815278096*^9}, {3.714710920302387*^9, 3.714710933438559*^9}, {
   3.7147109860533323`*^9, 3.7147110048758383`*^9}, {3.7147110417456837`*^9, 
   3.714711114539061*^9}, {3.714711160804978*^9, 3.714711217680937*^9}, {
   3.714711309975979*^9, 3.714711418078392*^9}, {3.714711472258165*^9, 
   3.714711486678318*^9}, {3.714711598463996*^9, 3.71471180200604*^9}, {
   3.71471188049144*^9, 3.7147119304373913`*^9}, {3.7147119791269503`*^9, 
   3.7147119821569433`*^9}, {3.714712037680553*^9, 3.714712070528782*^9}, {
   3.714712111079575*^9, 3.7147123126393137`*^9}, {3.7153093444717817`*^9, 
   3.71530935057553*^9}, {3.718114462605131*^9, 3.718114470639414*^9}, 
   3.718114572725583*^9, {3.718119175865643*^9, 3.7181191965120783`*^9}, {
   3.718119260502728*^9, 3.718119343867793*^9}, {3.718119394979257*^9, 
   3.718119407977083*^9}, {3.71811945608811*^9, 3.718119478698207*^9}, {
   3.71811956305387*^9, 3.7181195778746843`*^9}, {3.7181203644743032`*^9, 
   3.718120366200115*^9}, {3.718120427068801*^9, 3.7181204291522217`*^9}, {
   3.718120533289262*^9, 3.718120538602723*^9}, {3.718120576437574*^9, 
   3.718120601867323*^9}, {3.718120656056962*^9, 3.718120660846067*^9}, {
   3.718120694520009*^9, 3.7181207399129953`*^9}, {3.7181207752984953`*^9, 
   3.718120962339725*^9}, {3.7181211537626467`*^9, 3.7181211986820993`*^9}, {
   3.718121597963277*^9, 3.718121598663024*^9}, {3.718121629577816*^9, 
   3.718121817021043*^9}, {3.718121848980584*^9, 3.718121987561413*^9}, {
   3.7181220301689873`*^9, 3.718122030831174*^9}, {3.718122061935791*^9, 
   3.718122114973056*^9}, {3.71850048015941*^9, 3.7185005425007143`*^9}, {
   3.718511978735358*^9, 
   3.718511979011962*^9}},ExpressionUUID->"763f6e58-7550-4bf1-a925-\
b36277c8d3d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "measurementEvaluate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"measurementEvaluate", "[", 
   RowBox[{"state_", ",", " ", "specs_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "reps", ",", " ", "probs", ",", " ", "choice", ",", " ", "spec"}], "}"}],
     ",", "\n", "\t", 
    RowBox[{
     RowBox[{"reps", " ", "=", " ", 
      RowBox[{"measurementHelper", "[", 
       RowBox[{"specs", ",", " ", "state"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"probs", " ", "=", " ", 
      RowBox[{"Values", " ", "@", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"measurementProbability", "[", 
           RowBox[{"#", ",", " ", "state"}], "]"}], "&"}], ",", " ", "reps"}],
         "]"}]}]}], ";", "\n", "\t", 
     RowBox[{"spec", " ", "=", " ", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{"probs", " ", "\[Rule]", " ", "reps"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"choice", " ", "=", " ", 
      RowBox[{"SelectFirst", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "reps", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"reps", "[", "#", "]"}], " ", "\[Equal]", " ", "spec"}], 
         "&"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"choice", ",", " ", 
       RowBox[{"applyMatToState", "[", 
        RowBox[{"spec", ",", " ", "state"}], "]"}]}], "}"}]}]}], "\n", 
   "]"}]}], "\n"}], "Code",
 CellChangeTimes->{{3.718509356058468*^9, 3.718509385883212*^9}, {
   3.718509422944072*^9, 3.718509517257434*^9}, {3.718509563125641*^9, 
   3.718509574400236*^9}, {3.718509726858735*^9, 3.718509778556138*^9}, {
   3.718510488052208*^9, 3.7185104901347322`*^9}, {3.7185106979259443`*^9, 
   3.7185107083628607`*^9}, {3.718511020732513*^9, 3.718511045906538*^9}, {
   3.718511143210044*^9, 3.7185111442610283`*^9}, {3.7185115795663443`*^9, 
   3.71851158233764*^9}, {3.718511641836672*^9, 3.718511643482236*^9}, {
   3.7185117692592287`*^9, 3.718511770875681*^9}, {3.7185122553490973`*^9, 
   3.718512267408414*^9}, {3.718512550682878*^9, 3.718512552891859*^9}, {
   3.7185127329112177`*^9, 3.7185127358324203`*^9}, {3.718512900481071*^9, 
   3.718512900737999*^9}, {3.7185724899503803`*^9, 3.71857250532198*^9}, {
   3.718573273812243*^9, 3.718573352551422*^9}, {3.7185735112496433`*^9, 
   3.718573530817643*^9}, {3.718573562310073*^9, 3.718573567995761*^9}, {
   3.718573725920566*^9, 3.718573751350809*^9}, {3.718573810149762*^9, 
   3.718573843046447*^9}, {3.718573935032123*^9, 3.718573974859785*^9}, {
   3.718582807009965*^9, 3.718582865397347*^9}, {3.71858415496947*^9, 
   3.718584158154365*^9}, {3.71864185164036*^9, 3.718641855912056*^9}, {
   3.718642086286242*^9, 3.718642089087047*^9}, {3.7186422289772778`*^9, 
   3.7186423201752567`*^9}, 3.718642533089602*^9, {3.71864280388761*^9, 
   3.7186428086855927`*^9}, {3.7186429799603777`*^9, 3.718642993812337*^9}, {
   3.718643192750785*^9, 3.71864329609778*^9}, {3.718643335179359*^9, 
   3.718643363382908*^9}, {3.718643420010907*^9, 3.718643431411996*^9}, {
   3.718643470929837*^9, 3.7186434854935093`*^9}, {3.7186444896485863`*^9, 
   3.718644496819343*^9}, {3.7186449891950197`*^9, 3.718644998418598*^9}, {
   3.718645790761669*^9, 3.71864580263208*^9}, {3.7186463719743137`*^9, 
   3.718646372303831*^9}},ExpressionUUID->"ca03553d-bdee-49f1-9fb5-\
367beca52d7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "conditionalEvaluate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"conditionalEvaluate", "[", 
     RowBox[{"state_QuantumDiscreteState", ",", " ", "conds_List"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"quantumOpEvaluate", "[", 
     RowBox[{
      RowBox[{"conds", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", "state"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"conditionalEvaluate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice_", ",", " ", "state_"}], "}"}], ",", " ", "conds_List"}],
    "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"op", " ", "=", " ", 
      RowBox[{
       RowBox[{"SelectFirst", "[", 
        RowBox[{"conds", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", "choice", "]"}], "&"}], ",", 
         " ", 
         RowBox[{"conds", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", "\n", "\t\t", 
    RowBox[{"quantumOpEvaluate", "[", 
     RowBox[{"op", ",", " ", "state"}], "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.718572239888214*^9, 3.718572288425213*^9}, {
   3.718572342333989*^9, 3.718572383945467*^9}, {3.7185829917709627`*^9, 
   3.718583073458645*^9}, {3.718583179184917*^9, 3.7185832196272993`*^9}, {
   3.718583269850376*^9, 3.718583277611215*^9}, {3.718641757065605*^9, 
   3.7186417596428432`*^9}, 
   3.7186463792139387`*^9},ExpressionUUID->"6c0acb1d-540a-4e92-9a8b-\
5a69f648326f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stepEvaluate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stepEvaluate", "[", 
    RowBox[{"state_", ",", " ", "step_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"step", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "===", " ", 
      "QuantumDiscreteMeasurement"}], ",", " ", 
     RowBox[{"measurementEvaluate", "[", 
      RowBox[{"state", ",", " ", 
       RowBox[{"step", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", 
       RowBox[{"step", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "===", " ", 
      "QuantumDiscreteConditionalOperation"}], ",", " ", 
     RowBox[{"conditionalEvaluate", "[", 
      RowBox[{"state", ",", " ", 
       RowBox[{"step", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Length", "[", "step", "]"}], " ", "\[Equal]", " ", "1"}], ",", 
     " ", 
     RowBox[{"quantumOpEvaluate", "[", 
      RowBox[{
       RowBox[{"step", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "state"}], "]"}], ",", "\n",
      "\t", 
     RowBox[{"!", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"step", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], " ", ">", " ", "1"}], " ", 
         "&"}]}], "]"}]}], ",", " ", 
     RowBox[{"productEvaluate", "[", 
      RowBox[{"state", ",", " ", "step"}], "]"}], ",", "\n", "\t", "True", 
     ",", " ", 
     RowBox[{"transposeEvaluate", "[", 
      RowBox[{"state", ",", " ", "step"}], "]"}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.718082353567768*^9, 3.718082394924214*^9}, {
   3.718082454984929*^9, 3.718082551052153*^9}, {3.718082616563074*^9, 
   3.7180827788245983`*^9}, {3.718083051036572*^9, 3.718083066430727*^9}, {
   3.718083130932043*^9, 3.718083147227337*^9}, 3.718112103324709*^9, 
   3.718112262177587*^9, {3.718114714813815*^9, 3.71811474507687*^9}, {
   3.7181156382377243`*^9, 3.718115648860097*^9}, {3.7181160353957376`*^9, 
   3.718116042512108*^9}, {3.718116175092005*^9, 3.7181161820755873`*^9}, {
   3.718117584991963*^9, 3.718117598118166*^9}, {3.718118127951221*^9, 
   3.71811816415438*^9}, {3.718120220718977*^9, 3.718120227034678*^9}, {
   3.718508369461955*^9, 3.718508440150715*^9}, {3.718508595797576*^9, 
   3.7185086046328583`*^9}, {3.718508724979954*^9, 3.7185087294282207`*^9}, {
   3.718508759496572*^9, 3.718508761598917*^9}, {3.718512056273232*^9, 
   3.71851206022703*^9}, {3.7185126994083033`*^9, 3.718512699610104*^9}, {
   3.718572118501178*^9, 
   3.718572201619132*^9}},ExpressionUUID->"751562cd-0008-4822-bef9-\
6cf23706ad3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "quantumCircuitEvaluate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"quantumCircuitEvaluate", "[", 
   RowBox[{"state_", ",", " ", "elems_"}], "]"}], " ", ":=", " ", "\n", "\t", 
  
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"Fold", "[", 
       RowBox[{"stepEvaluate", ",", " ", "state", ",", " ", 
        RowBox[{"circuitSteps", "[", "elems", "]"}]}], "]"}]}], "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"QuantumDiscreteStateQ", "[", "temp", "]"}]}], ",", " ", 
      RowBox[{"temp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "temp"}], "]"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.718080538131959*^9, 3.7180805554265127`*^9}, {
   3.718080592099607*^9, 3.7180806140102797`*^9}, {3.7180806617976723`*^9, 
   3.718080706408516*^9}, {3.718081142689237*^9, 3.7180811572665443`*^9}, {
   3.718115940348534*^9, 3.7181159483287086`*^9}, {3.7181179063528757`*^9, 
   3.71811792114548*^9}, {3.718118107940597*^9, 3.7181181094588537`*^9}, 
   3.718119147591897*^9, {3.718508776525022*^9, 3.718508855985261*^9}, {
   3.7185089482295237`*^9, 3.718508969116166*^9}, {3.718511707102902*^9, 
   3.718511707943026*^9}, {3.718582953102577*^9, 
   3.7185829544401407`*^9}},ExpressionUUID->"fc232bcb-a766-44c7-826f-\
241cb9f59bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumCircuit", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"QuantumCircuit", "::", "op"}], "=", 
     "\"\<Expecting valid QuantumOperation expressions.\>\""}], ";"}], "Code"],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Format", "[", 
     RowBox[{
      RowBox[{"QuantumCircuit", "[", 
       RowBox[{"elems_", "?", "circElemsListQ"}], "]"}], ",", " ", 
      "StandardForm"}], "]"}], 
    StyleBox[" ", "Code"], 
    StyleBox[":=", "Code"], 
    StyleBox[" ", "Code"], 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "wires", ",", " ", "numWires", ",", " ", "measWires", ",", " ", 
        "condWires", ",", " ", "steps", ",", " ", "numSteps", ",", " ", 
        "graphicInputs", ",", " ", "wireGraphics", ",", " ", 
        "stepsGraphics"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "elems"}], " ", "\[Equal]", " ", 
          "0"}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"Panel", " ", "@", " ", "\"\<EmptyCircuit\>\""}], "]"}]}], 
        "]"}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"wires", " ", "=", " ", 
        RowBox[{"circuitWires", "[", "elems", "]"}]}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"numWires", " ", "=", " ", 
        RowBox[{"Length", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
       RowBox[{"steps", " ", "=", " ", 
        RowBox[{"circuitSteps", "[", "elems", "]"}]}], ";", "\n", "\t", 
       RowBox[{"numSteps", " ", "=", " ", 
        RowBox[{"Length", " ", "@", " ", "steps"}]}], ";", "\n", "\t", 
       RowBox[{"graphicInputs", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\n", "\t", 
       RowBox[{"wireGraphics", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"ToString", "[", "#1", "]"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"0.2", " ", "*", " ", 
                    RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}], "]"}], 
                "}"}], ",", "\n", "\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", " ", "\n",
                  "\t\t", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.05", ",", 
                    RowBox[{"0.2", " ", "*", " ", 
                    RowBox[{"First", "[", "#2", "]"}]}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{".3", "*", "numSteps"}], ",", 
                    RowBox[{"0.2", " ", "*", 
                    RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}], "}"}], 
                  "]"}]}], "}"}]}], "}"}], "&"}], ",", " ", "\n", "\t\t", 
            RowBox[{"Reverse", " ", "@", " ", "wires"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"stepsGraphics", " ", "=", " ", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"singleStepGraphics", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"First", "[", "#2", "]"}], ",", " ", "wires"}], "]"}], 
           "&"}], ",", " ", "steps"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"graphicInputs", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"wireGraphics", ",", " ", "stepsGraphics"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"Panel", " ", "@", " ", 
        RowBox[{"Show", "[", 
         RowBox[{"Graphics", "[", "graphicInputs", "]"}], "]"}]}]}]}], "\n", 
     "\t\t", "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{
      RowBox[{"elems_", "?", "circElemsListQ"}], ",", " ", 
      RowBox[{"\"\<Simplify\>\"", " ", "\[Rule]", " ", "\"\<True\>\""}]}], 
     "]"}], " ", ":=", " ", 
    StyleBox["\n", "Code"], "\t", 
    RowBox[{"QuantumCircuit", " ", "@", " ", "\n", "\t\t", 
     RowBox[{"quantumSimplify", "[", 
      RowBox[{"elems", ",", " ", "simps"}], "]"}]}]}], ";"}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{
     RowBox[{"QuantumCircuit", "[", 
      RowBox[{"elemsA_", "?", "circElemsListQ"}], "]"}], " ", "+", " ", 
     RowBox[{"QuantumCircuit", "[", 
      RowBox[{"elemsB_", "?", "circElemsListQ"}], "]"}]}], " ", ":=", " ", 
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"elemsA", ",", " ", "elemsB"}], "]"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"circ", ":", 
       RowBox[{"QuantumCircuit", "[", 
        RowBox[{"els_", "?", "circElemsListQ"}], "]"}]}], ")"}], " ", "^", 
     " ", "n_Integer"}], " ", ":=", " ", 
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{"Flatten", " ", "@", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"circ", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "n"}], "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"QuantumCircuit", " ", "/:", " ", 
   RowBox[{
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{"elems_", "?", "circElemsListQ"}], "]"}], "[", 
    "qstate_QuantumDiscreteState", "]"}], " ", ":=", " ", 
   RowBox[{"quantumCircuitEvaluate", "[", 
    RowBox[{"qstate", ",", " ", "elems"}], "]"}]}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"QuantumCircuit", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], "*)"}], "\n", "\t"}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{
  3.7170372202075787`*^9, {3.7170372974842052`*^9, 3.717037321818471*^9}, {
   3.717037732008115*^9, 3.7170379153297577`*^9}, {3.717038007218213*^9, 
   3.717038144708664*^9}, {3.717038177061919*^9, 3.7170381888898706`*^9}, {
   3.717038220065578*^9, 3.717038221385172*^9}, {3.7170383122305813`*^9, 
   3.717038327600315*^9}, {3.717038382867708*^9, 3.717038406854653*^9}, 
   3.717040626542416*^9, {3.717043825736205*^9, 3.7170438300686703`*^9}, {
   3.717044141008026*^9, 3.717044142579198*^9}, {3.717044562088298*^9, 
   3.717044686463253*^9}, {3.7170448398743258`*^9, 3.717044911424079*^9}, 
   3.717045185730742*^9, {3.717045402956708*^9, 3.71704545662227*^9}, {
   3.7170455526233263`*^9, 3.717045574844055*^9}, {3.7170456230475693`*^9, 
   3.717045623681896*^9}, {3.717045664067543*^9, 3.7170456972701483`*^9}, 
   3.717045771816641*^9, {3.7170458194539347`*^9, 3.7170458753368893`*^9}, {
   3.717046043207868*^9, 3.7170460480948753`*^9}, {3.717046095604845*^9, 
   3.717046097458664*^9}, {3.717046458924074*^9, 3.717046489593285*^9}, {
   3.717047001500821*^9, 3.717047002319154*^9}, {3.717047145940814*^9, 
   3.717047189409116*^9}, {3.717122053716134*^9, 3.717122055077405*^9}, {
   3.7179032028694468`*^9, 3.717903229387866*^9}, {3.717903564232473*^9, 
   3.717903565401843*^9}, {3.7179036162336082`*^9, 3.717903621128199*^9}, {
   3.717903664016211*^9, 3.717903796334528*^9}, {3.717903833127716*^9, 
   3.717903874772998*^9}, {3.717903909284849*^9, 3.7179039233661633`*^9}, {
   3.7179039600453157`*^9, 3.717904117689638*^9}, {3.717904215850791*^9, 
   3.7179042351065083`*^9}, {3.717904294449581*^9, 3.717904294653452*^9}, {
   3.718080975212002*^9, 3.71808098953615*^9}, {3.718081119009954*^9, 
   3.7180811194780483`*^9}, {3.718081192532937*^9, 3.718081272577229*^9}, 
   3.718116323171626*^9, {3.71811788034984*^9, 3.718117884366479*^9}, {
   3.718118532558031*^9, 
   3.718118532811804*^9}},ExpressionUUID->"f0cd8aea-f276-45c1-b560-\
eb7a4d5b7087"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellDingbat->None,
 CellChangeTimes->{{3.708009327654993*^9, 
  3.7080093362784777`*^9}},ExpressionUUID->"0264b4e3-1589-4937-9483-\
8291a410bfde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumPlot", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPlot", "[", "state_QuantumDiscreteState", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"desc", ",", " ", "bases", ",", " ", "qudits"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"qudits", " ", "=", " ", 
       RowBox[{"state", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"bases", " ", "=", " ", 
       RowBox[{"basis", "[", 
        RowBox[{"qudits", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vecQ", "[", "state", "]"}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"desc", " ", "=", " ", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}]}], 
         ";", 
         RowBox[{"DiscretePlot", "[", 
          RowBox[{
           RowBox[{"Abs", " ", "@", " ", 
            RowBox[{"desc", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Range", "@", 
              RowBox[{"Length", "[", "desc", "]"}]}]}], "}"}], ",", "\n", 
           "\t\t", 
           RowBox[{"ExtentSize", " ", "\[Rule]", " ", "Full"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<|\>\"", "<>", 
                    RowBox[{"ToString", "/@", "#"}]}], "]"}], "<>", 
                    "\"\<>\>\""}]}], "}"}], "&"}], ",", " ", "bases"}], "]"}],
               ",", "1"}], "]"}]}], ",", "\n", "\t\t", 
           RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<|\>\"", "<>", " ", 
               RowBox[{"StringJoin", " ", "@", " ", 
                RowBox[{"Riffle", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{"ToString", ",", " ", 
                    RowBox[{"qudits", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}], 
                  ",", " ", 
                  RowBox[{"{", "\"\<, \>\"", "}"}]}], "]"}]}], "<>", " ", 
               "\"\<>\>\""}], ",", " ", 
              RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}]}], "]"}]}], 
        ",", " ", "\n", "\t", 
        RowBox[{
         RowBox[{"desc", " ", "=", " ", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
         ";", " ", "\n", "\t\t", 
         RowBox[{"DiscretePlot3D", "[", 
          RowBox[{
           RowBox[{"Abs", " ", "@", " ", 
            RowBox[{"desc", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", " ", "j"}], "]"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", 
             RowBox[{"Range", "@", 
              RowBox[{"Length", "[", "desc", "]"}]}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", 
             RowBox[{"Range", "@", 
              RowBox[{"Last", "[", 
               RowBox[{"Dimensions", "[", "desc", "]"}], "]"}]}]}], "}"}], 
           ",", "\n", "\t\t", 
           RowBox[{"ExtentSize", " ", "\[Rule]", " ", "Full"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Ticks", "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"MapIndexed", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{"StringJoin", "[", 
                    RowBox[{"\"\<|\>\"", "<>", 
                    RowBox[{"ToString", "/@", "#"}]}], "]"}], "<>", 
                    "\"\<>\>\""}]}], "}"}], "&"}], ",", " ", "bases"}], "]"}],
               ",", "2"}], "]"}]}], ",", "\n", "\t\t", 
           RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<|\>\"", "<>", " ", 
               RowBox[{"StringJoin", " ", "@", " ", 
                RowBox[{"Riffle", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{"ToString", ",", " ", 
                    RowBox[{"qudits", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}], 
                  ",", " ", 
                  RowBox[{"{", "\"\<, \>\"", "}"}]}], "]"}]}], "<>", " ", 
               "\"\<>\>\""}], ",", " ", 
              RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}]}]}], "]"}]}]}], 
       "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.708009342237997*^9, 3.7080094322872667`*^9}, {
   3.708009468364711*^9, 3.708009471797909*^9}, {3.708009669253522*^9, 
   3.708009693922256*^9}, 3.7080106030843782`*^9, {3.708011507619841*^9, 
   3.7080115096140137`*^9}, 3.708025398712881*^9, {3.708119404821858*^9, 
   3.708119408040629*^9}, {3.708119464416115*^9, 3.708119594096279*^9}, {
   3.708119631855506*^9, 3.708119637831841*^9}, {3.708119690321122*^9, 
   3.708119693542573*^9}, {3.7082571327848597`*^9, 3.708257135881102*^9}, {
   3.712373237270288*^9, 3.71237330569071*^9}, {3.712373380450596*^9, 
   3.712373478378706*^9}, {3.712373547773279*^9, 3.712373606019443*^9}, {
   3.7123736788607407`*^9, 3.712373700473867*^9}, {3.7123739753863497`*^9, 
   3.712374007367161*^9}, 3.715309418051255*^9, {3.7153105327527237`*^9, 
   3.715310534909273*^9}, {3.7168316329064617`*^9, 3.7168316974158897`*^9}, {
   3.716831901117302*^9, 3.716832080119158*^9}, 3.716832165003292*^9, {
   3.7168322278917847`*^9, 3.716832228219838*^9}, {3.716832370108107*^9, 
   3.71683241272803*^9}, {3.7168325306832848`*^9, 3.7168325604413967`*^9}, {
   3.716832630136333*^9, 3.716832665163905*^9}, {3.7168724217781973`*^9, 
   3.716872444916396*^9}},ExpressionUUID->"676c8dbd-35ff-4b97-989a-\
d2786c1c59f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fidelity", "Section",
 CellDingbat->None,
 CellChangeTimes->{{3.708009327654993*^9, 3.7080093362784777`*^9}, {
  3.708011622981002*^9, 3.708011625698531*^9}, {3.711885132705306*^9, 
  3.7118851336154747`*^9}, {3.713034017690136*^9, 
  3.713034018720811*^9}},ExpressionUUID->"7ce63470-582a-47be-b51a-\
9f0ce14d73a9"],

Cell["Calculates the fidelity of two quantum states", "Text",
 CellDingbat->None,
 CellChangeTimes->{{3.708011997768721*^9, 3.708012011701028*^9}, 
   3.708014670374447*^9, {3.713034034164405*^9, 
   3.713034054895059*^9}},ExpressionUUID->"5aedfaaf-fbcf-41fc-ad1d-\
4c61c93660df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateFidelity", "[", 
    RowBox[{
    "state1_QuantumDiscreteState", ",", " ", "state2_QuantumDiscreteState"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Rho]", ",", " ", "\[Sigma]", ",", " ", "rootMat"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"\[Rho]", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vecQ", "[", "state1", "]"}], ",", " ", 
         RowBox[{"vecToMat", "[", 
          RowBox[{"state1", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], 
         ",", " ", 
         RowBox[{"state1", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"\[Sigma]", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vecQ", "[", "state2", "]"}], ",", " ", 
         RowBox[{"vecToMat", "[", 
          RowBox[{"state2", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], 
         ",", " ", 
         RowBox[{"state2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"rootMat", " ", "=", " ", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{"\[Rho]", ",", " ", 
         RowBox[{"1", "/", "2"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Tr", "[", 
       RowBox[{"MatrixPower", "[", 
        RowBox[{
         RowBox[{"rootMat", ".", " ", "\[Sigma]", ".", " ", "rootMat"}], ",", 
         
         RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.708009342237997*^9, 3.7080094322872667`*^9}, {
   3.708009468364711*^9, 3.708009471797909*^9}, {3.708009669253522*^9, 
   3.708009693922256*^9}, 3.7080106030843782`*^9, {3.708011507619841*^9, 
   3.7080115096140137`*^9}, {3.708011799849766*^9, 3.708011866322174*^9}, {
   3.708012213752304*^9, 3.708012214544158*^9}, {3.708012565304974*^9, 
   3.7080126254459743`*^9}, {3.708258529307891*^9, 3.708258552273859*^9}, {
   3.7118842251435633`*^9, 3.711884230556323*^9}, {3.711885137529098*^9, 
   3.711885148699959*^9}, {3.711885218688745*^9, 3.711885237948142*^9}, {
   3.713034057182426*^9, 3.713034100187653*^9}, {3.7130341332426*^9, 
   3.713034255070909*^9}, {3.713290183239551*^9, 3.713290185909883*^9}, {
   3.714481635361422*^9, 3.7144816404072437`*^9}, {3.7153094265140343`*^9, 
   3.71530942752986*^9}, 3.716002589656011*^9, {3.7169087523241796`*^9, 
   3.716908828597842*^9}},ExpressionUUID->"8e5b6602-c11c-4713-8722-\
98ac1c631e15"]
}, Closed]],

Cell[CellGroupData[{

Cell["Querying Quantum State", "Section",
 CellDingbat->None,
 CellChangeTimes->{{3.7078441692832937`*^9, 
  3.7078441788095703`*^9}},ExpressionUUID->"c7495b8f-d490-4d63-b4cf-\
3314016c0c44"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "QuantumMixedStateQ", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMixedStateQ", "[", "state_QuantumDiscreteState", "]"}], 
   " ", ":=", " ", 
   RowBox[{
    RowBox[{"state", "[", "\"\<Purity\>\"", "]"}], " ", "<", " ", "1"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMixedStateQ", "[", "___", "]"}], " ", ":=", " ", "False"}],
   ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7078317154939833`*^9, 3.707831782949436*^9}, {
   3.707831822460099*^9, 3.707831903169548*^9}, {3.7078319818353024`*^9, 
   3.7078319913915854`*^9}, {3.707832064612612*^9, 3.7078320653547783`*^9}, {
   3.707832127811537*^9, 3.7078321756056433`*^9}, {3.707832339858238*^9, 
   3.707832356719351*^9}, {3.7078324589364777`*^9, 3.7078325164236603`*^9}, {
   3.707832576398597*^9, 3.707832634290616*^9}, {3.707832668972327*^9, 
   3.707832672791163*^9}, 3.707832834467679*^9, {3.707833068394928*^9, 
   3.7078330728880444`*^9}, {3.707833110534305*^9, 3.707833126388501*^9}, {
   3.707833374538905*^9, 3.7078333753307734`*^9}, {3.7078336584423523`*^9, 
   3.707833682982891*^9}, {3.707839166377523*^9, 3.707839175682537*^9}, {
   3.707839250426354*^9, 3.707839250568479*^9}, {3.707839367912459*^9, 
   3.707839382041503*^9}, {3.707839428075221*^9, 3.7078394285675793`*^9}, {
   3.707855472354624*^9, 3.707855493398741*^9}, {3.707855525451448*^9, 
   3.707855525735818*^9}, {3.707856538296371*^9, 3.7078565413866787`*^9}, {
   3.707856621766357*^9, 3.707856623099403*^9}, {3.708106218160133*^9, 
   3.708106265150772*^9}, {3.71251496524533*^9, 3.712514976752715*^9}, {
   3.713290200704268*^9, 3.7132902061684523`*^9}, 3.7153094295938063`*^9, 
   3.7160025769678717`*^9, {3.7169089919297237`*^9, 3.716909017037312*^9}, {
   3.716909059350412*^9, 3.716909069697851*^9}, 3.7170874295846033`*^9, 
   3.717900844229212*^9, 3.718418207456477*^9, 3.718498676547884*^9, 
   3.718571434332387*^9, 
   3.718640799038371*^9},ExpressionUUID->"5591dfe1-9970-497c-972f-\
d82f0ebde6b8"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "QuantumPureStateQ", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPureStateQ", "[", "state_QuantumDiscreteState", "]"}], " ",
    ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Abs", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"state", "[", "\"\<Purity\>\"", "]"}], " ", "-", " ", "1"}], 
       ")"}]}], ")"}], " ", "\[LessEqual]", " ", 
    RowBox[{"(", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "4"}], ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPureStateQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7078317154939833`*^9, 3.707831782949436*^9}, {
   3.707831822460099*^9, 3.707831903169548*^9}, {3.7078319818353024`*^9, 
   3.7078319913915854`*^9}, {3.707832064612612*^9, 3.7078320653547783`*^9}, {
   3.707832127811537*^9, 3.7078321756056433`*^9}, {3.707832339858238*^9, 
   3.707832356719351*^9}, {3.7078324589364777`*^9, 3.7078325164236603`*^9}, {
   3.707832576398597*^9, 3.707832634290616*^9}, {3.707832668972327*^9, 
   3.707832672791163*^9}, 3.707832834467679*^9, {3.707833068394928*^9, 
   3.7078330728880444`*^9}, {3.707833110534305*^9, 3.707833126388501*^9}, {
   3.707833374538905*^9, 3.7078333753307734`*^9}, {3.7078336584423523`*^9, 
   3.707833682982891*^9}, {3.707839166377523*^9, 3.707839175682537*^9}, {
   3.707839250426354*^9, 3.707839250568479*^9}, {3.707839367912459*^9, 
   3.707839382041503*^9}, {3.707839428075221*^9, 3.7078394580715523`*^9}, {
   3.70784478790307*^9, 3.707844835459771*^9}, {3.707845726872492*^9, 
   3.707845731380745*^9}, {3.707845955904848*^9, 3.7078459798269*^9}, {
   3.707846103669182*^9, 3.70784614264993*^9}, {3.70785540240062*^9, 
   3.70785540995116*^9}, {3.707855521297392*^9, 3.7078555221729107`*^9}, {
   3.707856547934154*^9, 3.707856549155373*^9}, {3.707856625851941*^9, 
   3.707856630397801*^9}, {3.712514934860894*^9, 3.712514942446479*^9}, {
   3.7132902100390263`*^9, 3.713290222216267*^9}, 3.7153094329293423`*^9, 
   3.7160025682505608`*^9, {3.716909079756885*^9, 3.71690908572922*^9}, 
   3.717087432179783*^9, 3.717900849347184*^9, 3.7184182125044947`*^9, {
   3.718425918871502*^9, 3.718425940477034*^9}, 3.718498685578794*^9, {
   3.718571437961193*^9, 3.718571462635357*^9}, 
   3.7186408033803463`*^9},ExpressionUUID->"68e30826-02c9-4e2a-a20f-\
23338de90185"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "QuantumEntangledStateQ", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledStateQ", "::", "qubits"}], " ", "=", " ", 
   "\"\<Entanglement query input must be a 2-qubit state.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledStateQ", "::", "mixed"}], " ", "=", " ", 
    "\"\<For entanglement query across bipartition, input state must be pure.\
\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "QuantumEntangledStateQ", "[", "state_QuantumDiscreteState", "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "   \t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Rho]", ",", " ", "root\[Rho]", ",", " ", "r", ",", " ", 
        "concurrence", ",", " ", "ys", ",", " ", "eigs"}], "}"}], ",", "\n", 
      "   \t", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vecQ", "[", "state", "]"}], ",", " ", 
          RowBox[{"vecToMat", "[", 
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], 
          ",", " ", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
         "]"}]}], ";", "\n", "   ", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "\[Rho]", "]"}], " ", "!=", " ", 
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}]}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantumEntangledStateQ", "::", "qubits"}], "]"}], ";", 
          "\n", "\t\t", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "\n", "\t", "]"}], ";",
        "\n", "\t", 
       RowBox[{"ys", " ", "=", " ", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{"pauliy", ",", "pauliy"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"root\[Rho]", " ", "=", " ", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{"\[Rho]", ",", " ", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"MatrixPower", "[", 
         RowBox[{
          RowBox[{"root\[Rho]", " ", ".", " ", "ys", ".", " ", 
           RowBox[{"Conjugate", "[", "\[Rho]", "]"}], ".", " ", "ys", ".", 
           " ", "root\[Rho]"}], ",", " ", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"eigs", " ", "=", " ", 
        RowBox[{"Sort", "[", 
         RowBox[{"Eigenvalues", "[", "r", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"concurrence", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{
           RowBox[{"eigs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"eigs", "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"(", 
        RowBox[{"concurrence", " ", ">", " ", "0"}], ")"}]}]}], "\n", "   ", 
     "]"}]}], ";"}], "\n", "   ", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumEntangledStateQ", "[", 
      RowBox[{"state_QuantumDiscreteState", ",", " ", "sub1_List"}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "   \t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "reducedState", ",", " ", "tracedStates", ",", " ", "\[Rho]red", ",", 
         " ", "concurrence", ",", " ", "sub2"}], "}"}], ",", "\n", "   ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"QuantumMixedStateQ", "[", "state", "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{"QuantumEntangledStateQ", "::", "mixed"}], "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", "\n", 
        "\t", 
        RowBox[{"sub2", " ", "=", " ", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "\"\<QuditDimensions\>\""}], "]"}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "sub1"}],
           "]"}]}], ";", "\n", "\t", 
        RowBox[{"tracedStates", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "sub1", "]"}], " ", "<", " ", 
            RowBox[{"Length", "[", "sub2", "]"}]}], ",", " ", "sub1", ",", 
           " ", "sub2"}], "]"}]}], ";", "\n", "    ", 
        RowBox[{"reducedState", " ", "=", " ", 
         RowBox[{"QuantumPartialTr", "[", 
          RowBox[{"state", ",", " ", "tracedStates"}], "]"}]}], ";", "\n", 
        "    ", 
        RowBox[{"\[Rho]red", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"vecQ", "[", "reducedState", "]"}], ",", " ", 
           RowBox[{"vecToMat", "[", 
            RowBox[{"reducedState", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], 
           ",", " ", 
           RowBox[{"reducedState", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
          "]"}]}]}]}], "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{"concurrence", " ", "=", " ", 
        RowBox[{"Sqrt", "[", " ", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Tr", "[", 
             RowBox[{"\[Rho]red", ".", "\[Rho]red"}], "]"}]}], ")"}]}], 
         "]"}]}], "*)"}], "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"(", 
        RowBox[{"concurrence", " ", ">", " ", "0"}], ")"}], "*)"}], "\n", 
      "   ", "]"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledStateQ", "[", "___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7078394966289062`*^9, 3.707839509537924*^9}, {
   3.707839619898985*^9, 3.707839641975348*^9}, {3.707855347211532*^9, 
   3.707855383115602*^9}, {3.7078554172337847`*^9, 3.707855464282571*^9}, {
   3.707855506513619*^9, 3.707855608748455*^9}, {3.7080258480189447`*^9, 
   3.708025858325562*^9}, {3.708106176627046*^9, 3.708106178923696*^9}, {
   3.7081062140481577`*^9, 3.708106215812172*^9}, {3.7081247866351213`*^9, 
   3.7081247874565067`*^9}, {3.7081248612925997`*^9, 3.708124919418405*^9}, {
   3.7081250771583977`*^9, 3.708125223073511*^9}, {3.7081252823294067`*^9, 
   3.7081254134084463`*^9}, {3.708125527142736*^9, 3.708125675288959*^9}, {
   3.708204262908609*^9, 3.7082043084733047`*^9}, {3.7082074748295193`*^9, 
   3.708207669800891*^9}, {3.708207771621037*^9, 3.7082080385550747`*^9}, {
   3.708208118639743*^9, 3.708208132555297*^9}, {3.708208167651116*^9, 
   3.708208169241611*^9}, {3.7082511269792547`*^9, 3.708251130723009*^9}, {
   3.708251587074148*^9, 3.708251589638174*^9}, {3.7118883135499363`*^9, 
   3.7118883332565002`*^9}, {3.71188839698352*^9, 3.711888414063012*^9}, {
   3.713290226674705*^9, 3.71329024702787*^9}, {3.713452211397274*^9, 
   3.713452216436283*^9}, {3.713452611787772*^9, 3.713452692819058*^9}, {
   3.714471383061705*^9, 3.714471388140991*^9}, {3.7145349842113934`*^9, 
   3.7145349957857656`*^9}, {3.715309436394948*^9, 3.715309439587358*^9}, {
   3.716832682870037*^9, 3.7168326835140743`*^9}, {3.7169091854848537`*^9, 
   3.716909191622354*^9}, {3.716909343905446*^9, 3.716909377956169*^9}, {
   3.71690942144503*^9, 3.7169094389831553`*^9}, {3.7169097368783216`*^9, 
   3.716909739729102*^9}, {3.7169098487949963`*^9, 3.716909848936262*^9}, {
   3.716909882968876*^9, 3.716909884912895*^9}, {3.716909954121653*^9, 
   3.71690997570008*^9}, 
   3.7169100969809628`*^9},ExpressionUUID->"8ed18997-a3bd-41f1-ae4b-\
34fcf6bedc45"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711200134959556*^9},ExpressionUUID->"eb5930c8-c3e8-459d-8ae5-\
2b0cade6ed04"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bob", " ", "=", "  ", 
   RowBox[{"QuantumDiscreteState", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ancilla", " ", "=", "  ", 
   RowBox[{"QuantumDiscreteState", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alice", " ", "=", "  ", 
   RowBox[{"QuantumDiscreteState", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Psi]\>\"", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"5", ",", 
        RowBox[{"7", "\[ImaginaryI]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7186465395501757`*^9, 3.718646636675888*^9}, {
   3.7186466740589943`*^9, 3.718646703607196*^9}, {3.71864713438118*^9, 
   3.7186471461025457`*^9}, 3.7186473044771833`*^9, {3.71864750111236*^9, 
   3.718647506884226*^9}, {3.718648342187129*^9, 
   3.7186483427566147`*^9}},ExpressionUUID->"a703bf57-9996-4536-acca-\
a98d3ac3ad14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", " ", "=", " ", 
  RowBox[{"QuantumDiscreteState", "[", 
   RowBox[{"\"\<Product\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"alice", ",", " ", "bob", ",", " ", "ancilla"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.718646712745757*^9, 3.7186467899336977`*^9}, {
   3.71864702184757*^9, 3.718647023769603*^9}, 
   3.7186471550914173`*^9},ExpressionUUID->"cf67c340-b355-43e2-83c5-\
2a0c17158d08"],

Cell[BoxData[
 RowBox[{"QuantumDiscreteState", "[", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"QuditDimensions\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(0\\), \\(A\\)]\\)\"\>", 
        "\[Rule]", "2"}], ",", 
       RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(0\\), \\(B\\)]\\)\"\>", 
        "\[Rule]", "2"}], ",", 
       RowBox[{"\<\"\[Psi]\"\>", "\[Rule]", "2"}]}], "}"}]}], ",", 
    RowBox[{"\<\"StateVector\"\>", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[
                   
                   RasterBox[{{{0.772061, 0.92462, 0.998703}, {0.235431, 
                    0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}, {
                    0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                    0.833291}, {0.235431, 0.32765, 0.833291}, {0.235431, 
                    0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}}}, {{0, 
                    0}, {8, 1}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                   Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, "DefaultPlotStyle" -> Automatic, 
                    "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
                    Scaled[0.05]}], 
                  GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "8", "}"}], "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[
                   
                   RasterBox[{{{0.772061, 0.92462, 0.998703}, {0.235431, 
                    0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}, {
                    0.235431, 0.32765, 0.833291}, {0.235431, 0.32765, 
                    0.833291}, {0.235431, 0.32765, 0.833291}, {0.235431, 
                    0.32765, 0.833291}, {0.235431, 0.32765, 0.833291}}}, {{0, 
                    0}, {8, 1}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
                   Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                   Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, "DefaultPlotStyle" -> Automatic, 
                    "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
                    Scaled[0.05]}], 
                  GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "8", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.25`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox["5", 
                    SqrtBox["74"]], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", "2", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    FractionBox[
                    RowBox[{"7", " ", "\[ImaginaryI]"}], 
                    SqrtBox["74"]], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("SparseArray[<2>, {8}]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "\[RightAssociation]"}], "]"}]], "Output",
 CellChangeTimes->{3.718646754159487*^9, 3.718646791145203*^9, 
  3.718646941879609*^9, 3.7186470244289637`*^9, 3.718647155838203*^9, 
  3.718647442759286*^9, 3.718647508940675*^9, 
  3.718648345948735*^9},ExpressionUUID->"fa7ba468-b655-4c2d-89e6-\
9dbf33fbca3d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h1", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "\"\<\[Psi]\>\""}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h2", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{
    "\"\<Hadamard\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\""}], " ", "]"}]}], ";", 
  RowBox[{"cn12", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Psi]\>\"", ",", "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\""}], 
      "}"}]}], "]"}]}], " ", ";", 
  RowBox[{"cn23", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\"", " ", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\""}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", " ", "=", " ", 
    RowBox[{"QuantumDiscreteMeasurement", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Psi]\>\"", ",", "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\""}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"id", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{
    "\"\<Identity\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{
    "\"\<PauliXGate\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"QuantumDiscreteOperation", "[", 
    RowBox[{
    "\"\<PauliYGate\>\"", ",", " ", 
     "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", " ", "=", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{
     "\"\<PauliZGate\>\"", ",", " ", 
      "\"\<\!\(\*SubscriptBox[\(0\), \(B\)]\)\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cond", " ", "=", " ", 
   RowBox[{"QuantumDiscreteConditionalOperation", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "===", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "&"}], ",", " ", "y"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "===", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "&"}], ",", " ", "z"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "===", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "&"}], ",", " ", "x"}], "}"}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"#", " ", "===", " ", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2"}], "}"}]}], "&"}], ",", " ", "id"}], "}"}]}],
      "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.718584950719905*^9, 3.718584964792018*^9}, {
  3.718585105441378*^9, 3.718585184962826*^9}, {3.7185854490426397`*^9, 
  3.71858546187418*^9}, {3.7185861172365093`*^9, 3.7185861192430677`*^9}, {
  3.718586194048498*^9, 3.718586195725649*^9}, {3.7186418820623293`*^9, 
  3.718641927883916*^9}, {3.7186419724719276`*^9, 3.718642013604566*^9}, {
  3.718642048550907*^9, 
  3.7186420510406857`*^9}},ExpressionUUID->"e8de92dc-eece-4972-96ed-\
462ffd8179c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"circ", " ", "=", " ", 
  RowBox[{"QuantumCircuit", "[", 
   RowBox[{"{", 
    RowBox[{
    "h2", ",", " ", "cn23", ",", "cn12", ",", " ", "h1", ",", " ", "m", ",", 
     " ", "cond"}], "}"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.718585437248384*^9, 3.718585506622264*^9}, {
  3.718586211443861*^9, 3.7185862154275913`*^9}, {3.718587264333836*^9, 
  3.718587264655526*^9}, {3.718587377956422*^9, 3.718587406114315*^9}, {
  3.718587989516984*^9, 
  3.718588028154272*^9}},ExpressionUUID->"ff59734b-9a80-4876-873f-\
9695d516ed05"],

Cell[BoxData[
 PanelBox[
  GraphicsBox[{InsetBox["\<\"\[Psi]\"\>", {0, 0.2}], 
    {AbsoluteThickness[2], 
     LineBox[{{0.05, 0.2}, {1.7999999999999998`, 0.2}}]}, 
    InsetBox["\<\"0\\n B\"\>", {0, 0.4}], 
    {AbsoluteThickness[2], 
     LineBox[{{0.05, 0.4}, {1.7999999999999998`, 0.4}}]}, 
    InsetBox["\<\"0\\n A\"\>", {0, 0.6000000000000001}], 
    {AbsoluteThickness[2], 
     LineBox[{{0.05, 0.6000000000000001}, {1.7999999999999998`, 
      0.6000000000000001}}]}, {
     {GrayLevel[0.5], RectangleBox[{0.1, 0.55}, {0.25, 0.65}]}, 
     InsetBox["\<\"\[ScriptCapitalH]\"\>", {0.175, 0.6000000000000001}]}, {
     {GrayLevel[0.5], RectangleBox[{0.4, 0.55}, {0.55, 0.65}]}, 
     {GrayLevel[0.5], RectangleBox[{0.4, 0.35}, {0.55, 0.45}]}, 
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"\[ScriptCapitalC]\\\\\\\"\
\\\", \\\"\\\\\\\"\[ScriptCapitalX]\\\\\\\"\\\"]\\)\"\>", \
{0.475, 0.6000000000000001}], 
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"\[ScriptCapitalC]\\\\\\\"\
\\\", \\\"\\\\\\\"\[ScriptCapitalX]\\\\\\\"\\\"]\\)\"\>", {0.475, 0.4}]}, {
     {GrayLevel[0.5], RectangleBox[{0.7, 0.55}, {0.85, 0.65}]}, 
     {GrayLevel[0.5], RectangleBox[{0.7, 0.15}, {0.85, 0.25}]}, 
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"\[ScriptCapitalC]\\\\\\\"\
\\\", \\\"\\\\\\\"\[ScriptCapitalX]\\\\\\\"\\\"]\\)\"\>", \
{0.7749999999999999, 0.6000000000000001}], 
     InsetBox["\<\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"\[ScriptCapitalC]\\\\\\\"\
\\\", \\\"\\\\\\\"\[ScriptCapitalX]\\\\\\\"\\\"]\\)\"\>", \
{0.7749999999999999, 0.2}]}, {
     {GrayLevel[0.5], RectangleBox[{0.9999999999999999, 0.15}, {1.15, 0.25}]},
      InsetBox["\<\"\[ScriptCapitalH]\"\>", {1.075, 0.2}]}, {
     {GrayLevel[0.5], RectangleBox[{1.3, 0.55}, {1.45, 0.65}]}, 
     {GrayLevel[0.5], RectangleBox[{1.3, 0.15}, {1.45, 0.25}]}, 
     InsetBox["\<\"\[ScriptCapitalM]\"\>", {1.375, 0.6000000000000001}], 
     InsetBox["\<\"\[ScriptCapitalM]\"\>", {1.375, 0.2}]}, {
     {GrayLevel[0.5], RectangleBox[{1.6, 0.35}, {1.75, 0.45}]}, 
     {GrayLevel[0.5], RectangleBox[{1.6, 0.35}, {1.75, 0.45}]}, 
     {GrayLevel[0.5], RectangleBox[{1.6, 0.35}, {1.75, 0.45}]}, 
     {GrayLevel[0.5], RectangleBox[{1.6, 0.35}, {1.75, 0.45}]}, 
     InsetBox["\<\"\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\"\>", \
{1.675, 0.4}], 
     InsetBox["\<\"\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\"\>", \
{1.675, 0.4}], 
     InsetBox["\<\"\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\"\>", \
{1.675, 0.4}], 
     InsetBox["\<\"\[ScriptCapitalC]\[ScriptO]\[ScriptN]\[ScriptD]\"\>", \
{1.675, 0.4}]}}]]], "Output",
 CellChangeTimes->{
  3.718585507061159*^9, {3.718586212433133*^9, 3.718586215784968*^9}, {
   3.718587199694639*^9, 3.718587201509563*^9}, 3.718587265309054*^9, {
   3.7185873803200207`*^9, 3.718587406602775*^9}, 3.718587754237158*^9, 
   3.718587787481229*^9, 3.71858782514497*^9, 3.718587877933655*^9, {
   3.7185879844574823`*^9, 3.718588028869625*^9}, 3.718588105128436*^9, 
   3.7186417663050003`*^9, 3.718641933135668*^9, {3.718641988200614*^9, 
   3.718642015416757*^9}, 3.718642053104857*^9, 3.718647449869672*^9, 
   3.718647516717937*^9},ExpressionUUID->"de64f9f7-9ca4-4bb4-8b0c-\
e091b22bd194"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sNew", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumPartialTr", "[", 
      RowBox[{
       RowBox[{"circ", "[", "s", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Psi]\>\"", ",", "  ", 
         "\"\<\!\(\*SubscriptBox[\(0\), \(A\)]\)\>\""}], " ", "}"}]}], "]"}], 
     " ", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}], "//", 
    "Normal"}]}], " "}], "\n", 
 RowBox[{"{", 
  RowBox[{
   FractionBox["5", 
    RowBox[{"2", " ", 
     SqrtBox["74"]}]], ",", 
   FractionBox["7", 
    RowBox[{"2", " ", 
     SqrtBox["74"]}]]}], "}"}]}], "Input",
 CellChangeTimes->{{3.718643069494882*^9, 3.718643071438375*^9}, 
   3.7186483350995207`*^9},ExpressionUUID->"edfe03fc-8542-43b0-9451-\
99573aac7bf6"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{912, 873},
WindowMargins->{{139, Automatic}, {26, Automatic}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 410, 10, 96, "Input", "ExpressionUUID" -> \
"dc9b2cdd-13f5-4cde-abee-af4d323826af"],
Cell[971, 32, 2901, 43, 52, "Code", "ExpressionUUID" -> \
"9314a701-30e1-4531-aab0-cc6bd4e4cd7f"],
Cell[CellGroupData[{
Cell[3897, 79, 159, 3, 64, "Section", "ExpressionUUID" -> \
"31494141-422d-4bc7-b5f5-f4af13d91c20"],
Cell[4059, 84, 21479, 643, 1039, "Code", "ExpressionUUID" -> \
"46e849d5-9343-4ddb-ac93-c326f2674c5a"],
Cell[25541, 729, 647, 14, 72, "Code", "ExpressionUUID" -> \
"92f9e5a9-5d6d-4c38-a900-158485a80c48"],
Cell[26191, 745, 7252, 186, 479, "Code", "ExpressionUUID" -> \
"3b5772a6-e1dc-46de-9325-6690d122490f"],
Cell[33446, 933, 2430, 41, 131, "Code", "ExpressionUUID" -> \
"d0fb2b1c-482b-4ade-8494-ae2a070d2204"],
Cell[35879, 976, 691, 15, 72, "Code", "ExpressionUUID" -> \
"c78bdec9-f064-44d8-91d1-7de3623ffa2e"],
Cell[36573, 993, 746, 16, 72, "Code", "ExpressionUUID" -> \
"f8a472ed-726e-4833-941f-da4642a09f32"],
Cell[37322, 1011, 5343, 149, 321, "Code", "ExpressionUUID" -> \
"5a10b76f-e31c-4562-a6ed-c6c92f02ab88"],
Cell[42668, 1162, 772, 16, 72, "Code", "ExpressionUUID" -> \
"627dc694-7b98-4075-a4b9-e7155b2f86d4"],
Cell[43443, 1180, 740, 15, 72, "Code", "ExpressionUUID" -> \
"4c4ac0a2-6513-43a1-b0a3-34d91d064af3"],
Cell[44186, 1197, 1051, 19, 89, "Code", "ExpressionUUID" -> \
"47c00142-a1f0-4f80-bebd-d8abdf5c0ef4"],
Cell[45240, 1218, 874, 19, 72, "Code", "ExpressionUUID" -> \
"e5b95c6f-c5f2-41f0-9a83-31ec3fd7d643"],
Cell[46117, 1239, 7355, 235, 437, "Code", "ExpressionUUID" -> \
"88d9f1e7-f8de-4971-9c5c-bca0f67a8136"],
Cell[53475, 1476, 943, 24, 72, "Code", "ExpressionUUID" -> \
"016ab26f-196a-434f-97e5-9f1bbf337280"],
Cell[54421, 1502, 1053, 28, 75, "Code", "ExpressionUUID" -> \
"d0a3ba15-a06b-459f-89fa-eb2c12410666"],
Cell[55477, 1532, 2028, 51, 135, "Code", "ExpressionUUID" -> \
"d438232e-da9d-43c3-ad52-696251d98277"],
Cell[57508, 1585, 958, 23, 73, "Code", "ExpressionUUID" -> \
"d160aaa6-efe5-4958-a76a-66ea2044340f"],
Cell[58469, 1610, 1006, 24, 73, "Code", "ExpressionUUID" -> \
"65f07631-25bd-4705-a6d1-90039858464e"],
Cell[59478, 1636, 1191, 30, 80, "Code", "ExpressionUUID" -> \
"f556cd43-8cee-49c7-a83f-eeb88f8cd087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60706, 1671, 167, 3, 65, "Chapter", "ExpressionUUID" -> \
"0458cd68-9ccf-4f5d-a61d-265b554413aa"],
Cell[60876, 1676, 336, 7, 52, "Code", "ExpressionUUID" -> \
"9e79d112-186c-43ff-88a3-aa760334717d"],
Cell[61215, 1685, 1459, 40, 186, "Code", "ExpressionUUID" -> \
"0e174845-cfdc-4157-ada4-5cb48a3d2402"],
Cell[62677, 1727, 5922, 159, 414, "Code", "ExpressionUUID" -> \
"2bd1241e-0cc9-4ed4-be3d-2d675319b5a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68636, 1891, 356, 6, 58, "Chapter", "ExpressionUUID" -> \
"e156b835-ebe6-4afc-a9fa-29d69a46280e"],
Cell[68995, 1899, 933, 24, 91, "Code", "ExpressionUUID" -> \
"8533adc0-ac78-4083-99c9-98c8859db623"],
Cell[69931, 1925, 1644, 37, 72, "Code", "ExpressionUUID" -> \
"16e60b39-35e2-4089-af31-8ab7b30fa3e5"],
Cell[71578, 1964, 728, 15, 72, "Code", "ExpressionUUID" -> \
"b1e09d4f-4d58-42d4-9acf-a04e5d7a2718"],
Cell[72309, 1981, 1953, 43, 167, "Code", "ExpressionUUID" -> \
"8b891266-b5f8-4e32-8cad-7a5c32a0147d"],
Cell[74265, 2026, 1659, 40, 167, "Code", "ExpressionUUID" -> \
"218c176a-ae4e-4e41-9d90-c4040f4da011"],
Cell[75927, 2068, 4813, 124, 471, "Code", "ExpressionUUID" -> \
"078c030d-30c7-49e7-a4a3-1a31768e1f05"],
Cell[80743, 2194, 8494, 201, 494, "Code", "ExpressionUUID" -> \
"b8546be7-e3fe-4701-a45d-74454d7e6504"],
Cell[89240, 2397, 5354, 139, 319, "Code", "ExpressionUUID" -> \
"a9dc682e-4b36-4f5e-b279-468a875098ad"],
Cell[94597, 2538, 5539, 143, 319, "Code", "ExpressionUUID" -> \
"aef97f35-3395-41b5-adc8-39bf74fc7e85"],
Cell[100139, 2683, 645, 19, 110, "Code", "ExpressionUUID" -> \
"57c7d025-19b8-41ba-823d-469fa7c700b5"],
Cell[100787, 2704, 2942, 74, 376, "Code", "ExpressionUUID" -> \
"7e94c100-03a1-49dd-a35c-7c80d5032eaa"],
Cell[103732, 2780, 540, 15, 91, "Code", "ExpressionUUID" -> \
"7a91ba98-be6b-459c-94b8-b12748405bc9"],
Cell[104275, 2797, 801, 22, 91, "Code", "ExpressionUUID" -> \
"03f16bc1-0973-4619-82a1-2a72060917e1"],
Cell[105079, 2821, 2477, 53, 167, "Code", "ExpressionUUID" -> \
"77eaae67-a8ae-4d37-9de1-93439a4d1aa7"],
Cell[107559, 2876, 513, 15, 91, "Code", "ExpressionUUID" -> \
"8385e1f8-095c-44cf-adde-d861c1062c80"],
Cell[108075, 2893, 4332, 103, 376, "Code", "ExpressionUUID" -> \
"7dad74aa-4788-4604-a528-d02360203d85"],
Cell[112410, 2998, 7741, 188, 889, "Code", "ExpressionUUID" -> \
"ec05bb27-9563-4557-9550-783d8d0eecb8"],
Cell[120154, 3188, 10651, 248, 1098, "Code", "ExpressionUUID" -> \
"6a2cc76c-c82e-4e64-87c6-11ca2585d071"],
Cell[130808, 3438, 635, 17, 91, "Code", "ExpressionUUID" -> \
"e177d08a-d9ce-4544-a92f-cd74e2939f3f"],
Cell[131446, 3457, 9311, 147, 205, "Code", "ExpressionUUID" -> \
"51739c7f-725d-457c-8c23-a977f806adf8"],
Cell[140760, 3606, 7789, 147, 471, "Code", "ExpressionUUID" -> \
"a1353e4b-c5ea-4c25-aca6-86d36a4ede1e"],
Cell[148552, 3755, 2756, 68, 205, "Code", "ExpressionUUID" -> \
"863fd740-9993-43c2-b156-800650d5bc13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151345, 3828, 331, 6, 65, "Chapter", "ExpressionUUID" -> \
"8dd4d474-e741-4243-98a0-72513c9e9e99"],
Cell[151679, 3836, 13972, 371, 1060, "Code", "ExpressionUUID" -> \
"22dd2b85-d337-481a-b271-037db0251abc"],
Cell[165654, 4209, 3079, 73, 243, "Code", "ExpressionUUID" -> \
"dffdc6bd-d1fb-4f05-b9bf-4ca301e9f75c"],
Cell[168736, 4284, 2173, 55, 224, "Code", "ExpressionUUID" -> \
"371eed8f-c6c8-4633-b34d-08c6a599579a"],
Cell[CellGroupData[{
Cell[170934, 4343, 303, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"9473a38c-b23d-4b1d-8eef-372d8377834e"],
Cell[171240, 4350, 4624, 108, 364, "Code", "ExpressionUUID" -> \
"f89fb519-b085-471b-927a-919b1cb3f1e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175901, 4463, 248, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"4283a64f-ce4a-4ec9-98b4-8ba689fa960d"],
Cell[176152, 4470, 4618, 130, 475, "Code", "ExpressionUUID" -> \
"dba7f8eb-be36-4bd7-8d44-1e997d7e066f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180807, 4605, 185, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"b61b4b71-a9d9-400a-bf1e-6be27216f1de"],
Cell[180995, 4611, 4199, 118, 441, "Code", "ExpressionUUID" -> \
"b737e85e-82a0-40e6-b151-7bf29e79ff67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185231, 4734, 286, 5, 35, "Subsubsection", "ExpressionUUID" -> \
"53397cfe-6d83-4f3f-8de7-106a0f0790e1"],
Cell[185520, 4741, 4394, 114, 345, "Code", "ExpressionUUID" -> \
"85fb908e-8ca9-4ce6-8c83-28aff4f96a58"],
Cell[189917, 4857, 6961, 206, 300, "Code", "ExpressionUUID" -> \
"d0da4721-210e-4321-b41c-4ad47a1592f5"],
Cell[196881, 5065, 16497, 416, 642, "Code", "ExpressionUUID" -> \
"2943fc40-bd9a-4cfc-9263-6c6f9d6be655"],
Cell[213381, 5483, 4279, 114, 357, "Code", "ExpressionUUID" -> \
"45ec965d-6051-4a9f-b1c9-b2f4f5b497f6"],
Cell[217663, 5599, 1640, 43, 189, "Code", "ExpressionUUID" -> \
"c156305b-ea22-4951-a82b-c8697b8169bb"],
Cell[219306, 5644, 4065, 102, 300, "Code", "ExpressionUUID" -> \
"55d74854-50ea-4834-81a9-b93fe4cddd16"],
Cell[223374, 5748, 1330, 36, 169, "Code", "ExpressionUUID" -> \
"f7a3a78c-aa12-4570-ab2e-badcda9bae9d"],
Cell[224707, 5786, 935, 22, 167, "Code", "ExpressionUUID" -> \
"5d8322cc-6295-4fb6-b310-80c1d6ea3976"],
Cell[225645, 5810, 2535, 63, 281, "Code", "ExpressionUUID" -> \
"64d6fd45-2704-4cee-ad68-c5e35b7b59d0"],
Cell[228183, 5875, 6533, 148, 509, "Code", "ExpressionUUID" -> \
"65b98fbb-b590-4a41-9ad1-9767f75601ac"],
Cell[234719, 6025, 1825, 44, 243, "Code", "ExpressionUUID" -> \
"5b606191-eeca-46be-90db-5e9f33251a4d"],
Cell[236547, 6071, 4000, 96, 395, "Code", "ExpressionUUID" -> \
"8a8b795d-b718-4947-87a8-26abe01b7d9b"],
Cell[240550, 6169, 15141, 320, 851, "Code", "ExpressionUUID" -> \
"b813cc51-620a-42a4-9fdc-848615df0354"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255740, 6495, 183, 4, 65, "Chapter", "ExpressionUUID" -> \
"332b0b33-2d6f-4b3d-adef-85fb1d6e2986"],
Cell[CellGroupData[{
Cell[255948, 6503, 152, 3, 44, "Subsection", "ExpressionUUID" -> \
"40e7f334-3275-4564-bc3e-7d7fdc81cd6c"],
Cell[CellGroupData[{
Cell[256125, 6510, 163, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"ec1434ea-288a-4fe0-a8fc-8c063d485782"],
Cell[256291, 6515, 1378, 38, 148, "Code", "ExpressionUUID" -> \
"bd08a340-b126-453a-9241-ece1dd524676"],
Cell[257672, 6555, 2017, 51, 167, "Code", "ExpressionUUID" -> \
"5ddcfbfd-6a60-42b2-aa45-e4423515afad"],
Cell[259692, 6608, 1364, 37, 148, "Code", "ExpressionUUID" -> \
"7a772870-8fe8-4e2a-8214-2abad08ad0ed"],
Cell[261059, 6647, 3616, 79, 300, "Code", "ExpressionUUID" -> \
"4e9450cd-eb9b-446a-a11c-e203d788bbc8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264724, 6732, 162, 3, 44, "Subsection", "ExpressionUUID" -> \
"660f0830-2f00-4275-bb11-14eab64b6b7c"],
Cell[264889, 6737, 2718, 69, 243, "Code", "ExpressionUUID" -> \
"59a8d735-2470-44e9-ba0e-d6982153d348"],
Cell[267610, 6808, 1135, 28, 110, "Code", "ExpressionUUID" -> \
"5d4c001c-b0c4-4633-8d29-c27a7610bffc"],
Cell[268748, 6838, 12162, 284, 642, "Code", "ExpressionUUID" -> \
"f138658a-fc7e-4cdc-b773-e71b762048ac"],
Cell[280913, 7124, 6695, 145, 452, "Code", "ExpressionUUID" -> \
"7045785d-c581-4465-b810-37fe3bb24b48"],
Cell[287611, 7271, 6421, 132, 452, "Code", "ExpressionUUID" -> \
"1e66dad7-da80-4c14-b236-375972b32f7a"],
Cell[294035, 7405, 2315, 45, 167, "Code", "ExpressionUUID" -> \
"a99ab7c0-da55-47fe-b05c-6e96351052f3"],
Cell[296353, 7452, 541, 14, 91, "Code", "ExpressionUUID" -> \
"314c9df2-2694-4690-a094-8c8cf4f029b9"],
Cell[296897, 7468, 905, 22, 91, "Code", "ExpressionUUID" -> \
"e9103ab3-cfb3-4350-b36b-42ad2a816841"],
Cell[297805, 7492, 2037, 43, 129, "Code", "ExpressionUUID" -> \
"f7eda724-26e3-4835-943f-21e13692c6f5"],
Cell[299845, 7537, 2251, 54, 243, "Code", "ExpressionUUID" -> \
"f50b2ac1-17e8-41d6-a90e-22bfeeb8634b"],
Cell[302099, 7593, 1666, 42, 129, "Code", "ExpressionUUID" -> \
"a1b50898-fbfe-4e1b-8a83-829fc18a1d1e"],
Cell[303768, 7637, 1385, 35, 129, "Code", "ExpressionUUID" -> \
"95c4ca61-0d65-49d4-a60b-68f547951924"],
Cell[305156, 7674, 6330, 151, 509, "Code", "ExpressionUUID" -> \
"bba3bc68-ddba-4ba7-8165-cd7a6d017ea4"],
Cell[311489, 7827, 6465, 156, 547, "Code", "ExpressionUUID" -> \
"fb1f965d-13c7-4fc2-8ce9-0d12827de335"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318003, 7989, 253, 5, 65, "Chapter", "ExpressionUUID" -> \
"bdfed6ed-eece-427d-b114-abbe651b9fdf"],
Cell[318259, 7996, 8492, 217, 813, "Code", "ExpressionUUID" -> \
"6f068243-ab6c-4ae8-8422-9dd581346746"],
Cell[326754, 8215, 1949, 48, 148, "Code", "ExpressionUUID" -> \
"36795600-10a3-41c2-baa0-a8ad3c35df81"],
Cell[328706, 8265, 1090, 26, 129, "Code", "ExpressionUUID" -> \
"ee046be3-424e-421d-80ab-d5997b57cbbd"],
Cell[329799, 8293, 524, 14, 91, "Code", "ExpressionUUID" -> \
"22350fa9-ab2a-45e2-bc15-f75d0329de44"],
Cell[330326, 8309, 2261, 59, 300, "Code", "ExpressionUUID" -> \
"44b9070a-d1ef-4743-a5af-4728e88850bf"],
Cell[CellGroupData[{
Cell[332612, 8372, 265, 5, 44, "Subsection", "ExpressionUUID" -> \
"cbdf426b-cbf2-42c8-9714-c7d8b22e2292"],
Cell[CellGroupData[{
Cell[332902, 8381, 332, 6, 35, "Subsubsection", "ExpressionUUID" -> \
"216117de-9d0f-42d0-9fc6-de44d6731a46"],
Cell[333237, 8389, 44201, 1017, 4393, "Code", "ExpressionUUID" -> \
"c3bbe8bb-da77-419e-8589-7939ed8967b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377475, 9411, 338, 6, 35, "Subsubsection", "ExpressionUUID" -> \
"5e2432fb-d89a-45ff-b8d3-14b384fb4859"],
Cell[377816, 9419, 1272, 32, 110, "Code", "ExpressionUUID" -> \
"7f21d5d1-c62a-4acb-be08-373b15db4123"],
Cell[379091, 9453, 1096, 24, 167, "Code", "ExpressionUUID" -> \
"dbe2a598-67de-4cc4-a4a5-e76254a223ab"],
Cell[380190, 9479, 3298, 69, 186, "Code", "ExpressionUUID" -> \
"57283437-09bc-483c-a075-ca1a2a3b839f"],
Cell[383491, 9550, 6767, 139, 395, "Code", "ExpressionUUID" -> \
"e8c1045c-f6de-46e6-9c42-344c91a07928"],
Cell[390261, 9691, 568, 13, 72, "Code", "ExpressionUUID" -> \
"3faa7a0c-1db0-4315-ae4b-6d0e5ed38bc9"],
Cell[390832, 9706, 3979, 91, 357, "Code", "ExpressionUUID" -> \
"a3c50316-e112-48d4-acef-cb50abfb6fc1"],
Cell[394814, 9799, 8809, 189, 414, "Code", "ExpressionUUID" -> \
"1191499b-31d1-475c-b4b5-78ed3e8275b9"],
Cell[403626, 9990, 1417, 34, 186, "Code", "ExpressionUUID" -> \
"111cc4d4-fc15-4ed8-a7e2-9c44c67aec32"],
Cell[405046, 10026, 2310, 55, 224, "Code", "ExpressionUUID" -> \
"7115d8ef-5023-49e4-8c52-ab50a855751f"],
Cell[407359, 10083, 1678, 39, 205, "Code", "ExpressionUUID" -> \
"e4c81b82-bb56-4d70-87ac-a9acba6c944b"],
Cell[409040, 10124, 11732, 213, 661, "Code", "ExpressionUUID" -> \
"763f6e58-7550-4bf1-a925-b36277c8d3d8"],
Cell[420775, 10339, 3451, 67, 224, "Code", "ExpressionUUID" -> \
"ca03553d-bdee-49f1-9fb5-367beca52d7a"],
Cell[424229, 10408, 1697, 45, 167, "Code", "ExpressionUUID" -> \
"6c0acb1d-540a-4e92-9a8b-5a69f648326f"],
Cell[425929, 10455, 2992, 69, 205, "Code", "ExpressionUUID" -> \
"751562cd-0008-4822-bef9-6cf23706ad3b"],
Cell[428924, 10526, 1409, 31, 110, "Code", "ExpressionUUID" -> \
"fc232bcb-a766-44c7-826f-241cb9f59bf8"],
Cell[430336, 10559, 8143, 185, 756, "Code", "ExpressionUUID" -> \
"f0cd8aea-f276-45c1-b560-eb7a4d5b7087"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[438528, 10750, 180, 4, 64, "Section", "ExpressionUUID" -> \
"0264b4e3-1589-4937-9483-8291a410bfde"],
Cell[438711, 10756, 6820, 155, 357, "Code", "ExpressionUUID" -> \
"676c8dbd-35ff-4b97-989a-d2786c1c59f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[445568, 10916, 321, 6, 50, "Section", "ExpressionUUID" -> \
"7ce63470-582a-47be-b51a-9f0ce14d73a9"],
Cell[445892, 10924, 280, 5, 30, "Text", "ExpressionUUID" -> \
"5aedfaaf-fbcf-41fc-ad1d-4c61c93660df"],
Cell[446175, 10931, 2796, 64, 167, "Code", "ExpressionUUID" -> \
"8e5b6602-c11c-4713-8722-98ac1c631e15"]
}, Closed]],
Cell[CellGroupData[{
Cell[449008, 11000, 191, 4, 50, "Section", "ExpressionUUID" -> \
"c7495b8f-d490-4d63-b4cf-3314016c0c44"],
Cell[449202, 11006, 2022, 36, 91, "Code", "ExpressionUUID" -> \
"5591dfe1-9970-497c-972f-d82f0ebde6b8"],
Cell[451227, 11044, 2423, 46, 91, "Code", "ExpressionUUID" -> \
"68e30826-02c9-4e2a-a20f-23338de90185"],
Cell[453653, 11092, 8126, 186, 661, "Code", "ExpressionUUID" -> \
"8ed18997-a3bd-41f1-ae4b-34fcf6bedc45"],
Cell[461782, 11280, 252, 8, 72, "Code", "ExpressionUUID" -> \
"eb5930c8-c3e8-459d-8ae5-2b0cade6ed04"],
Cell[462037, 11290, 1265, 33, 75, "Input", "ExpressionUUID" -> \
"a703bf57-9996-4536-acca-a98d3ac3ad14"],
Cell[CellGroupData[{
Cell[463327, 11327, 438, 10, 32, "Input", "ExpressionUUID" -> \
"cf67c340-b355-43e2-83c5-2a0c17158d08"],
Cell[463768, 11339, 9837, 193, 92, "Output", "ExpressionUUID" -> \
"fa7ba468-b655-4c2d-89e6-9dbf33fbca3d"]
}, Open  ]],
Cell[473620, 11535, 3750, 104, 285, "Input", "ExpressionUUID" -> \
"e8de92dc-eece-4972-96ed-462ffd8179c5"],
Cell[CellGroupData[{
Cell[477395, 11643, 560, 12, 32, "Input", "ExpressionUUID" -> \
"ff59734b-9a80-4876-873f-9695d516ed05"],
Cell[477958, 11657, 3212, 56, 146, "Output", "ExpressionUUID" -> \
"de64f9f7-9ca4-4bb4-8b0c-e091b22bd194"]
}, Open  ]],
Cell[481185, 11716, 822, 26, 76, "Input", "ExpressionUUID" -> \
"edfe03fc-8542-43b0-9451-99573aac7bf6"]
}, Open  ]]
}, Open  ]]
}
]
*)

