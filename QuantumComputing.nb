(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    368378,       9504]
NotebookOptionsPosition[    365527,       9427]
NotebookOutlinePosition[    365884,       9443]
CellTagsIndexPosition[    365841,       9440]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Computing Package", "Title",
 CellChangeTimes->{{3.7233570644639378`*^9, 
  3.723357069374892*^9}},ExpressionUUID->"61756643-9e6b-4e90-94ff-\
9fc5ef37ee0e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "QuantumComputing`", "\n", "   ", "Jacob", " ", "Austin", " ", "Marks", 
   "\[IndentingNewLine]", "  ", "Wolfram", " ", "Research"}], "\n", 
  "*)"}]], "Input",
 CellDingbat->None,
 CellChangeTimes->{{3.7112431771618967`*^9, 3.7112432416543627`*^9}, {
  3.7130599180603523`*^9, 3.713059921827227*^9}, {3.7225624601091146`*^9, 
  3.722562461838049*^9}, {3.722731644405295*^9, 
  3.722731655570418*^9}},ExpressionUUID->"d5358de6-0354-4ed0-8004-\
ee6a171eb5f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<QuantumComputing`\>\"", "]"}], 
  ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71119344544118*^9, 3.711193445442876*^9}, {
   3.7111935758969088`*^9, 3.71119358197393*^9}, {3.711193724272962*^9, 
   3.7111937837615433`*^9}, {3.7111942324929*^9, 3.711194232873934*^9}, {
   3.711194264277464*^9, 3.7111942960690937`*^9}, {3.7111945326747704`*^9, 
   3.711194533863912*^9}, {3.711194794402788*^9, 3.7111948241755123`*^9}, {
   3.7111948732002068`*^9, 3.7111948856569643`*^9}, {3.711195117865428*^9, 
   3.711195143663855*^9}, {3.711198852783217*^9, 3.711198863228898*^9}, {
   3.711199057616405*^9, 3.711199057966117*^9}, {3.7111995656484337`*^9, 
   3.7111995693923903`*^9}, 3.711199611375822*^9, {3.711199647287364*^9, 
   3.7111996545556297`*^9}, {3.7112001136732616`*^9, 3.71120011475924*^9}, {
   3.711201105731988*^9, 3.7112011064408216`*^9}, {3.711201177545103*^9, 
   3.711201177901832*^9}, {3.711203077872945*^9, 3.7112030931669607`*^9}, {
   3.711214119707698*^9, 3.7112141582915497`*^9}, 3.7112431596633873`*^9, {
   3.711244256821862*^9, 3.711244260995764*^9}, {3.711285497008274*^9, 
   3.711285501382182*^9}, {3.711397212435175*^9, 3.711397216331284*^9}, {
   3.7113976134407473`*^9, 3.711397614779649*^9}, {3.7114154788441343`*^9, 
   3.711415494207264*^9}, {3.711544664674857*^9, 3.71154469027597*^9}, {
   3.711544733314969*^9, 3.711544739073782*^9}, {3.711544820576893*^9, 
   3.711544842213991*^9}, {3.711544888880245*^9, 3.711544935842847*^9}, {
   3.711545048913875*^9, 3.711545094598609*^9}, {3.71154517082306*^9, 
   3.711545208731883*^9}, {3.71154525542529*^9, 3.711545403283863*^9}, 
   3.711545496270652*^9, {3.711545556569695*^9, 3.711545568336632*^9}, {
   3.711545658844892*^9, 3.7115457211922197`*^9}, {3.7115457632574167`*^9, 
   3.711545992155058*^9}, {3.711546175651061*^9, 3.711546198696273*^9}, {
   3.711546367395368*^9, 3.711546369166432*^9}, {3.711546643128674*^9, 
   3.711546682339615*^9}, {3.711546750311109*^9, 3.71154679181918*^9}, {
   3.7115470932716427`*^9, 3.711547192052308*^9}, {3.711547282701106*^9, 
   3.711547315384865*^9}, {3.711547407555133*^9, 3.71154744444681*^9}, {
   3.711547483649725*^9, 3.711547529839658*^9}, {3.711547592395959*^9, 
   3.711547604304677*^9}, {3.711547639210986*^9, 3.7115477098842373`*^9}, {
   3.711547746490939*^9, 3.711547894602139*^9}, {3.711547953360056*^9, 
   3.7115479716167107`*^9}, {3.7115480384668493`*^9, 3.711548040339731*^9}, {
   3.7115480830280247`*^9, 3.711548114492032*^9}, {3.7115485086740303`*^9, 
   3.711548533187901*^9}, {3.711548596686845*^9, 3.7115486596865473`*^9}, {
   3.711548695865452*^9, 3.711548767854805*^9}, {3.711548810828059*^9, 
   3.71154881645711*^9}, {3.711549100277008*^9, 3.7115491032830257`*^9}, {
   3.711549453420886*^9, 3.711549456409721*^9}, {3.7225617088386307`*^9, 
   3.722561711696302*^9}, {3.722731647626582*^9, 
   3.722731652714527*^9}},ExpressionUUID->"2d9a8285-9b0f-4786-93ad-\
1f4c691e7c1b"],

Cell[CellGroupData[{

Cell["Usage Messages", "Section",
 CellChangeTimes->{{3.713453035956633*^9, 
  3.713453039115574*^9}},ExpressionUUID->"21d0da09-e6ef-4b62-8931-\
d08edfb57ee0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumFiniteDimensionalState", "::", "usage"}], " ", "=", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumFiniteDimensionalState[{\!\(\*SubscriptBox[
StyleBox[\"spec\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"spec\", \"TI\"], \"2\"]\), \!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\),\!\(\*
StyleBox[\(\\\ \*
StyleBox[\" \", \"TR\"]\)]\)\!\(\*SubscriptBox[
StyleBox[\"spec\", \"TI\"], \"n\"]\)}] yields the finite dimensional \>\"", "<>",
      "\n", "\t", 
     "\"\<quantum state resulting from taking the tensor product of the \
states specified by \!\(\*SubscriptBox[
StyleBox[\"spec\", \"TI\"], \"i\"]\).\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumFiniteDimensionalStateQ", "::", "usage"}], " ", "=", " ", 
    "\n", "\t", 
    RowBox[{"\"\<QuantumFiniteDimensionalStateQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if the head of \!\(\*
StyleBox[\"expr\", \"TI\"]\) is \>\"", "<>", "\n", "\t", 
     "\"\<QuantumFiniteDimensionalState, and False otherwise.\\n\>\""}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumProduct", "::", "usage"}], " ", "=", "\n", "\t", 
    RowBox[{"\"\<QuantumProduct[{\!\(\*SubscriptBox[
StyleBox[\"state\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"state\", \"TI\"], \"2\"]\), \!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\), \!\(\*
StyleBox[\" \", \"TR\"]\)\!\(\*SubscriptBox[
StyleBox[\"state\", \"TI\"], \"n\"]\)}] yields the finite dimensional \>\"", "<>",
      "\n", "\t", 
     "\"\<quantum state resulting from taking the tensor product of \
\!\(\*SubscriptBox[
StyleBox[\"states\", \"TI\"], \"i\"]\).\\n\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMixture", "::", "usage"}], " ", "=", "\n", "\t", 
    RowBox[{"\"\<QuantumProduct[\!\(\*
StyleBox[\"states\", \"TI\"]\) -> \!\(\*
StyleBox[\"ws\", \"TI\"]\)] yields the finite dimensional \>\"", "<>", "\n", 
     "\t", "\"\<quantum state generated from the statistical ensemble \!\(\*
StyleBox[\"states\", \"TI\"]\) weighted according to \!\(\*
StyleBox[\"ws\", \"TI\"]\).\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumPartialTr[\!\(\*
StyleBox[\"qstate\", \"TI\"]\), \!\(\*
StyleBox[\"qobs\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\"  \", \"TI\"]\)yields the quantum state resulting from \>\"", "<>",
      "\n", "\t", "\"\<tracing out quantum objects \!\(\*
StyleBox[\"qobs\", \"TI\"]\) from quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\)\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMatrixOperation", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumMatrixOperation[\!\(\*
StyleBox[\"spec\", \"TI\"]\)] yields the quantum matrix \>\"", "<>", "\n", 
     "\t", "\"\<operation with specification \!\(\*
StyleBox[\"spec\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\\n\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMatrixOperationQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumMatrixOperationQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if the head of \!\(\*
StyleBox[\"expr\", \"TI\"]\) is \>\"", "<>", "\n", "\t", 
     "\"\<QuantumMatrixOperation, and False otherwise.\\n\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumBlochPlot", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumBlochPlot[\!\(\*
StyleBox[\"qstate\", \"TI\"]\)] plots the Bloch vector corresponding to \>\"",
      "<>", "\n", "\t", "\"\<single qubit state \!\(\*
StyleBox[\"qstate\", \"TI\"]\) on a Bloch Sphere.\\n\>\"", "<>", "\n", "\t", 
     "\n", "\t", "\"\<QuantumBlochPlot[{\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\),\!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\)}] plots the Bloch vectors for \>\"", "<>",
      "\n", "\t", "\"\<single qubit states \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) all on a single Bloch Sphere.\\n\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumStateDistance[\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)yields the \>\"", "<>", "\n", "\t", 
     "\"\<distance between quantum states \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\).\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumEntangledObjectsQ[\!\(\*
StyleBox[\"qstate\", \"TI\"]\), {\!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)}\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)yields true if pure \>\"", "<>", "\n", "\t", 
     "\"\<quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\) is entangled across the bipartition \
{\!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)}\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuit", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumCircuit[\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"1\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"2\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"\[Ellipsis]\", \"TI\"]\)}] yields the quantum circuit described by \
\>\"", "<>", "\n", "\t", "\"\<the ordered sequence of operations \!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"1\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"2\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"\[Ellipsis]\", \"TI\"]\) \\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumCircuit[\!\(\*
StyleBox[\"bf\", \"TI\"]\)] yields the reversible quantum circuit that \>\"", 
     "<>", "\n", "\t", 
     "\"\< generalizes the classical Boolean function bf from bits to qubits.\
\\n\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMeasurement", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    
    RowBox[{"\"\<QuantumMeasurement[\!\(\*
StyleBox[\"obs\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\"  \", \"TI\"]\)yields the measurement operator whose eigenstates \
are given by projections onto \>\"", "<>", "\n", "\t", 
     "\"\<the spectrum of observable operator \!\(\*
StyleBox[\"obs\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumMeasurement[\!\(\*
StyleBox[\"povm\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\"  \", \"TI\"]\)yields the positive operator valued measurement \
\!\(\*
StyleBox[\"povm\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMeasurementDistribution", "::", "usage"}], " ", "=", " ", 
    "\n", "\t", 
    RowBox[{"\"\<QuantumMeasurementDistribution[\!\(\*
StyleBox[\"qstate\", \"TI\"]\), \!\(\*
StyleBox[\"qmeas\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"->\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"ord\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\"  \", \"TI\"]\)yields the symbolic distribution of eigenvalues \
resulting from \>\"", "<>", "\n", "\t", "\"\<the measurement of \!\(\*
StyleBox[\"qstate\", \"TI\"]\) according to QuantumMeasurement measurement \
operator \!\(\*
StyleBox[\"qmeas\", \"TI\"]\) applied with order \!\(\*
StyleBox[\"ord\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEvaluate", "::", "usage"}], " ", "=", " ", "\n", "\t", 
   RowBox[{"\"\<QuantumEvaluate[\!\(\*
StyleBox[\"qop\", \"TI\"]\) -> \!\(\*
StyleBox[\"order\", \"TI\"]\), \!\(\*
StyleBox[\"qstate\", \"TI\"]\)] evaluates the action of quantum matrix \
operation \>\"", "<>", "\n", "\t", "\"\<\!\(\*
StyleBox[\"qop\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)on quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\) where \!\(\*
StyleBox[\"order\", \"TI\"]\) specifies which parts of \!\(\*
StyleBox[\"qstate\", \"TI\"]\) are acted upon.\\n\>\"", "<>", "\n", "\t", 
    "\n", "\t", "\"\<QuantumEvaluate[\!\(\*
StyleBox[\"qmeas\", \"TI\"]\) -> \!\(\*
StyleBox[\"order\", \"TI\"]\), \!\(\*
StyleBox[\"qstate\", \"TI\"]\)] evaluates the action of quantum measurement \
\>\"", "<>", "\n", "\t", "\"\<\!\(\*
StyleBox[\"qmeas\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)on quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\) where \!\(\*
StyleBox[\"order\", \"TI\"]\) specifies which parts of \!\(\*
StyleBox[\"qstate\", \"TI\"]\) are acted upon.\\n\>\"", "<>", "\n", "\t", 
    "\n", "\t", "\"\<QuantumEvaluate[\!\(\*
StyleBox[\"qcirc\", \"TI\"]\) -> \!\(\*
StyleBox[\"order\", \"TI\"]\), \!\(\*
StyleBox[\"qstate\", \"TI\"]\)] evaluates quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)passing through quantum circuit \>\"", "<>", "\n", 
    "\t", "\"\<\!\(\*
StyleBox[\"qcirc\", \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\) where \!\(\*
StyleBox[\"order\", \"TI\"]\) specifies which parts of \!\(\*
StyleBox[\"qstate\", \"TI\"]\) are acted upon.\\n\>\""}]}], ";"}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{{3.723392527846676*^9, 3.723392875686284*^9}, {
   3.7233943007807837`*^9, 3.723394336128017*^9}, {3.7233943892056293`*^9, 
   3.723394715592004*^9}, {3.723394759411268*^9, 3.7233947781276703`*^9}, {
   3.723394825106251*^9, 3.723395011834484*^9}, {3.723395065015622*^9, 
   3.723395215379421*^9}, {3.7233952733274384`*^9, 3.723395347741436*^9}, {
   3.723395386864015*^9, 3.7233954577407913`*^9}, {3.7233955066850977`*^9, 
   3.723395530730135*^9}, {3.723395572162043*^9, 3.723395758482688*^9}, {
   3.7233958061952667`*^9, 3.723395936094789*^9}, {3.723395974987628*^9, 
   3.723396055527536*^9}, {3.7233960876962852`*^9, 3.7233961948379498`*^9}, {
   3.7234310984183702`*^9, 3.723431132821906*^9}, {3.726678965874427*^9, 
   3.7266790096580677`*^9}, {3.72667907114536*^9, 3.7266791346014214`*^9}, {
   3.7266895860084667`*^9, 3.7266895910996447`*^9}, {3.72740195877359*^9, 
   3.727401958827394*^9}, {3.727402161332963*^9, 3.727402171823909*^9}, {
   3.7274022148764763`*^9, 3.727402260913176*^9}, {3.7274023331366034`*^9, 
   3.727402379317623*^9}, {3.7274038760874357`*^9, 3.727403914565297*^9}, {
   3.7274039791776733`*^9, 3.727403997577065*^9}, {3.727404037626153*^9, 
   3.727404037658723*^9}, {3.734189320306734*^9, 3.734189391832138*^9}, {
   3.734648248536165*^9, 3.7346483742656*^9}, {3.734648689518475*^9, 
   3.7346489403409853`*^9}, {3.734648973333006*^9, 3.7346489782788982`*^9}, {
   3.734649101156546*^9, 3.7346491737271357`*^9}, {3.7346492150802794`*^9, 
   3.7346493201446743`*^9}, {3.734649350946262*^9, 3.734649453861643*^9}, {
   3.7346494906086607`*^9, 3.73464960750983*^9}, {3.734649852761732*^9, 
   3.7346499731038103`*^9}, {3.734650065891962*^9, 3.7346501561034613`*^9}, {
   3.734708710764122*^9, 3.734708738669671*^9}, {3.734709809616105*^9, 
   3.734710061774077*^9}, {3.73587632656422*^9, 3.735876343849185*^9}, {
   3.736047050300273*^9, 3.736047063969392*^9}, {3.7360523305811462`*^9, 
   3.736052330770941*^9}, {3.7360538023681793`*^9, 3.736053856366528*^9}, 
   3.7360551668027887`*^9, {3.7360552428577337`*^9, 3.7360552433175087`*^9}, {
   3.736055924625596*^9, 
   3.736055926309429*^9}},ExpressionUUID->"5d741b42-3406-4e72-a817-\
1ec1ca77fd83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions", "Chapter",
 CellChangeTimes->{{3.7134530599596777`*^9, 
  3.713453065631654*^9}},ExpressionUUID->"b8dc6272-ed30-4015-85f6-\
7e0e2a336dd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711198901838376*^9, 3.711198907164904*^9}, {
  3.711199901118759*^9, 3.7111999051631403`*^9}, {3.711552598218913*^9, 
  3.7115525982261353`*^9}},ExpressionUUID->"a39957b6-fed1-445d-9d9b-\
1d4189e4ab58"],

Cell[CellGroupData[{

Cell["QuantumFiniteDimensionalState", "Section",
 CellChangeTimes->{{3.7337676918020697`*^9, 
  3.733767698120964*^9}},ExpressionUUID->"c43b76d3-6a34-475c-9afd-\
6d6b01c75f0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"singleItemListQ", ",", " ", "multiItemListQ"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleItemListQ", "[", "lst_List", "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "lst", "]"}], " ", "===", " ", "1"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleItemListQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "False"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiItemListQ", "[", "lst_List", "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "lst", "]"}], " ", "===", " ", "1"}], ",", " ", 
     "False", ",", " ", "True"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"multiItemListQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "False"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "ruleQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ruleQ", "[", "expr___", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", "Rule"}], ",", 
      " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateArrayQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArrayQ", "[", "state_List", "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Depth", "[", "state", "]"}], " ", "===", " ", "2"}], " ", "&&",
       " ", "\n", "\t\t", 
      RowBox[{"!", 
       RowBox[{"StringQ", "[", 
        RowBox[{"state", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ",", "\n", "\t\t", "True",
      ",", "\n", "\t\t", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArrayQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "basisListQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisListQ", "[", "arr_List", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"AllTrue", "[", 
    RowBox[{"arr", ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"#", " ", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
       RowBox[{"IntegerQ", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basisListQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n", "\n", "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "numQudits", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Length", "[", "bases", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<QuantumRegister\>\"", ",", " ", "n_Integer", ",", " ", 
       "k_Integer"}], "}"}], ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "n"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<Plus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<Minus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<Left\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<Right\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "1"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<PsiPlus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "2"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<PhiPlus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "2"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<PsiMinus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "2"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{"\"\<PhiMinus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "2"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ", "2"}], 
    "]"}], " ", ":=", " ", "n"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<W\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ", "2"}], 
    "]"}], " ", ":=", " ", "n"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RandomPure\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "n"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"numQudits", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<PureUniformSuperposition\>\"", ",", " ", "n_Integer"}], 
      "}"}], ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", "n"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"numQudits", "[", 
     RowBox[{
      RowBox[{"arr_", "?", "stateArrayQ"}], ",", " ", "d_Integer"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"d", ",", " ", 
      RowBox[{"Length", "[", "arr", "]"}]}], "]"}]}], ";"}], "\n", "\n", "\n",
   "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateFormat", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<BasisState\>\"", ",", " ", 
      RowBox[{"n_", "?", "Integer"}]}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<BasisState\>\"", ",", " ", 
     RowBox[{"{", "n", "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<QuantumRegister\>\"", ",", " ", "n_Integer"}], "}"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<QuantumRegister\>\"", ",", " ", "n", ",", " ", "0"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"\"\<+\>\"", "|", "\"\<plus\>\"", "|", "\"\<PLUS\>\""}], "]"}], 
   " ", ":=", " ", "\"\<Plus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"\"\<-\>\"", "|", "\"\<minus\>\"", "|", "\"\<MINUS\>\""}], "]"}], 
   " ", ":=", " ", "\"\<Minus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<l\>\"", "|", "\"\<L\>\"", "|", "\"\<left\>\"", "|", "\"\<LEFT\>\""}],
     "]"}], " ", ":=", " ", "\"\<Left\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<r\>\"", "|", "\"\<R\>\"", "|", "\"\<right\>\"", "|", 
     "\"\<RIGHT\>\""}], "]"}], " ", ":=", " ", "\"\<Right\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<\[Psi]+\>\"", "|", "\"\<\[CapitalPsi]+\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(+\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(+\)]\)\>\"", "|", 
     "\"\<psiplus\>\"", "|", "\"\<PSIPLUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PsiPlus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<\[Phi]+\>\"", "|", "\"\<\[CapitalPhi]+\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(+\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPhi]\), \(+\)]\)\>\"", "|", 
     "\"\<phiplus\>\"", "|", "\"\<PHIPLUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PhiPlus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<\[Psi]-\>\"", "|", "\"\<\[CapitalPsi]-\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(-\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(-\)]\)\>\"", "|", 
     "\"\<psiminus\>\"", "|", "\"\<PSIMINUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PsiMinus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
    "\"\<\[Phi]-\>\"", "|", "\"\<\[CapitalPhi]-\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(-\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPhi]\), \(-\)]\)\>\"", "|", 
     "\"\<phiminus\>\"", "|", "\"\<PHIMINUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PhiMinus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"\"\<Ghz\>\"", "|", "\"\<ghz\>\"", "|", "\"\<GHZ\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", "\"\<PureUniformSuperposition\>\"", "]"}], " ",
    ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<PureUniformSuperposition\>\"", ",", " ", "1"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Ghz\>\"", ",", " ", "n_Integer"}], "}"}], "|", 
     RowBox[{"{", 
      RowBox[{"\"\<ghz\>\"", ",", " ", "n_Integer"}], "}"}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{"\"\<w\>\"", "|", "\"\<W\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<W\>\"", ",", " ", "3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateFormat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<w\>\"", ",", " ", "n_Integer"}], "}"}], "|", 
     RowBox[{"{", 
      RowBox[{"\"\<W\>\"", ",", " ", "n_Integer"}], "}"}]}], "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{"\"\<W\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateFormat", "[", "expr___", "]"}], " ", ":=", " ", "expr"}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateSpecFormat", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateSpecFormat", "[", 
     RowBox[{"spec_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", " ", "s"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"stateFormat", "[", "spec", "]"}]}], ";", "\n", "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"numQudits", "[", 
         RowBox[{"s", ",", " ", "dim"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "s"}], "}"}]}]}], "\n", "\t", "]"}]}], ";"}], 
  "\n", "\n", "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "validStateSpecQHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<BasisState\>\"", ",", " ", 
      RowBox[{"bases_", "?", "basisListQ"}]}], "}"}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<QuantumRegister\>\"", ",", " ", "n_Integer", ",", " ", 
      "k_Integer"}], "}"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<QuantumRegister\>\"", ",", " ", "n_Integer"}], "}"}], "]"}],
    " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<Plus\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<Minus\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<Left\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<Right\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<PsiPlus\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<PhiPlus\>\"", "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<PsiMinus\>\"", "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", "\"\<PhiMinus\>\"", "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<W\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RandomPure\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ",
    ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<PureUniformSuperposition\>\"", ",", " ", "n_Integer"}], 
     "}"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validStateSpecQHelper", "[", 
    RowBox[{"arr_", "?", "stateArrayQ"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validStateSpecQHelper", "[", "expr___", "]"}], " ", ":=", " ", 
    "False"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "validStateSpecQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validStateSpecQ", "[", "spec_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"validStateSpecQHelper", "[", "\n", "\t\t", 
     RowBox[{"stateFormat", "[", "spec", "]"}], "]"}]}], ";"}], "\n", "\n", 
  "\n", "\n", "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "basisState", ",", " ", "plus", ",", " ", "minus", ",", " ", "right", ",", 
    " ", "left"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "phiMinus", ",", " ", "phiPlus", ",", " ", "psiMinus", ",", " ", 
    "psiPlus"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ghzState", ",", " ", "wState"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"randPure", ",", " ", "pureSuperpos"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"plus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"minus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"right", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"left", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"psiMinus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"psiPlus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phiMinus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"phiPlus", " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1", ",", "1", ",", "0"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basisState", "[", 
     RowBox[{"bases_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"pos", " ", "=", " ", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{"bases", ",", " ", "d"}], "]"}], " ", "+", " ", "1"}]}], 
        ",", "\n", "\t", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", " ", "@", " ", "bases"}]}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pos", "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"d", "^", "n"}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ghzState", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "1", "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", "^", "n"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"2", "^", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wState", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", "i_", "}"}], "/;", 
       RowBox[{"IntegerQ", "[", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "\[Rule]", " ", "1"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"Power", "[", 
       RowBox[{"2", ",", " ", "n"}], "]"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randPure", "[", 
    RowBox[{"n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   RowBox[{"RandomComplex", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], " ", "-", " ", "\[ImaginaryI]"}], ",", " ", 
       RowBox[{"1", " ", "+", " ", "\[ImaginaryI]"}]}], "}"}], ",", " ", 
     RowBox[{"d", "^", "n"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pureSuperpos", "[", 
    RowBox[{"n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", " ", 
     RowBox[{"d", "^", "n"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"quantumRegister", "[", 
     RowBox[{"num_", ",", " ", "n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"num", "+", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"d", "^", "n"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", "\n", 
  "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateVec", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVec", "[", 
     RowBox[{"n_", ",", " ", "state_", ",", " ", "dim_"}], "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"FullSimplify", " ", "@", " ", 
     RowBox[{"Normalize", " ", "@", " ", 
      RowBox[{"SparseArray", " ", "@", " ", 
       RowBox[{"stateVecHelper", "[", 
        RowBox[{"state", ",", " ", "n", ",", " ", "dim"}], "]"}]}]}]}]}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateVecHelper", "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Computational", " ", "Basis", " ", "States"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], ",", " ", 
      "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"basisState", "[", 
     RowBox[{"bases", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Quantum", " ", "Registers"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<QuantumRegister\>\"", ",", " ", "n_Integer", ",", " ", 
        "k_Integer"}], "}"}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"quantumRegister", "[", 
     RowBox[{"k", ",", " ", "n", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"+", 
       RowBox[{"/", "-"}]}], "/", "L"}], "/", "R"}], " ", "Basis", " ", 
    "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<Plus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "plus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<Minus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "minus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<Left\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "left"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{"\"\<Right\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "right"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Bell", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<PsiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "psiPlus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<PsiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "psiMinus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{"\"\<PhiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "phiPlus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{"\"\<PhiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "phiMinus"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"GHZ", "/", "W"}], " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVecHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ", 
     "n_Integer", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"ghzState", "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<W\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ", 
      "n_Integer", ",", " ", "2"}], "]"}], " ", ":=", " ", 
    RowBox[{"wState", "[", "n", "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Random", " ", "Pure", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<RandomPure\>\"", ",", " ", "n_Integer"}], "}"}], ",", " ",
       "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"randPure", "[", 
     RowBox[{"n", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Pure", " ", "Uniform", " ", "Superposition"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<PureUniformSuperposition\>\"", ",", " ", "n_Integer"}], 
       "}"}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"pureSuperpos", "[", 
     RowBox[{"n", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"States", " ", "from", " ", "Input", " ", "Arrays"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVecHelper", "[", 
     RowBox[{
      RowBox[{"arr_", "?", "stateArrayQ"}], ",", " ", "n_Integer", ",", " ", 
      "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"FullSimplify", " ", "@", " ", 
     RowBox[{"Normalize", " ", "@", " ", "arr"}]}]}], ";"}], "\n", "\n", "\n",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"vecToMat", ",", " ", "matToVecHelper", ",", " ", "matToVec"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecToMat", "[", "vec_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"SparseArray", "[", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"{", "vec", "}"}], "]"}], "]"}], ".", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", "vec", "}"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"matToVecHelper", "[", 
    RowBox[{"row_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"row", "[", 
         RowBox[{"[", "pos", "]"}], "]"}], " ", "===", "  ", "0"}], ")"}]}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"row", ",", " ", "pos"}], "}"}], ",", " ", "False"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"matToVec", "[", "mat_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"row", ",", " ", "pos"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"row", ",", " ", "pos"}], "}"}], " ", "=", " ", "\n", "\t\t", 
        RowBox[{"SelectFirst", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"matToVecHelper", "[", 
              RowBox[{"#1", ",", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", " ", 
            "mat"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{"False", "===", "#"}], ")"}]}], "&"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"row", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"row", "[", 
          RowBox[{"[", "pos", "]"}], "]"}], "]"}]}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "l1Normalize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"l1Normalize", "[", "vals_List", "]"}], " ", ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "/", 
        RowBox[{"(", 
         RowBox[{"Total", " ", "@", " ", "vals"}], ")"}]}], "&"}], ",", " ", 
      "vals"}], "]"}]}], ";"}], "\n", "\n", "\n", "\n", "\n", "\n", "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Quantum", " ", "State", " ", "Queries"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "QuantumFiniteDimensionalStateQ", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumFiniteDimensionalStateQ", "[", "s_", "]"}], " ", ":=", " ",
    "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "s", "]"}], " ", "===", " ", 
      "QuantumFiniteDimensionalState"}], ",", " ", "True", ",", " ", 
     "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumFiniteDimensionalStateQ", "[", "expr___", "]"}], " ", ":=",
     " ", "False"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "quantumFiniteDimensionalStateListQ", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"quantumFiniteDimensionalStateListQ", "[", "states_List", "]"}], 
   " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{"states", ",", " ", "QuantumFiniteDimensionalStateQ"}], "]"}], 
     ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"quantumFiniteDimensionalStateListQ", "[", "expr___", "]"}], " ", 
    ":=", " ", "False"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "explicitQuantumStateQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "explicitQuantumStateQ", "[", "state_QuantumFiniteDimensionalState", "]"}],
    " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AssociationQ", "[", 
      RowBox[{"state", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "True", ",", " ", 
     "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"explicitQuantumStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "explicitQuantumStateListQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"explicitQuantumStateListQ", "[", "states_List", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"quantumFiniteDimensionalStateListQ", "[", "states", "]"}], " ",
       "&&", "\n", "\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"states", ",", " ", "explicitQuantumStateQ"}], "]"}], " ", "&&",
       "\n", "\t", 
      RowBox[{"(", 
       RowBox[{"!", 
        RowBox[{
         RowBox[{"Length", "[", "states", "]"}], "===", "0"}]}], ")"}]}], 
     ")"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pureStateQ", ",", " ", "mixedStateQ"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pureStateQ", "[", "state_QuantumFiniteDimensionalState", "]"}], 
   " ", ":=", " ", "\n", "\t", 
   RowBox[{"Which", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"AssociationQ", "[", 
       RowBox[{"state", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "$Failed", ",", 
     "\n", "\t\t", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"state", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
       "\"\<StateVector\>\""}], "]"}], ",", " ", "True", ",", "\n", "\t\t", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mixedStateQ", "[", "state_QuantumFiniteDimensionalState", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"Which", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"AssociationQ", "[", 
        RowBox[{"state", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "$Failed", ",", 
      "\n", "\t\t", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"state", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
        "\"\<DensityMatrix\>\""}], "]"}], ",", " ", "True", ",", "\n", "\t\t",
       "True", ",", " ", "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "qubitStateQ", ",", " ", "singleQuditStateQ", ",", " ", 
    "singleQubitStateQ", ",", " ", "singleQubitStateListQ"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qubitStateQ", "[", 
    RowBox[{"state", ":", 
     RowBox[{
     "QuantumFiniteDimensionalState", "[", "assoc_Association", "]"}]}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"assoc", "[", "\"\<QuditDimension\>\"", "]"}], " ", "===", " ", 
      "2"}], ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditStateQ", "[", 
    RowBox[{"state", ":", 
     RowBox[{
     "QuantumFiniteDimensionalState", "[", "assoc_Association", "]"}]}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"assoc", "[", "\"\<NumberOfQudits\>\"", "]"}], " ", "===", " ", 
      "1"}], ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQubitStateQ", "[", 
    RowBox[{"state", ":", 
     RowBox[{
     "QuantumFiniteDimensionalState", "[", "assoc_Association", "]"}]}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{
    RowBox[{"qubitStateQ", "[", "state", "]"}], " ", "&&", " ", 
    RowBox[{"singleQuditStateQ", "[", "state", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQubitStateListQ", "[", "states_List", "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"quantumFiniteDimensionalStateListQ", "[", "states", "]"}], " ",
       "&&", " ", "\n", "\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"states", ",", " ", "singleQubitStateQ"}], "]"}]}], ")"}]}], 
   ";"}], "\n", "\n", 
  StyleBox["\n", "Code"], "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", 
  "\n", "\n", "\n", "\n", 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Extract", " ", "Properties", " ", "of", " ", "the", " ", "State"}], " ", 
    "*)"}], "Code"], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"getStateVector", ",", " ", "getDensityMatrix"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getStateVector", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}], ",", " ",
      "\n", "\t\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumFiniteDimensionalState", "::", "mixture"}], ",", 
         "qs"}], "]"}], ";", "$Failed"}], ")"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getDensityMatrix", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"mixedStateQ", "[", "qs", "]"}], ",", " ", 
      RowBox[{"qs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], "]"}], ",", 
      " ", "\n", "\t\t", 
      RowBox[{"vecToMat", "[", 
       RowBox[{"qs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}], 
       "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"getBasisLabels", ",", " ", "getBasisStates"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getBasisLabels", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\"\<NumberOfQudits\>\""}], "]"}], "]"}], "]"}], " ",
     "/.", " ", 
    RowBox[{"List", " ", "\[Rule]", " ", "Ket"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getBasisStates", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dim", ",", " ", "n", ",", " ", "kets"}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<NumberOfQudits\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"kets", " ", "=", " ", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", " ", 
            RowBox[{"dim", "-", "1"}]}], "]"}], ",", " ", "n"}], "]"}]}], ";",
        "\n", "\t", 
       RowBox[{"kets", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"ToString", ",", " ", "kets", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"kets", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"StringJoin", ",", " ", "kets"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Map", "[", 
        RowBox[{"Ket", ",", " ", "kets"}], "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"getVonNeumannEntropy", ",", " ", "getPurity"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getVonNeumannEntropy", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dm", ",", " ", "eigs", ",", " ", "entropy"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"qs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"eigs", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Eigenvalues", "[", "dm", "]"}], ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"entropy", " ", "=", " ", 
       RowBox[{"-", " ", 
        RowBox[{"Total", "@", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"2", ",", "#"}], "]"}]}], "&"}], ",", "eigs"}], 
          "]"}]}]}]}], ";", "\n", "\t", "entropy"}]}], "\n", "\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getPurity", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", "\n", "\t", "1", ",", 
      " ", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dm", " ", "=", " ", 
          RowBox[{"qs", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
         "}"}], ",", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Tr", "[", 
          RowBox[{"dm", ".", "dm"}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"blochPureSphericalCoords", ",", " ", "blochPureCartesianCoords"}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "blochMixedSphericalCoords", ",", " ", "blochMixedCartesianCoords"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"getBlochSphericalCoords", ",", " ", "getBlochCartesianCoords"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "u", ",", " ", "v", ",", " ", "w", ",", " ", "r", ",", " ", "\[Theta]", 
     ",", " ", "\[Phi]"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochPureSphericalCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "=", " ", 
         RowBox[{
          RowBox[{"qs", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"\[Beta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"qs", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "\n", "\t\t", "}"}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"Abs", " ", "@", " ", "\[Alpha]"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"Arg", "[", "\[Beta]", "]"}], " ", "-", " ", 
         RowBox[{"Arg", "[", "\[Alpha]", "]"}]}]}], "}"}]}], "\n", "\t\t", 
     "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochPureCartesianCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]", ",", " ", "u", ",", " ",
         "v", ",", " ", "w"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"blochPureSphericalCoords", "[", "qs", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"u", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"v", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochMixedCartesianCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dm", ",", " ", "u", ",", " ", "v", ",", " ", "w"}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"Normal", " ", "@", " ", 
         RowBox[{"qs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}]}], ";",
        "\n", "\t", 
       RowBox[{"u", " ", "=", " ", 
        RowBox[{"Re", " ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"dm", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ")"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"v", " ", "=", " ", 
        RowBox[{"Im", " ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"dm", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ")"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{
         RowBox[{"dm", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"dm", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochMixedSphericalCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]", ",", " ", "u", ",", " ",
         "v", ",", " ", "w"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}], " ", "=", " ", 
        RowBox[{"blochMixedCartesianCoords", "[", "qs", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
          RowBox[{"v", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
          RowBox[{"w", " ", "\[Equal]", " ", "0"}]}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], "]"}],
        ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Abs", ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"CoordinateTransformData", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
            "\"\<Cartesian\>\"", " ", "\[Rule]", " ", "\"\<Spherical\>\""}], 
            ",", " ", "\n", "\t\t\t\t\t", "\"\<Mapping\>\"", ",", " ", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}], "\n", 
           "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getBlochSphericalCoords", "[", 
    RowBox[{"qs_", "?", "singleQubitStateQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"blochPureSphericalCoords", "[", "qs", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"blochMixedSphericalCoords", "[", "qs", "]"}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<r\>\"", ",", " ", "\"\<\[Theta]\>\"", ",", " ", 
         "\"\<\[Phi]\>\""}], "}"}], " ", "\[Rule]", " ", "vals"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getBlochSphericalCoords", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"getBlochCartesianCoords", "[", 
    RowBox[{"qs_", "?", "singleQubitStateQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"blochPureCartesianCoords", "[", "qs", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"blochMixedCartesianCoords", "[", "qs", "]"}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", " ", "\"\<v\>\"", ",", " ", "\"\<w\>\""}], 
        "}"}], " ", "\[Rule]", " ", "vals"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getBlochCartesianCoords", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Bloch", " ", "Sphere", " ", "Visualization"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "referenceStates", ",", " ", "greatCircles", ",", " ", "blochQubit"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"referenceStates", " ", ":=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.4", "]"}], ",", " ", 
        RowBox[{"Sphere", "[", "]"}], ",", "\n", "\t", "Black", ",", " ", 
        "Thick", ",", " ", 
        RowBox[{"Opacity", "[", "1.", "]"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|0\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|1\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1.3"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|R\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|L\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|+\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"1.6", ",", 
            RowBox[{"-", "0.25"}], ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|-\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "0.3", ",", "0"}], "}"}]}], "]"}]}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"greatCircles", " ", ":=", " ", 
    RowBox[{"ParametricPlot3D", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}], ",", " ", "0"}], "}"}], ",", " ", 
        "\n", "\t ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", "\n", "\t ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", "0", ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], "}"}], ",", " ", "\n", 
      "\t ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", "Thin"}], "}"}], ",", " ", "3"}], 
        "]"}]}], ",", " ", "\n", "\t", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", "\n", "\t", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "blochQubit", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Color\>\"", " ", "\[Rule]", " ", "Red"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochQubit", "[", 
     RowBox[{"qs_QuantumFiniteDimensionalState", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"coords", " ", "=", " ", 
         RowBox[{
          RowBox[{"getBlochCartesianCoords", "[", "qs", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ",", "\n", "\t", 
        RowBox[{"color", " ", "=", " ", 
         RowBox[{"OptionValue", "[", "\"\<Color\>\"", "]"}]}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"color", ",", " ", "\n", "\t\t", 
          RowBox[{"Arrowheads", "[", ".03", "]"}], ",", " ", "\n", "\t\t", 
          RowBox[{"Arrow", "[", 
           RowBox[{
            RowBox[{"Tube", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "coords"}], 
               "}"}], ",", ".01"}], "]"}], ",", "\n", "\t\t", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", 
              RowBox[{"-", ".01"}]}], "}"}]}], "]"}]}], "}"}], ",", "\n", 
        "\t\t", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\n", "\t\t", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], 
       "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "colorListQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colorListQ", "[", "colors_List", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{"colors", ",", " ", "ColorQ"}], "]"}], ",", " ", "True", ",", 
     " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"colorListQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumBlochPlot", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumBlochPlot", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", "True"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "[", 
    RowBox[{
     RowBox[{"qstate_", "?", "singleQubitStateQ"}], ",", " ", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"QuantumBlochPlot", "[", 
    RowBox[{
     RowBox[{"{", "qstate", "}"}], ",", " ", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
      RowBox[{"OptionValue", "[", "PlotStyle", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumBlochPlot", "[", 
     RowBox[{
      RowBox[{"qstates_", "?", "singleQubitStateListQ"}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cols", ",", " ", "sLength", ",", " ", "cLength"}], "}"}], ",",
       "\n", "\t", 
      RowBox[{
       RowBox[{"cols", " ", "=", " ", 
        RowBox[{"OptionValue", "[", "PlotStyle", "]"}]}], ";", "\n", "\t", 
       RowBox[{"sLength", " ", "=", " ", 
        RowBox[{"Length", "[", "qstates", "]"}]}], ";", "\n", "\t", 
       RowBox[{"cLength", " ", "=", " ", 
        RowBox[{"Length", "[", "cols", "]"}]}], ";", "\n", "\t", 
       RowBox[{"cols", " ", "=", " ", 
        RowBox[{"Which", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"cols", " ", "===", " ", "True"}], ",", "\n", "\t\t", 
          RowBox[{"RandomColor", "[", "sLength", "]"}], ",", "\n", "\t\t", 
          RowBox[{"cLength", " ", "===", " ", "sLength"}], ",", "\n", "\t\t", 
          "cols", ",", "\n", "\t\t", 
          RowBox[{"cLength", " ", ">", " ", "sLength"}], ",", "\n", "\t\t", 
          RowBox[{"cols", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "sLength"}], "]"}], "]"}], ",", "\n", "\t\t", 
          "True", ",", "\n", "\t\t", 
          RowBox[{"Join", "[", 
           RowBox[{"cols", ",", " ", 
            RowBox[{"RandomColor", "[", 
             RowBox[{"sLength", " ", "-", " ", "cLength"}], "]"}]}], "]"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"Show", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"greatCircles", ",", " ", "referenceStates"}], "}"}], ",", 
          " ", "\n", "\t\t\t", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"blochQubit", "[", 
              RowBox[{"#1", ",", " ", 
               RowBox[{"\"\<Color\>\"", " ", "\[Rule]", " ", "#2"}]}], "]"}], 
             "&"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"qstates", ",", " ", "cols"}], "}"}]}], "]"}]}], "]"}], 
        "]"}]}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", "\t\t", "\n", "\t\t", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Phase", " ", "and", " ", "Amplitude", " ", "Plotting"}], " ", 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"colorBar", ",", " ", "unitSquare"}], "]"}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"colorBar", " ", ":=", " ", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{"y", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", "\n", "\t", 
      RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"PlotPoints", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "150"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"None", ",", "All"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<GrayTones\>\"", ",", "\"\<Reverse\>\""}], "}"}], 
        "]"}]}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitSquare", "[", 
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_", ",", "abs_", ",", "arg_"}], "}"}], "]"}], " ", 
    ":=", " ", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", 
       RowBox[{"Rescale", "[", 
        RowBox[{
         RowBox[{"Abs", "[", "arg", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "]"}], ",", " ", "\n", 
      "\t", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", "j", ",", "abs"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "j", ",", "abs"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"j", "+", "1"}], ",", "abs"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", 
           RowBox[{"j", "+", "1"}], ",", "abs"}], "}"}]}], "}"}], "]"}]}], 
     "}"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"chartVec", ",", " ", "plotVec"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chartVec", "[", 
     RowBox[{"inputs_", ",", " ", "labels_"}], "]"}], " ", ":=", " ", 
    RowBox[{"BarChart", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Rainbow\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"2", " ", "Pi"}]}], "}"}]}], "}"}], "]"}], "@", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], "\n", "\t\t", "/@",
        "inputs"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", " ", 
      RowBox[{"LegendAppearance", "\[Rule]", "\"\<Column\>\""}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"(", "labels", ")"}]}], ",", " ", "\n", "\t\t", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Basis State Amplitudes and Phases\>\"", ",", "\"\<Title\>\"", 
         ",", "14"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", "\"\<Amplitude\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotVec", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", " ", "vec", ",", " ", "amps", ",", " ", "phases", ",", 
        " ", "chartInput", ",", " ", "chart"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<BasisStates\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"vec", " ", "=", " ", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"amps", " ", "=", " ", 
        RowBox[{"Abs", " ", "/@", " ", "vec"}]}], ";", "\n", "\t", 
       RowBox[{"phases", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", "0"}], ",", " ", "#", ",", "  ", 
             
             RowBox[{"\[Pi]", " ", "-", " ", "#"}]}], "]"}], "&"}], ",", " ", 
          
          RowBox[{"Arg", " ", "/@", " ", "vec"}]}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"chartInput", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"amps", ",", " ", "phases"}], "}"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"chart", " ", "=", " ", 
        RowBox[{"chartVec", "[", 
         RowBox[{"chartInput", ",", " ", "labels"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Show", "[", 
        RowBox[{"Legended", "[", 
         RowBox[{"chart", ",", " ", "\n", "\t\t", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Rainbow\>\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "6.28"}], "}"}]}], "}"}], ",", " ", 
            "\n", "\t\t\t", 
            RowBox[{"LegendLabel", "\[Rule]", "\"\<Relative Phase\>\""}]}], 
           "]"}]}], "]"}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"chartMat", ",", " ", "plotMat"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chartMat", "[", 
     RowBox[{"inputs_", ",", " ", "labels_"}], "]"}], " ", ":=", " ", 
    RowBox[{"BarChart3D", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Rainbow\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], "]"}], "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "inputs", 
        ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", "\n", "\t\t", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", " ", "\n", "\t\t", 
      RowBox[{"LegendAppearance", "\[Rule]", "\"\<Column\>\""}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"ChartLabels", "\[Rule]", " ", "labels"}], ",", "\n", "\t\t", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Basis State Amplitudes and Phases\>\"", ",", "\"\<Title\>\"", 
         ",", "14"}], "]"}]}], ",", " ", "\n", "\t\t", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Canvas\>\"", "\[Rule]", "None"}], "}"}]}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "\"\<Amplitude\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotMat", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", " ", "mat", ",", " ", "amps", ",", " ", "phases", ",", 
        " ", "chartInput", ",", " ", "chart"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<BasisStates\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"labels", ",", " ", 
          RowBox[{"labels", " ", "/.", " ", 
           RowBox[{"Ket", " ", "\[Rule]", "  ", "Bra"}]}]}], "}"}]}], ";", 
       "\n", "\t", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", "\n", "\t", 
       RowBox[{"phases", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Arg", ",", " ", "mat", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"phases", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "\[GreaterEqual]", "0"}], ",", " ", "#", ",", "  ", 
             
             RowBox[{"\[Pi]", " ", "-", " ", "#"}]}], "]"}], " ", "&"}], ",", 
          " ", "phases", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"amps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Abs", ",", " ", "mat", ",", " ", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"chartInput", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"amps", ",", " ", "phases"}], "}"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"chart", " ", "=", " ", 
        RowBox[{"chartMat", "[", 
         RowBox[{"chartInput", ",", " ", "labels"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"Show", "[", 
        RowBox[{"Legended", "[", 
         RowBox[{"chart", ",", " ", "\n", "\t\t", 
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<Rainbow\>\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "6.28"}], "}"}]}], "}"}], ",", " ", 
            "\n", "\t\t\t", 
            RowBox[{"LegendLabel", "\[Rule]", "\"\<Relative Phase\>\""}]}], 
           "]"}]}], "]"}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "phaseAndAmplitudePlot", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"phaseAndAmplitudePlot", "[", "qs4_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"pureStateQ", "[", "qs4", "]"}], ",", " ", 
      RowBox[{"plotVec", "[", "qs4", "]"}], ",", " ", 
      RowBox[{"plotMat", "[", "qs4", "]"}]}], "]"}]}], ";"}], "\n", "\t", 
  "\n", "\t", "\n", "\t", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "extractQStateProperty", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Basics", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qs", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<NumberOfQudits\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qs", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<NumberOfQudits\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<StateVector\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"getStateVector", "[", "qs", "]"}]}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"getDensityMatrix", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Basis", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<BasisStates\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"getBasisStates", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Numerical", " ", "Properties"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<VonNeumannEntropy\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"getVonNeumannEntropy", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<Purity\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"getPurity", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"State", " ", "Queries"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<PureStateQ\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"pureStateQ", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<MixedStateQ\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"mixedStateQ", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Bloch", " ", "Sphere"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<BlochCartesianCoordinates\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"getBlochCartesianCoords", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<BlochSphericalCoordinates\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"getBlochSphericalCoords", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<BlochPlot\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"QuantumBlochPlot", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Visualizations", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<Plot\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"phaseAndAmplitudePlot", "[", "qs", "]"}]}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n", "\n", "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Quantum", " ", "Finite", " ", "Dimensional", " ", "States"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"QuantumFiniteDimensionalState", ",", " ", "iQState"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumFiniteDimensionalState", "::", "mixture"}], "=", 
    "\"\<Mixed state `1` cannot be represented by a state vector\>\""}], 
   ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumFiniteDimensionalState", "]"}], " ", "=", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], "}"}]}], 
   ";"}], 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Transform", " ", "input", " ", "into", " ", "a", " ", "normal", " ", 
     "form"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQState", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numQudits_", ",", " ", "state_"}], "}"}], ",", " ", "dim_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "assoc", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], 
           ",", " ", "\n", "\t\t", 
           RowBox[{
           "\"\<NumberOfQudits\>\"", " ", "\[Rule]", " ", "numQudits"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", 
            RowBox[{"stateVec", "[", 
             RowBox[{"numQudits", ",", " ", "state", ",", " ", "dim"}], 
             "]"}]}]}], "}"}], "|>"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"QuantumFiniteDimensionalState", "[", "assoc", "]"}]}]}], "\n",
      "\t", "]"}]}], ";"}], 
  StyleBox["\n", "Code"], "\n"}], "\n", 
 RowBox[{
  RowBox[{"QuantumFiniteDimensionalState", " ", "/:", " ", 
   RowBox[{"qstate", ":", 
    RowBox[{"QuantumFiniteDimensionalState", "[", 
     RowBox[{
      RowBox[{"spec_", "?", "singleItemListQ"}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"validStateSpecQ", "[", 
      RowBox[{"spec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{"iQState", "[", 
      RowBox[{
       RowBox[{"stateSpecFormat", "[", 
        RowBox[{
         RowBox[{"spec", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}], "]"}],
        ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}], "]"}], 
     ",", " ", "\n", "\t\t", 
     RowBox[{"HoldForm", "[", "qstate", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumFiniteDimensionalState", " ", "/:", " ", 
    RowBox[{"QuantumFiniteDimensionalState", "[", 
     RowBox[{
      RowBox[{"specs_", "?", "multiItemListQ"}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"QuantumProduct", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QuantumFiniteDimensionalState", "[", 
         RowBox[{
          RowBox[{"{", "#", "}"}], ",", " ", 
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", 
           RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}]}], 
         "]"}], "&"}], ",", " ", "specs"}], "]"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumFiniteDimensionalState", " ", "/:", " ", 
    RowBox[{"qstate_QuantumFiniteDimensionalState", "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qstate", ",", " ", "prop"}], "]"}]}], ";"}], "\n", "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Front", " ", "End", " ", "Fornatting", " ", "of", " ", "State"}],
     " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumFiniteDimensionalState", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qs3", ":", 
       RowBox[{"QuantumFiniteDimensionalState", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"stateVisualize", "[", 
     RowBox[{"qs3", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateVisualize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateVisualize", "[", 
     RowBox[{"qs2_QuantumFiniteDimensionalState", ",", " ", "fmt_"}], "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
     RowBox[{
     "QuantumFiniteDimensionalState", ",", "\n", "\t\t", "qs2", ",", "\n", 
      "\t\t", 
      RowBox[{"stateArrayVisualize", "[", "qs2", "]"}], ",", "\n", "\t\t", 
      RowBox[{"stateBaseVisual", "[", "qs2", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"stateExpandedVisual", "[", "qs2", "]"}], ",", " ", "\n", 
      "\t\t", "fmt"}], "]"}]}], ";"}], "\n", "\t\t", "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateArrayVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArrayVisualize", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"pureStateQ", "[", "qs", "]"}], " ", "&&", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"qs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], 
        "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", "8"}]}], ",", " ", 
     "\n", "\t", 
     RowBox[{"MatrixForm", " ", "@", " ", 
      RowBox[{"Normal", " ", "@", " ", 
       RowBox[{"qs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}]}], ",", 
     "\n", "\t", 
     RowBox[{"pureStateQ", "[", "qs", "]"}], ",", " ", "\n", "\t", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], ",", "\n", 
     "\t", "True", ",", "\n", "\t", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], "]"}]}], 
  "\n", "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "stateBaseVisual", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"stateObjsVisualize", ",", " ", "stateDimVisualize"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateBaseVisual", "[", "qs1_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"stateObjsVisualize", "[", "qs1", "]"}], ",", " ", 
      RowBox[{"stateDimVisualize", "[", "qs1", "]"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateObjsVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Number Of Qudits: \>\"", ",", 
         RowBox[{"qs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<NumberOfQudits\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n", "\t\t "}], "\n", 
 RowBox[{
  RowBox[{"stateDimVisualize", "[", "qs_", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"dim", " ", "=", " ", 
      RowBox[{"qs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dim", " ", "\[NotEqual]", " ", "2"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Dimension: \>\"", ",", " ", "dim"}], "}"}], ",", "\n", 
         "\t\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateExpandedVisual", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateExpandedVisual", "[", "qs5_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"purityVisualize", "[", "qs5", "]"}], ",", "\n", "\t", 
      RowBox[{"entropyVisualize", "[", "qs5", "]"}], ",", "\n", "\t", 
      RowBox[{"blochVisualize", "[", "qs5", "]"}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"purityVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Quantum Purity: \>\"", ",", " ", 
         RowBox[{"getPurity", "[", "qs", "]"}]}], "}"}], ",", "\n", "\t\t ", 
       "StandardForm"}], "]"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"entropyVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Von Neumann Entropy: \>\"", ",", " ", 
         RowBox[{"getVonNeumannEntropy", "[", "qs", "]"}]}], "}"}], ",", "\n",
        "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"singleQubitStateQ", "[", "qs", "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Bloch Coordinates: \>\"", ",", " ", 
           RowBox[{"getBlochSphericalCoords", "[", "qs", "]"}]}], "}"}], ",", 
         "\n", "\t\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Product", " ", "States"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"tensorPure", ",", " ", "tensorMixed"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tensorPure", "[", 
     RowBox[{"subStates_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rep", ",", " ", "n", ",", " ", "assoc"}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", " ", "@@", " ", 
          RowBox[{"subStates", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "1", ",", " ", "\"\<StateVector\>\""}], 
            "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Total", " ", "@", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<NumberOfQudits\>\"", "]"}], "&"}], ",", 
           " ", "subStates"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", "rep"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], 
           ",", "\n", "\t\t", 
           RowBox[{"\"\<NumberOfQudits\>\"", " ", "\[Rule]", " ", "n"}]}], 
          "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
       RowBox[{"QuantumFiniteDimensionalState", "[", "assoc", "]"}]}]}], "\n",
      "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tensorMixed", "[", 
     RowBox[{"subStates_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rep", ",", " ", "n", ",", " ", "mats", ",", " ", "assoc"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"mats", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pureStateQ", "[", "#", "]"}], ",", " ", "\n", "\t\t", 
             RowBox[{"vecToMat", " ", "@", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], 
             ",", "\n", "\t\t", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], 
              "]"}]}], "]"}], "&"}], ",", " ", "subStates"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", "mats"}]}], ";", "\n", 
       "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Total", " ", "@", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<NumberOfQudits\>\"", "]"}], "&"}], ",", 
           " ", "subStates"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<DensityMatrix\>\"", " ", "\[Rule]", " ", 
            RowBox[{"SparseArray", "[", "rep", "]"}]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], 
           ",", "\n", "\t\t", 
           RowBox[{"\"\<NumberOfQudits\>\"", " ", "\[Rule]", " ", "n"}]}], 
          "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
       RowBox[{"QuantumFiniteDimensionalState", "[", "assoc", "]"}]}]}], "\n",
      "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "validStateProductListQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validStateProductListQ", "[", "qstates_List", "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"If", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"quantumFiniteDimensionalStateListQ", "[", "qstates", "]"}], 
       " ", "&&", "\n", "\t\t", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"qstates", ",", " ", 
         RowBox[{
          RowBox[{"AssociationQ", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}]}], "]"}]}], ",", 
      "\n", "\t\t", "True", ",", "\n", "\t\t", "False"}], "]"}]}], ";"}], 
  "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"QuantumProduct", ",", " ", "iQProduct"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumProduct", "[", 
    RowBox[{"states1_", "?", "validStateProductListQ"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"iQProduct", "[", "states1", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQProduct", "[", "subStates_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "dim", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{
         RowBox[{"subStates", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<QuditDimension\>\"", 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AllTrue", "[", 
           RowBox[{"subStates", ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", "\"\<QuditDimension\>\"", "]"}], " ", "===", 
              " ", "dim"}], " ", "&"}]}], "]"}]}], ",", "\n", "\t\t", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"QuantumFiniteDimensionalState", "::", "prodDims"}], ",",
              "subStates"}], "]"}], ";", 
           RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"AllTrue", "[", 
          RowBox[{"subStates", ",", " ", 
           RowBox[{
            RowBox[{"pureStateQ", "[", "#", "]"}], "&"}]}], "]"}], ",", " ", 
         "\n", "\t\t", 
         RowBox[{"tensorPure", "[", 
          RowBox[{"subStates", ",", " ", "dim"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"tensorMixed", "[", 
          RowBox[{"subStates", ",", " ", "dim"}], "]"}]}], "]"}]}]}], "\n", 
     "\t", "]"}]}], ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", "Mixtures", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"QuantumMixture", ",", " ", "iQMixture"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMixture", "[", 
     RowBox[{"states2_", " ", "\[Rule]", " ", "weights_"}], "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "weights", "]"}], " ", "&&", " ", 
       RowBox[{"explicitQuantumStateListQ", "[", "states2", "]"}]}], ",", 
      "\n", "\t\t", 
      RowBox[{"iQMixture", "[", 
       RowBox[{"states2", ",", " ", "weights"}], "]"}], ",", " ", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"QuantumMixture", "[", 
        RowBox[{"states2", " ", "\[Rule]", " ", "weights"}], "]"}], "]"}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iQMixture", "[", 
    RowBox[{"states3_", ",", " ", "weights_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "probs", ",", " ", "mixture", ",", " ", "reps", ",", " ", "dm", ",", 
       " ", "pureQ", ",", " ", "hasStateVec", ",", " ", "hasDM"}], "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "states3", "]"}], " ", "===", " ", "1"}], ",",
         " ", 
        RowBox[{"Return", "[", 
         RowBox[{"states3", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"states3", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<NumberOfQudits\>\"", "]"}], " ", "===", 
             " ", 
             RowBox[{
              RowBox[{"states3", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<NumberOfQudits\>\"", 
              "]"}]}], "&"}]}], "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t\t", 
      "\n", "\t", 
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"l1Normalize", "[", "weights", "]"}]}], ";", "\n", "\t", 
      RowBox[{"mixture", " ", "=", " ", 
       RowBox[{"states3", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"reps", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"pureStateQ", "[", "#", "]"}], ",", " ", "\n", "\t\t", 
            RowBox[{"vecToMat", " ", "@", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], ",",
             "\n", "\t\t", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], 
             "]"}]}], "]"}], "&"}], ",", " ", "states3"}], "]"}]}], ";", "\n",
       "\t\t", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"Total", " ", "@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"reps", ",", " ", "probs"}], "}"}]}], "]"}]}]}], ";", "\n",
       "\t", "\n", "\t", 
      RowBox[{"mixture", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "mixture", "]"}], ",", " ", 
           "\"\<StateVector\>\""}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Delete", "[", 
          RowBox[{"mixture", ",", " ", "\"\<StateVector\>\""}], "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Delete", "[", 
          RowBox[{"mixture", ",", " ", "\"\<DensityMatrix\>\""}], "]"}]}], 
        "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"pureQ", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Tr", "[", 
           RowBox[{"dm", ".", "dm"}], "]"}], " ", "===", " ", "1"}], ",", " ",
          "True", ",", " ", "False"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"pureQ", ",", " ", "\n", "\t\t", 
        RowBox[{
         RowBox[{"mixture", "[", "\"\<StateVector\>\"", "]"}], " ", "=", " ", 
         
         RowBox[{"matToVec", "[", "dm", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"mixture", "[", "\"\<DensityMatrix\>\"", "]"}], " ", "=", 
         " ", "dm"}]}], "]"}], ";", "\t", "\n", "\t", 
      RowBox[{"QuantumFiniteDimensionalState", "[", "mixture", "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQMixture", "[", "expr___", "]"}], " ", ":=", " ", "$Failed"}], 
   ";"}], "\n", "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Tracing", " ", "out", " ", "subsystems"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"QuantumPartialTr", ",", " ", "iQPartialTr"}], "]"}], ";"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"s_", ",", " ", "qsOut_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "[", "qsOut", "]"}], " ", "&&", " ", 
       RowBox[{"QuantumFiniteDimensionalStateQ", "[", "s", "]"}]}], ",", "\n",
       "\t\t", 
      RowBox[{"iQPartialTr", "[", 
       RowBox[{"s", ",", " ", "qsOut"}], "]"}], ",", " ", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"QuantumPartialTr", "[", 
        RowBox[{"s", ",", " ", "qsOut"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iQPartialTr", "[", 
    RowBox[{"s_", ",", " ", 
     RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "s"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iQPartialTr", "[", 
    RowBox[{"s_", ",", " ", "qsOut_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "newState", ",", " ", "dm", ",", " ", "dim", ",", " ", "wContract", ",",
        " ", "n", ",", " ", "tpLevels", ",", " ", "assoc"}], "}"}], ",", "\n",
      "\t", 
     RowBox[{
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"s", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"s", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"wContract", " ", "=", " ", 
       RowBox[{"qsOut", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"s", "[", "\"\<NumberOfQudits\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"dm", ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"dim", ",", " ", 
           RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", "n", "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Range", "[", "n", "]"}], " ", "+", " ", "n"}]}], "]"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"dm", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"TensorContract", "[", 
        RowBox[{"dm", ",", " ", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"wContract", ",", " ", 
            RowBox[{"wContract", " ", "+", " ", "n"}]}], "}"}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"n", " ", "-", " ", "1"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"n", " ", "-", " ", "1"}], "]"}], " ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "]"}]}]}], ";", 
      "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"dm", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "dm"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", "^", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], ",", " ", 
           RowBox[{"dim", "^", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<NumberOfQudits\>\"", " ", "\[Rule]", " ", 
           RowBox[{"n", " ", "-", " ", 
            RowBox[{"Length", "[", "qsOut", "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}]}], 
         "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"dm", ".", "dm"}], "]"}], " ", "\[Equal]", " ", "1"}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<StateVector\>\"", "]"}], " ", "=", " ", 
         RowBox[{"matToVec", "[", "dm", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<DensityMatrix\>\"", "]"}], " ", "=", " ", 
         "dm"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"newState", " ", "=", " ", 
       RowBox[{"QuantumFiniteDimensionalState", "[", "assoc", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"iQPartialTr", "[", 
       RowBox[{"newState", ",", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{"qsOut", ",", " ", "1"}], "]"}]}], "]"}]}]}], "\n", "\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iQPartialTr", "[", "expr___", "]"}], " ", ":=", " ", "$Failed"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.733668015874496*^9, 3.733668082290831*^9}, {
   3.733668170558302*^9, 3.733668251834984*^9}, {3.7336682838581457`*^9, 
   3.7336683704084587`*^9}, {3.73367216057633*^9, 3.73367227922228*^9}, {
   3.733672518355151*^9, 3.7336725244004498`*^9}, {3.733672595205315*^9, 
   3.733672628062669*^9}, 3.733707322768977*^9, {3.7337075418582783`*^9, 
   3.733707672302019*^9}, {3.733708314913632*^9, 3.7337083351025953`*^9}, {
   3.733708391015348*^9, 3.733708407862447*^9}, {3.7337084710980988`*^9, 
   3.73370849674361*^9}, {3.7337085962472982`*^9, 3.733708634433683*^9}, {
   3.733708667569992*^9, 3.733708682959422*^9}, {3.733708790018709*^9, 
   3.733708806745816*^9}, {3.733708924906487*^9, 3.733708997750743*^9}, {
   3.733709531874688*^9, 3.733709610481752*^9}, {3.733710681896247*^9, 
   3.733710794019628*^9}, {3.7337109362821836`*^9, 3.733711041309082*^9}, {
   3.733711109604156*^9, 3.733711115824127*^9}, {3.733711205849161*^9, 
   3.7337112065289516`*^9}, {3.733711241618734*^9, 3.733711261786224*^9}, 
   3.733711309722125*^9, {3.733711533407916*^9, 3.733711533980427*^9}, {
   3.733711754887519*^9, 3.733711903819131*^9}, {3.733712092086672*^9, 
   3.733712120451913*^9}, {3.733712237169866*^9, 3.7337122386637297`*^9}, {
   3.733712276153432*^9, 3.733712297091504*^9}, {3.73371242434649*^9, 
   3.733712442897875*^9}, {3.7337125040563297`*^9, 3.733712504381401*^9}, {
   3.733712996629525*^9, 3.733713005803293*^9}, {3.733713069997479*^9, 
   3.733713102373845*^9}, {3.7337131546446257`*^9, 3.7337133020896683`*^9}, {
   3.73371335842494*^9, 3.733713421191608*^9}, {3.73371349308521*^9, 
   3.733713599255247*^9}, {3.733713668465623*^9, 3.733713684182654*^9}, {
   3.733713728912862*^9, 3.733713774426469*^9}, {3.733713826730843*^9, 
   3.7337138316721687`*^9}, {3.733713926263803*^9, 3.733713936387841*^9}, 
   3.733714145797723*^9, {3.733714382782249*^9, 3.7337143995932693`*^9}, {
   3.733714478556838*^9, 3.733714485761606*^9}, {3.733714584573386*^9, 
   3.733714603890724*^9}, {3.733714650473116*^9, 3.733714747405335*^9}, {
   3.733714777578673*^9, 3.733714778352159*^9}, {3.7337161315573683`*^9, 
   3.733716136697905*^9}, {3.733716287924768*^9, 3.733716304584058*^9}, {
   3.733716381087811*^9, 3.733716385046788*^9}, {3.7337164155095663`*^9, 
   3.733716434759493*^9}, {3.73371653441366*^9, 3.733716607649838*^9}, {
   3.733716657446685*^9, 3.7337166586031017`*^9}, {3.733716807318184*^9, 
   3.733716819982535*^9}, {3.733716950753097*^9, 3.733716968293902*^9}, {
   3.733717076029028*^9, 3.7337172105830097`*^9}, {3.733717248687317*^9, 
   3.733717358988164*^9}, {3.733717423944742*^9, 3.73371744577439*^9}, {
   3.733717494457582*^9, 3.733717522029237*^9}, {3.7337175971837482`*^9, 
   3.733717649483304*^9}, {3.733717695837245*^9, 3.7337178684348993`*^9}, {
   3.733717907844534*^9, 3.733717917457245*^9}, {3.733717949435885*^9, 
   3.733717979142384*^9}, {3.733718022407275*^9, 3.7337180600384197`*^9}, {
   3.7337180903973227`*^9, 3.733718145327879*^9}, {3.733718262927052*^9, 
   3.73371827566308*^9}, {3.733718314735087*^9, 3.733718347757371*^9}, {
   3.733718390040288*^9, 3.733718487715354*^9}, {3.733718547116951*^9, 
   3.7337188244914618`*^9}, {3.733718918606011*^9, 3.733719252537744*^9}, {
   3.733719471964933*^9, 3.733719472904005*^9}, {3.733719536547738*^9, 
   3.7337195439607763`*^9}, {3.733719731095282*^9, 3.733719789797415*^9}, {
   3.733719820846959*^9, 3.733719907678906*^9}, {3.733719941106258*^9, 
   3.733719956448821*^9}, {3.733720081514615*^9, 3.7337201260335827`*^9}, {
   3.7337560366038446`*^9, 3.733756104901203*^9}, {3.733756284777852*^9, 
   3.733756287054545*^9}, {3.733756323069738*^9, 3.733756329234973*^9}, {
   3.733756452246415*^9, 3.733756461573*^9}, {3.733756556858403*^9, 
   3.733756613429572*^9}, {3.733756724508803*^9, 3.733756770399582*^9}, {
   3.733756805710546*^9, 3.733756833509286*^9}, {3.733756878119026*^9, 
   3.7337569399503927`*^9}, {3.7337569799499207`*^9, 
   3.7337569890473423`*^9}, {3.733757107536439*^9, 3.733757140454513*^9}, {
   3.733757711612001*^9, 3.73375773643604*^9}, {3.733757864761462*^9, 
   3.7337579448322067`*^9}, {3.73376137432316*^9, 3.733761471898468*^9}, {
   3.733761505227291*^9, 3.733761647767964*^9}, {3.733761761683576*^9, 
   3.733761762634461*^9}, {3.733761803335458*^9, 3.733761804141787*^9}, {
   3.7337620044058867`*^9, 3.7337620351268263`*^9}, {3.733762233315755*^9, 
   3.7337623080345716`*^9}, {3.733762359444972*^9, 3.733762361072798*^9}, {
   3.733762454169107*^9, 3.7337625606848717`*^9}, {3.7337627351109324`*^9, 
   3.7337628323564777`*^9}, {3.733762913465473*^9, 3.73376298443085*^9}, {
   3.733763014563994*^9, 3.733763025036799*^9}, {3.733763072732234*^9, 
   3.73376308488526*^9}, {3.733763266597231*^9, 3.733763400748489*^9}, {
   3.7337634406266108`*^9, 3.7337634599876947`*^9}, {3.73376365561095*^9, 
   3.733763683842925*^9}, {3.73376372437039*^9, 3.7337637717582483`*^9}, {
   3.733763870852703*^9, 3.7337640007213697`*^9}, {3.733764087768162*^9, 
   3.73376411263962*^9}, {3.7337641528673553`*^9, 3.733764389832794*^9}, {
   3.73376449172379*^9, 3.733764538842927*^9}, {3.7337645749237537`*^9, 
   3.733764615785241*^9}, {3.7337648030695257`*^9, 3.7337648089928627`*^9}, {
   3.733764857482005*^9, 3.733764904935151*^9}, {3.7337650076407833`*^9, 
   3.733765064638013*^9}, {3.7337651675093193`*^9, 3.7337651945132437`*^9}, {
   3.7337652637713537`*^9, 3.733765264671948*^9}, {3.733765301600404*^9, 
   3.73376535703314*^9}, {3.733765516405443*^9, 3.733765609518814*^9}, {
   3.733765682012847*^9, 3.7337657290027723`*^9}, {3.733765924837029*^9, 
   3.73376599129109*^9}, {3.733766081603438*^9, 3.73376608785856*^9}, {
   3.733766196378717*^9, 3.733766342877129*^9}, {3.7337663740953712`*^9, 
   3.733766375629094*^9}, {3.733766412838285*^9, 3.733766429978757*^9}, {
   3.733766461951255*^9, 3.7337664626044273`*^9}, {3.733766514746455*^9, 
   3.733766618134856*^9}, {3.733767375748233*^9, 3.733767381447566*^9}, {
   3.733767432427586*^9, 3.733767443067284*^9}, {3.733767487791456*^9, 
   3.733767500546153*^9}, {3.73376753315197*^9, 3.7337676026566687`*^9}, {
   3.733767820667564*^9, 3.733767888078567*^9}, {3.7337679229671288`*^9, 
   3.733767926257*^9}, {3.73376797796926*^9, 3.733768008217538*^9}, {
   3.733768039866284*^9, 3.7337680407529573`*^9}, 3.733768073077175*^9, {
   3.733768138129883*^9, 3.7337681456868258`*^9}, {3.733768224892914*^9, 
   3.733768233215259*^9}, 3.7337682968282413`*^9, {3.733768364192443*^9, 
   3.733768384645475*^9}, {3.733768524376486*^9, 3.733768529102273*^9}, {
   3.733768622343741*^9, 3.733768642684497*^9}, {3.733768701748575*^9, 
   3.7337687043183928`*^9}, {3.733768795376953*^9, 3.733768864044302*^9}, {
   3.733776769263447*^9, 3.733776772444799*^9}, {3.733776829651718*^9, 
   3.733776868608447*^9}, {3.733776918761291*^9, 3.733776963686049*^9}, {
   3.733777035053887*^9, 3.7337770372445517`*^9}, {3.7337771354332457`*^9, 
   3.733777167005121*^9}, 3.733777399861236*^9, {3.733777535410057*^9, 
   3.7337775373828917`*^9}, {3.7337775896410847`*^9, 3.733777601137288*^9}, {
   3.733777662805441*^9, 3.733777664363825*^9}, {3.7337777404748898`*^9, 
   3.7337777408573647`*^9}, {3.733779986577416*^9, 3.733779997703125*^9}, {
   3.733780140728672*^9, 3.733780141320243*^9}, {3.733780176107883*^9, 
   3.7337801914980507`*^9}, {3.7337802362636766`*^9, 3.733780337537681*^9}, {
   3.7337803913349953`*^9, 3.733780400182693*^9}, {3.733780442587483*^9, 
   3.733780548461141*^9}, {3.733780631612459*^9, 3.733780658771056*^9}, {
   3.7339564898894987`*^9, 3.73395649915522*^9}, {3.733963140669361*^9, 
   3.733963141340576*^9}, {3.73402404688004*^9, 3.734024054066144*^9}, {
   3.734054012368182*^9, 3.734054050321409*^9}, {3.734054083828356*^9, 
   3.734054112808386*^9}, {3.734054209165494*^9, 3.7340542543310347`*^9}, {
   3.734054287047673*^9, 3.734054377064431*^9}, {3.7340544613846493`*^9, 
   3.7340545298666286`*^9}, {3.734054604521934*^9, 3.734054713550994*^9}, {
   3.73405476007225*^9, 3.734054940934833*^9}, {3.73405499492203*^9, 
   3.734054998132271*^9}, {3.734055096637867*^9, 3.7340554518084908`*^9}, {
   3.7340618283885527`*^9, 3.734061878601688*^9}, {3.734061923627204*^9, 
   3.734061952762981*^9}, {3.734401819163357*^9, 3.734401892490716*^9}, {
   3.734401993809054*^9, 3.7344019970108557`*^9}, {3.7344020560752563`*^9, 
   3.734402116544541*^9}, {3.734402173380287*^9, 3.7344022232089643`*^9}, {
   3.734402485442271*^9, 3.73440251857338*^9}, {3.734402560022746*^9, 
   3.734402601243585*^9}, {3.734402709293993*^9, 3.734402715690906*^9}, {
   3.734402800073345*^9, 3.734402822083556*^9}, {3.734402900848531*^9, 
   3.7344029071754217`*^9}, {3.7344032362141323`*^9, 
   3.7344032428359632`*^9}, {3.734403389301742*^9, 3.734403423659577*^9}, {
   3.734404799767049*^9, 3.7344048026764183`*^9}, {3.734404845466886*^9, 
   3.73440487809304*^9}, {3.734405746112665*^9, 3.734405925420883*^9}, {
   3.734405982238805*^9, 3.734406332103985*^9}, {3.734406539519354*^9, 
   3.7344065421166363`*^9}, {3.734406633953323*^9, 3.734406663600533*^9}, {
   3.734407454866604*^9, 3.734407487798149*^9}, {3.7344075205698547`*^9, 
   3.734407603957835*^9}, {3.7344076945520163`*^9, 3.734407759851006*^9}, {
   3.734407805759652*^9, 3.734407830329414*^9}, {3.7344079039361677`*^9, 
   3.734407907744134*^9}, {3.734701132638198*^9, 3.734701179487117*^9}, {
   3.735846434111142*^9, 3.735846450471705*^9}, {3.735846841598279*^9, 
   3.735846874056077*^9}, {3.7358469842062817`*^9, 3.735847114675004*^9}, {
   3.735847149424736*^9, 3.735847181244185*^9}, {3.735847237251833*^9, 
   3.735847295853265*^9}, {3.735847345226962*^9, 3.735847401837682*^9}, {
   3.735847454573373*^9, 3.735847589723544*^9}, {3.735847656475878*^9, 
   3.735847673193207*^9}, {3.736044773757497*^9, 3.736044800237472*^9}, {
   3.7360449504029703`*^9, 3.736044988405258*^9}, {3.736045404588974*^9, 
   3.73604541795409*^9}, {3.7360454804787188`*^9, 3.736045505551693*^9}, {
   3.73604554250305*^9, 3.736045549119287*^9}, {3.736045622373271*^9, 
   3.736045636674203*^9}, {3.736045843302113*^9, 3.736045843526299*^9}, {
   3.736054004581809*^9, 3.736054009601204*^9}, {3.736054667852783*^9, 
   3.7360546717703123`*^9}},ExpressionUUID->"5d19d0d0-9ca5-400c-955c-\
b97ccdb2a14f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumMatrixOperation", "Section",
 CellChangeTimes->{{3.7337676918020697`*^9, 3.733767698120964*^9}, {
  3.73406250117636*^9, 
  3.734062503685807*^9}},ExpressionUUID->"5f383bb3-f738-47e9-a700-\
1b148a404249"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "paulix", ",", " ", "pauliy", ",", " ", "pauliz", ",", " ", "rootNot", ",",
     " ", "hadamard", ",", " ", "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", 
    " ", "fourier", ",", " ", "id"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"sigmap", ",", " ", "sigmam"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"id", "[", "d_", "]"}], " ", ":=", " ", 
   RowBox[{"IdentityMatrix", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigmap", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigmam", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pauliy", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"-", "\[ImaginaryI]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
       "\[ImaginaryI]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"not", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rootNot", " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"not", ",", " ", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hadamard", " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rz", "[", "\[Theta]1_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]1"}], "]"}]}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rx", "[", "\[Theta]2_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"\[ImaginaryI]", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "/", "2"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "*", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ry", "[", "\[Theta]3_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]3", "/", "2"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"paulix", "[", 
    RowBox[{"d1_", ",", " ", "k1_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", "d1", ",", "1"}], "]"}], 
           "\[Equal]", "j"}]}], ")"}], "\[Rule]", "  ", "1"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d1", ",", "d1"}], "}"}]}], "]"}], ",", " ", "k1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pauliz", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j_", ",", "j_"}], "}"}], "\[RuleDelayed]", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
          RowBox[{"j", "/", "d"}]}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", "d"}], "}"}]}], "]"}], ",", " ", "k"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fourier", "[", 
     RowBox[{"dim_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i_", ",", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{
         RowBox[{"Exp", "[", " ", 
          RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], 
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}], "*", "k"}], ",", "dim"}], 
             "]"}], "/", "dim"}]}], "]"}], "/", 
         RowBox[{"Sqrt", "[", "dim", "]"}]}]}], ")"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "sum", ",", " ", "swap", ",", " ", "rootSwap", ",", " ", "control", ",", 
     " ", "cnot", ",", " ", "cphase", ",", " ", "toffoli", ",", " ", 
     "fredkin", ",", " ", "deutsch", ",", " ", "randUn"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sum", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"in_", ",", " ", "out_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       
       RowBox[{"With", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i1", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"in", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"j1", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"in", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"i2", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"out", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"j2", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"out", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i1", " ", "\[Equal]", " ", "i2"}], " ", "&&", " ", 
            RowBox[{"j2", " ", "\[Equal]", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i1", " ", "+", " ", "j1"}], ",", " ", "d"}], 
              "]"}]}]}], ",", " ", "1", ",", " ", "0"}], "]"}]}], "]"}]}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"swap", "[", "d1_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d1", ",", " ", 
            "2"}], "]"}], " ", "\n", "\t", "\[Equal]", " ", 
          RowBox[{"Reverse", " ", "@", " ", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d1", ",", " ", 
             "2"}], "]"}]}]}]}], ")"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d1", "^", "2"}], ",", " ", 
        RowBox[{"d1", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rootSwap", "[", "dim_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"swap", "[", "dim", "]"}], ",", " ", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randUn", "[", 
     RowBox[{"dim_Integer", ",", " ", "n_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rr", ",", " ", "rc"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"rr", " ", ":=", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"rc", " ", ":=", " ", 
        RowBox[{"rr", " ", "+", " ", 
         RowBox[{"\[ImaginaryI]", " ", "rr"}]}]}], ";", "\n", "\t", 
       RowBox[{"Orthogonalize", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"rc", ",", " ", 
          RowBox[{"dim", "^", "n"}], ",", " ", 
          RowBox[{"dim", "^", "n"}]}], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"control", "[", 
     RowBox[{"dim_Integer", ",", " ", "u_"}], "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", "\n", "\t ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "1"}], " ", 
          "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
         ",", "\n", "\t ", 
         RowBox[{"u", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}], ",", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}]}], "]"}], 
          "]"}], ",", "\n", "\t ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", "True", ",", " ", "0"}], 
        "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dim", "^", "2"}], ",", " ", 
        RowBox[{"dim", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cnot", "[", "d2_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d2", ",", " ", 
             "2"}], "]"}], " ", "\[Equal]", " ", "\n", "\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d2", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"-", " ", 
                RowBox[{"Total", " ", "@", " ", 
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{
                   RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d2", ",", 
                   " ", "2"}], "]"}]}]}], ",", " ", "d2"}], "]"}]}], "}"}]}], 
          ")"}], ",", "\n", "\t", "1", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d2", "^", "2"}], ",", " ", 
        RowBox[{"d2", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cphase", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", 
         RowBox[{
          RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}]}], ",", " ", 
         
         RowBox[{"Exp", "[", " ", 
          RowBox[{
          "2", " ", "*", " ", "Pi", " ", "*", " ", "\[ImaginaryI]", " ", "*", 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "/", "d"}]}], "]"}],
          ",", "\n", "\t ", "True", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toffoli", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
            RowBox[{"i", " ", "<", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], "-", " ", "1"}]}]}], ")"}], " ", "||", 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", "-", " ", "1"}]}], " ", "&&", " ", 
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "n"}]}]}], ")"}], "||", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "n"}], " ", "-", " ", "1"}]}], " ", "&&", " ", 
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "n"}]}]}], ")"}]}], ",", " ", "1", ",", " ", 
         "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "^", "n"}], ",", 
        RowBox[{"2", "^", "n"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fredkin", " ", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}],
       ",", " ", 
      RowBox[{"{", 
       RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deutsch", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", "\t", "\n", 
  "\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opArrayQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opArrayQ", "[", "op_List", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Depth", "[", "op", "]"}], " ", "===", " ", "3"}], " ", "&&", 
      " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"op", ",", " ", "ListQ"}], "]"}]}], ",", "\n", "\t", "True", 
     ",", "\n", "\t", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opArrayQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opSpecFormat", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<S-\>\"", "|", "\"\<SigmaMinus\>\"", "|", "\"\<sigmaMinus\>\""}], 
    "]"}], " ", ":=", " ", "\"\<SigmaMinus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<S+\>\"", "|", "\"\<SigmaPlus\>\"", "|", "\"\<sigmaPlus\>\""}], "]"}],
    " ", ":=", " ", "\"\<SigmaPlus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<x\>\"", "|", "\"\<X\>\"", "|", "\"\<Sx\>\"", "|", "\"\<PauliX\>\"", 
     "|", "\"\<SigmaX\>\"", "|", "\"\<pauliX\>\"", "|", "\"\<sigmaX\>\""}], 
    "]"}], " ", ":=", " ", "\"\<SigmaX\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<y\>\"", "|", "\"\<Y\>\"", "|", "\"\<Sy\>\"", "|", "\"\<PauliY\>\"", 
     "|", "\"\<SigmaY\>\"", "|", "\"\<pauliY\>\"", "|", "\"\<sigmaY\>\""}], 
    "]"}], " ", ":=", " ", "\"\<SigmaY\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<z\>\"", "|", "\"\<Z\>\"", "|", "\"\<Sz\>\"", "|", "\"\<PauliZ\>\"", 
     "|", "\"\<SigmaZ\>\"", "|", "\"\<pauliZ\>\"", "|", "\"\<sigmaZ\>\""}], 
    "]"}], " ", ":=", " ", "\"\<SigmaZ\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Rx\>\"", "|", "\"\<RotX\>\""}], ",", " ", "\[Theta]_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RotX\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Ry\>\"", "|", "\"\<RotY\>\""}], ",", " ", "\[Theta]_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RotY\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Rz\>\"", "|", "\"\<RotZ\>\""}], ",", " ", "\[Theta]_"}], 
     "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RotZ\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<H\>\"", "|", "\"\<Hadamard\>\"", "|", "\"\<hadamard\>\""}], 
    "]"}], " ", ":=", " ", "\"\<Hadamard\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<Fourier\>\"", "|", "\"\<fourier\>\"", "|", "\"\<qft\>\"", "|", 
     "\"\<QFT\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<fourier\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<QFT\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<qft\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<RootNOT\>\"", "|", "\"\<RootNot\>\""}], "]"}], " ", ":=", 
   " ", "\"\<RootNOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<NOT\>\"", "|", "\"\<Not\>\"", "|", "\"\<not\>\""}], "]"}], 
   " ", ":=", " ", "\"\<NOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<CNOT\>\"", "|", "\"\<Cnot\>\"", "|", "\"\<CNot\>\"", "|", 
     "\"\<cnot\>\""}], "]"}], " ", ":=", " ", "\"\<CNOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<CPhase\>\"", "|", "\"\<CPHASE\>\"", "|", "\"\<cphase\>\"", "|", 
     "\"\<Cphase\>\""}], "]"}], " ", ":=", " ", "\"\<CPHASE\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<SUM\>\"", "|", "\"\<sum\>\"", "|", "\"\<Sum\>\""}], "]"}], 
   " ", ":=", " ", "\"\<SUM\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<RootSWAP\>\"", "|", "\"\<RootSwap\>\""}], "]"}], " ", ":=", 
   " ", "\"\<RootSWAP\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<SWAP\>\"", "|", "\"\<swap\>\"", "|", "\"\<Swap\>\""}], "]"}],
    " ", ":=", " ", "\"\<SWAP\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Deutsch\>\"", "|", "\"\<deutsch\>\""}], ",", " ", 
      "\[Theta]_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Deutsch\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{
    "\"\<Fredkin\>\"", "|", "\"\<fredkin\>\"", "|", "\"\<CSWAP\>\"", "|", 
     "\"\<CSwap\>\""}], "]"}], " ", ":=", " ", "\"\<Fredkin\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"\"\<Toffoli\>\"", "|", "\"\<toffoli\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Toffoli\>\"", ",", " ", "3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<toffoli\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Toffoli\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Toffoli\>\"", ",", " ", "n"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", "\"\<S\>\"", "]"}], " ", ":=", " ", 
   "\"\<S\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", "\"\<T\>\"", "]"}], " ", ":=", " ", 
   "\"\<T\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", "\"\<Tdag\>\"", "]"}], " ", ":=", " ", 
   "\"\<Tdag\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opSpecFormat", "[", "\"\<RandomUnitary\>\"", "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RandomUnitary\>\"", ",", " ", "2"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opSpecFormat", "[", "expr___", "]"}], " ", ":=", " ", "expr"}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "validAngleQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validAngleQ", "[", 
    RowBox[{
    "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|", 
     "\[Theta]_Integer", "|", "\[Theta]_Symbol", "|", "\[Theta]_Times"}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validAngleQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "validOpSpecQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RandomUnitary\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], 
   " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SigmaMinus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SigmaPlus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SigmaX\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SigmaY\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SigmaZ\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RotX\>\"", ",", " ", 
      RowBox[{"\[Theta]_", "?", "validAngleQ"}]}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RotY\>\"", ",", " ", 
      RowBox[{"\[Theta]_", "?", "validAngleQ"}]}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RotZ\>\"", ",", " ", 
      RowBox[{"\[Theta]_", "?", "validAngleQ"}]}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<Hadamard\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<Fourier\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Fourier\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<RootNOT\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<NOT\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<CNOT\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<CPHASE\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SUM\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<RootSWAP\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<SWAP\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Deutsch\>\"", ",", " ", 
      RowBox[{"\[Theta]_", "?", "validAngleQ"}]}], "}"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<Fredkin\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<Toffoli\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<S\>\"", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<T\>\"", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", "\"\<Tdag\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validOpSpecQ", "[", 
    RowBox[{"arr_", "?", "opArrayQ"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validOpSpecQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "inGateSetQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<SigmaX\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<SigmaY\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<SigmaZ\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<T\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inGateSetQ", "[", 
    RowBox[{"\"\<Tdag\>\"", ",", " ", "2", ",", " ", "1"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inGateSetQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opMat", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RandomUnitary\>\"", ",", " ", "n_Integer"}], "}"}], ",", 
     " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"randUn", "[", 
      RowBox[{"d", ",", " ", "n"}], "]"}], ",", " ", "pow"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SigmaX\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"paulix", "[", 
    RowBox[{"d", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SigmaZ\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"pauliz", "[", 
    RowBox[{"d", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SigmaY\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"pauliy", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SigmaPlus\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"sigmap", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SigmaMinus\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"sigmap", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RotX\>\"", ",", " ", "\[Theta]_"}], "}"}], ",", " ", "d_", 
     ",", " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Rx", "[", 
    RowBox[{"\[Theta]", " ", "*", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RotY\>\"", ",", " ", "\[Theta]_"}], "}"}], ",", " ", "d_", 
     ",", " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Ry", "[", 
    RowBox[{"\[Theta]", " ", "*", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RotZ\>\"", ",", " ", "\[Theta]_"}], "}"}], ",", " ", "d_", 
     ",", " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"\[Theta]", " ", "*", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"hadamard", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<NOT\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"hadamard", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<RootNOT\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"not", ",", " ", 
     RowBox[{"pow", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<S\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"pow", " ", "*", " ", 
     RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<T\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"pow", " ", "*", " ", 
     RowBox[{"Pi", "/", "4"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<Tdag\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Rz", "[", 
    RowBox[{
     RowBox[{"-", " ", "pow"}], " ", "*", " ", 
     RowBox[{"Pi", "/", "4"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Fourier\>\"", ",", " ", "n_"}], "}"}], ",", " ", "d_", ",",
      " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"fourier", "[", 
    RowBox[{
     RowBox[{"d", "^", "n"}], ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"cnot", "[", "d", "]"}], ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<CPHASE\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"cphase", "[", "d", "]"}], ",", " ", "pow"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SUM\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"sum", "[", "d", "]"}], ",", " ", "pow"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<SWAP\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"swap", "[", "d", "]"}], ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<RootSWAP\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"swap", "[", "d", "]"}], ",", " ", 
     RowBox[{"pow", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"fredkin", ",", " ", "pow"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Toffoli\>\"", ",", " ", "n_"}], "}"}], ",", " ", "d_", ",",
      " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"toffoli", "[", "n", "]"}], ",", " ", "pow"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opMat", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", "\[Theta]_"}], "}"}], ",", " ", 
     "d_", ",", " ", "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"deutsch", "[", "\[Theta]", "]"}], ",", " ", "pow"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opMat", "[", 
     RowBox[{"expr_", ",", " ", "d_", ",", " ", "pow_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"expr", ",", " ", "pow"}], "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opHasNameQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opHasNameQ", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"Keys", "[", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
      "\"\<OperationName\>\""}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "notAssociationQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notAssociationQ", "[", "expr___", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AssociationQ", "[", "expr", "]"}], ",", " ", "False", ",", " ",
       "True"}], "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "extractQMatProperty", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{"qop_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qop", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{"qop_", ",", " ", "\"\<Arity\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"qop", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Arity\>\""}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQMatProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<MatrixRepresentation\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Matrix\>\""}], "]"}], "]"}]}], ";"}], 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{"qop_", ",", " ", "\"\<InGateSetQ\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"qop", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<InGateSetQ\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{
     RowBox[{"qop_", "?", "opHasNameQ"}], ",", " ", "\"\<OperationName\>\""}],
     "]"}], " ", ":=", " ", 
   RowBox[{"qop", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<OperationName\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{"qop_", ",", " ", "\"\<HermitianQ\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"HermitianMatrixQ", "[", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Matrix\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMatProperty", "[", 
    RowBox[{"qop_", ",", " ", "\"\<UnitaryQ\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"UnitaryMatrixQ", "[", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Matrix\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQMatProperty", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "QuantumMatrixOperationQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMatrixOperationQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", 
       "QuantumMatrixOperation"}], ",", " ", "True", ",", " ", "False"}], 
     "]"}]}], ";"}], "\n", "\n", "\n", "\n", "\n", "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opSpecVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opSpecVisualize", "[", "op_", "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"opHasNameQ", "[", "op", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"op", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<OperationName\>\"", "]"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"op", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Matrix\>\"", "]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "opBaseVisualize", ",", " ", "opDimVisualize", ",", " ", 
    "opArityVisualize"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opBaseVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"opDimVisualize", "[", "qop", "]"}], ",", "\n", "\t", 
      RowBox[{"opArityVisualize", "[", "qop", "]"}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opDimVisualize", "[", "qop_", "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Qudit Dimension: \>\"", ",", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opArityVisualize", "[", "qop_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Arity: \>\"", ",", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<Arity\>\""}], "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n", 
  "\t\t "}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "opExpandedVisualize", ",", " ", "hermQVisualize", ",", " ", 
    "unitaryQVisualize"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opExpandedVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"hermQVisualize", "[", "qop", "]"}], ",", "\n", "\t", 
      RowBox[{"unitaryQVisualize", "[", "qop", "]"}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hermQVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"qop", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "\"\<Matrix\>\""}], "]"}], "]"}]}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Hermitian: \>\"", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"HermitianMatrixQ", "[", "mat", "]"}], ",", " ", "\n", 
             "\t\t", "\"\<True\>\"", ",", " ", "\"\<False\>\""}], "]"}]}], 
          "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], 
     "]"}]}], ";"}], "\n", "\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryQVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"qop", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "\"\<Matrix\>\""}], "]"}], "]"}]}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Unitary: \>\"", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"UnitaryMatrixQ", "[", "mat", "]"}], ",", " ", "\n", 
             "\t\t", "\"\<True\>\"", ",", " ", "\"\<False\>\""}], "]"}]}], 
          "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], 
     "]"}]}], ";"}], "\n", "\t\t "}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opMatVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opMatVisualize", "[", 
     RowBox[{"qop2_QuantumMatrixOperation", ",", " ", "fmt_"}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
     RowBox[{
     "QuantumMatrixOperation", ",", "\n", "\t\t", "qop2", ",", "\n", "\t\t", 
      RowBox[{"opSpecVisualize", "[", "qop2", "]"}], ",", "\n", "\t\t", 
      RowBox[{"opBaseVisualize", "[", "qop2", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"opExpandedVisualize", "[", "qop2", "]"}], ",", " ", "\n", 
      "\t\t", "fmt"}], "]"}]}], ";"}], "\n", "\t\t", "\n"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"QuantumMatrixOperation", ",", " ", "iQMatrix"}], "]"}], ";"}], 
  "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumMatrixOperation", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
      
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Transform", " ", "input", " ", "into", " ", "a", " ", "normal", " ", 
     "form"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQMatrix", "[", 
     RowBox[{"opSpec_", ",", " ", "dim_", ",", " ", "pow_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mat", ",", " ", "assoc", ",", " ", "gateOpBool"}], "}"}], ",",
       "\n", "\t", 
      RowBox[{
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"opMat", "[", 
         RowBox[{"opSpec", ",", " ", "dim", ",", " ", "pow"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], 
           ",", " ", "\n", "\t\t", 
           RowBox[{"\"\<Matrix\>\"", " ", "\[Rule]", " ", "mat"}], ",", "\n", 
           "\t\t", 
           RowBox[{"\"\<Arity\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"dim", ",", " ", 
              RowBox[{"Length", "[", "mat", "]"}]}], "]"}]}]}], "}"}], 
         "|>"}]}], ";", "\n", "\t", 
       RowBox[{"gateOpBool", " ", "=", " ", 
        RowBox[{"inGateSetQ", "[", 
         RowBox[{"opSpec", ",", " ", "dim", ",", " ", "pow"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<InGateSetQ\>\"", "]"}], " ", "=", " ", 
        "gateOpBool"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"stateArrayQ", "[", "opSpec", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"assoc", "[", "\"\<OperationName\>\"", "]"}], " ", "=", " ",
           "\n", "\t\t", 
          RowBox[{"Which", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"StringQ", "[", "opSpec", "]"}], ",", " ", "\n", "\t\t\t",
             "opSpec", ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ListQ", "[", "opSpec", "]"}], " ", "&&", " ", 
             RowBox[{"StringQ", "[", 
              RowBox[{"opSpec", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
            RowBox[{"opSpec", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\n", "\t\t\t", 
        "]"}], ";", "\n", "\t", 
       RowBox[{"QuantumMatrixOperation", "[", "assoc", "]"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMatrixOperation", " ", "/:", " ", 
    RowBox[{"qop", ":", 
     RowBox[{"QuantumMatrixOperation", "[", 
      RowBox[{
       RowBox[{"spec_", "?", "notAssociationQ"}], ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ":=", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"validOpSpecQ", "[", 
       RowBox[{"opSpecFormat", "[", "spec", "]"}], "]"}], ",", " ", "\n", 
      "\t\t", 
      RowBox[{"iQMatrix", "[", 
       RowBox[{
        RowBox[{"opSpecFormat", "[", "spec", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<Power\>\"", "]"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"HoldForm", "[", "qop", "]"}]}], "]"}]}], ";"}], "\n", "\t", 
  "\n", "\t\t", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Front", " ", "End", " ", "Fornatting", " ", "of", " ", "Mat", " ", 
     "Op"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMatrixOperation", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qmat1", ":", 
       RowBox[{"QuantumMatrixOperation", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"opMatVisualize", "[", 
     RowBox[{"qmat1", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMatrixOperation", " ", "/:", " ", 
    RowBox[{"qmat_QuantumMatrixOperation", "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"extractQMatProperty", "[", 
     RowBox[{"qmat", ",", " ", "prop"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "explicitQuantumMatrixOpQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "explicitQuantumMatrixOpQ", "[", "op_QuantumMatrixOperation", "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "op", "]"}], " ", "===", " ", "1"}], " ", "&&", 
      " ", 
      RowBox[{"AssociationQ", "[", 
       RowBox[{"op", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "True", ",", " ", 
     "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"explicitQuantumMatrixOpQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7339531855378103`*^9, 3.733953193736526*^9}, {
   3.733953291402831*^9, 3.733953291655826*^9}, {3.733953356602941*^9, 
   3.7339533599369373`*^9}, {3.733953413983665*^9, 3.733953463786824*^9}, {
   3.7339535818696823`*^9, 3.73395368929352*^9}, 3.733955597034079*^9, {
   3.733955752748159*^9, 3.733955788670369*^9}, {3.7339558189693193`*^9, 
   3.73395584212704*^9}, {3.7339559227105*^9, 3.733956032251554*^9}, {
   3.7339560694680853`*^9, 3.7339561416349583`*^9}, {3.733956269689453*^9, 
   3.733956281718958*^9}, {3.7339563276362047`*^9, 3.733956360103547*^9}, {
   3.733956537119416*^9, 3.733956541310691*^9}, {3.733956987538837*^9, 
   3.733957054584132*^9}, {3.733957210616222*^9, 3.73395721169724*^9}, {
   3.733957246729866*^9, 3.733957342947966*^9}, {3.733957452188628*^9, 
   3.733957548896503*^9}, {3.733957592467045*^9, 3.733957597509281*^9}, {
   3.733957654239311*^9, 3.7339576932197533`*^9}, {3.733957794574862*^9, 
   3.7339577970593777`*^9}, {3.73395794680247*^9, 3.733957981034211*^9}, {
   3.733958319771714*^9, 3.733958321856127*^9}, {3.733958943222035*^9, 
   3.733958990170392*^9}, {3.733959027391675*^9, 3.733959103936726*^9}, {
   3.7339591779326677`*^9, 3.7339591975990887`*^9}, {3.7339592598114243`*^9, 
   3.7339593046338797`*^9}, {3.733959344398549*^9, 3.733959360860325*^9}, {
   3.733959406721651*^9, 3.7339594758428*^9}, {3.733959513826334*^9, 
   3.733959603748598*^9}, {3.733959639127391*^9, 3.7339597612874603`*^9}, {
   3.733959882628539*^9, 3.73395991412929*^9}, {3.733960047109996*^9, 
   3.7339601634741697`*^9}, {3.733960239500149*^9, 3.7339602906445208`*^9}, 
   3.733960336238309*^9, {3.733960398145279*^9, 3.73396056747509*^9}, {
   3.7339606033296413`*^9, 3.73396063005584*^9}, {3.73396066626488*^9, 
   3.733960700729742*^9}, {3.733960755978115*^9, 3.733960822611697*^9}, {
   3.733961524305545*^9, 3.733961559301181*^9}, {3.7339617279510098`*^9, 
   3.7339617284909477`*^9}, {3.7339617718652067`*^9, 3.733961775211644*^9}, {
   3.733961894935294*^9, 3.733962034902933*^9}, {3.733962194820134*^9, 
   3.7339622387293663`*^9}, {3.733962344469531*^9, 3.733962401341981*^9}, {
   3.7339624545658207`*^9, 3.733962724062716*^9}, {3.733962757318898*^9, 
   3.733962973368018*^9}, {3.7339630491331*^9, 3.733963090814829*^9}, {
   3.733963162755665*^9, 3.733963224594325*^9}, {3.73396327675185*^9, 
   3.733963329644232*^9}, {3.7339633628520937`*^9, 3.733963410407724*^9}, {
   3.733963472097623*^9, 3.733963585061397*^9}, {3.73396365604745*^9, 
   3.7339636730245333`*^9}, {3.7339637086393433`*^9, 
   3.7339637935803833`*^9}, {3.733963895780356*^9, 3.733963923361615*^9}, {
   3.733963954633049*^9, 3.733963955372123*^9}, {3.7340211585987797`*^9, 
   3.734021158859932*^9}, {3.734021603710844*^9, 3.734021692958296*^9}, {
   3.734021817275546*^9, 3.7340220461421337`*^9}, {3.73402210384687*^9, 
   3.734022207594282*^9}, {3.734022252710888*^9, 3.73402228954072*^9}, {
   3.7340224000786133`*^9, 3.734022437524661*^9}, {3.734022520425076*^9, 
   3.734022524983445*^9}, {3.73402261358325*^9, 3.734022632101119*^9}, {
   3.734022703542145*^9, 3.7340230187137003`*^9}, {3.7340230534627037`*^9, 
   3.734023143517947*^9}, 3.7340231890036087`*^9, {3.734024076137097*^9, 
   3.734024158014925*^9}, {3.734024277538929*^9, 3.734024618197522*^9}, {
   3.7340247193880377`*^9, 3.734024836085937*^9}, {3.734024885397193*^9, 
   3.734024950760558*^9}, {3.7340251120936193`*^9, 3.7340252047067547`*^9}, {
   3.73402532443381*^9, 3.7340253257109747`*^9}, {3.734025453243067*^9, 
   3.734025469605098*^9}, {3.7340255059100122`*^9, 3.734025506388496*^9}, {
   3.734025565977977*^9, 3.73402557811133*^9}, 3.734025613171678*^9, 
   3.734025643465087*^9, 3.734025704866776*^9, {3.734025808047357*^9, 
   3.734025831871266*^9}, {3.734025866216529*^9, 3.734025882147552*^9}, {
   3.73402596696141*^9, 3.734025987950115*^9}, {3.7340263041215057`*^9, 
   3.734026350141918*^9}, {3.7340264435755453`*^9, 3.734026557041452*^9}, {
   3.734026589623127*^9, 3.7340265967357407`*^9}, 3.734026633059739*^9, {
   3.7340266726871347`*^9, 3.734026678139979*^9}, {3.734026747808401*^9, 
   3.734026787857978*^9}, {3.734026842603044*^9, 3.734026845424694*^9}, {
   3.734026975599226*^9, 3.734027031850244*^9}, {3.73402717178439*^9, 
   3.7340272005001793`*^9}, {3.734028718895267*^9, 3.734028815844674*^9}, {
   3.734029653987814*^9, 3.734029654560902*^9}, {3.734045181645279*^9, 
   3.7340451918394613`*^9}, {3.7341428179486227`*^9, 3.734142860940296*^9}, {
   3.734148349502749*^9, 3.734148379514736*^9}, {3.7341488956336403`*^9, 
   3.73414893574102*^9}, {3.7346526370633793`*^9, 3.7346526436835527`*^9}, {
   3.734652809297331*^9, 3.73465281309604*^9}, {3.734701417265112*^9, 
   3.7347014634184713`*^9}, {3.735846252980513*^9, 3.735846269705865*^9}, {
   3.7360473400401173`*^9, 3.736047375630417*^9}, {3.736047484224832*^9, 
   3.736047490469963*^9}, {3.736048141574664*^9, 3.736048145917941*^9}, {
   3.736049094482822*^9, 
   3.736049134783585*^9}},ExpressionUUID->"abc8bd7b-6cc8-4fba-b2d7-\
eb9919173158"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumMeasurement", "Section",
 CellChangeTimes->{{3.7337676918020697`*^9, 3.733767698120964*^9}, {
  3.734062514479329*^9, 
  3.7340625159175*^9}},ExpressionUUID->"fb9a433d-e142-4292-93f7-b86b239d83ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"validObsSpecQ", ",", " ", "validPOVMSpecQ"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validObsSpecQ", "[", 
    RowBox[{
    "\"\<SigmaX\>\"", "|", "\"\<SigmaY\>\"", "|", "\"\<SigmaZ\>\"", "|", 
     "\"\<Hadamard\>\""}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validObsSpecQ", "[", "expr_", "]"}], " ", ":=", " ", 
    RowBox[{"HermitianMatrixQ", "[", "expr", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validPOVMSpecQ", "[", "expr_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"expr", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Simplify", " ", "@", " ", 
           RowBox[{"Total", " ", "@", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ConjugateTranspose", "[", "#", "]"}], ".", "#"}], 
               "&"}], ",", " ", "expr"}], "]"}]}]}], ")"}], " ", "===", " ", 
         RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ",", "\n", "\t\t", 
        "True", ",", " ", "False"}], "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "inMeasSetQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inMeasSetQ", "[", 
    RowBox[{
     RowBox[{"\"\<SigmaX\>\"", "|", "\"\<SigmaZ\>\""}], ",", " ", "2"}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inMeasSetQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "obsMatrix", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"obsMatrix", "[", 
    RowBox[{"\"\<SigmaX\>\"", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   RowBox[{"paulix", "[", 
    RowBox[{"d", ",", " ", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"obsMatrix", "[", 
    RowBox[{"\"\<SigmaY\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   "pauliy"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"obsMatrix", "[", 
    RowBox[{"\"\<SigmaZ\>\"", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   RowBox[{"pauliz", "[", 
    RowBox[{"d", ",", " ", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"obsMatrix", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   "hadamard"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"obsMatrix", "[", "expr_", "]"}], " ", ":=", " ", "expr"}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hasEigsQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hasEigsQ", "[", "qmeas_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"qmeas", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
        "\"\<Eigenvalues\>\""}], "]"}], ",", " ", "True", ",", " ", "False"}],
      "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hasMsQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hasMsQ", "[", "qmeas_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"qmeas", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "\"\<Ms\>\""}], 
       "]"}], ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "extractQMeasProperty", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{"qmeas_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{"qmeas_", ",", " ", "\"\<Arity\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Arity\>\""}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQMeasProperty", "[", 
     RowBox[{"qmeas_", ",", " ", "\"\<MeasurementType\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"qmeas", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<MeasurementType\>\""}], "]"}], "]"}]}], 
   ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{"qmeas_", ",", " ", "\"\<InMeasurementSetQ\>\""}], "]"}], " ", ":=",
    " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<InMeasurementSetQ\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{
     RowBox[{"qmeas_", "?", "opHasNameQ"}], ",", " ", 
     "\"\<OperationName\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<OperationName\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{
     RowBox[{"qmeas_", "?", "hasEigsQ"}], ",", " ", "\"\<Eigenvalues\>\""}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Eigenvalues\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{
     RowBox[{"qmeas_", "?", "hasEigsQ"}], ",", " ", "\"\<Eigenvectors\>\""}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Eigenvectors\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQMeasProperty", "[", 
    RowBox[{
     RowBox[{"qmeas_", "?", "hasMsQ"}], ",", " ", "\"\<Ms\>\""}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"qmeas", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Ms\>\""}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQMeasProperty", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "QuantumMeasurementQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMeasurementQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", 
       "QuantumMeasurement"}], ",", " ", "True", ",", " ", "False"}], "]"}]}],
    ";"}], "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "measSpecVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measSpecVisualize", "[", "meas1_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"meas1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
        "\"\<OperationName\>\""}], "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{"meas1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<OperationName\>\"", "]"}], 
      ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"meas1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<MeasurementType\>\"", 
       "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "measBaseVisualize", ",", " ", "measDimVisualize", ",", " ", 
    "measArityVisualize"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measBaseVisualize", "[", "meas4_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"measDimVisualize", "[", "meas4", "]"}], ",", "\n", "\t", 
      RowBox[{"measArityVisualize", "[", "meas4", "]"}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measDimVisualize", "[", "meas_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Qudit Dimension: \>\"", ",", 
         RowBox[{"meas", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"measArityVisualize", "[", "meas_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Arity: \>\"", ",", 
         RowBox[{"meas", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<Arity\>\""}], "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n", 
  "\t\t "}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "MeasVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MeasVisualize", "[", 
     RowBox[{"qmeas2_QuantumMeasurement", ",", " ", "fmt_"}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
     RowBox[{
     "QuantumMeasurement", ",", "\n", "\t\t", "qmeas2", ",", "\n", "\t\t", 
      RowBox[{"measSpecVisualize", "[", "qmeas2", "]"}], ",", "\n", "\t\t", 
      RowBox[{"measBaseVisualize", "[", "qmeas2", "]"}], ",", " ", "\n", 
      "\t\t", 
      RowBox[{"{", "}"}], ",", "\n", "\t\t", "fmt"}], "]"}]}], ";"}], "\n", 
  "\t\t ", "\n", "\n", "\t\t", "\n", "\t\t", "\n", "\t\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "QuantumMeasurement", ",", " ", "iQObservable", ",", " ", "iQPOVM"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQObservable", "[", 
     RowBox[{"obs_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mat", ",", " ", "assoc", ",", " ", "measOpBool", ",", " ", "eigVals", 
        ",", " ", "eigVecs"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"obsMatrix", "[", 
         RowBox[{"obs", ",", " ", "d"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
           " ", "\n", "\t\t", 
           RowBox[{
           "\"\<MeasurementType\>\"", " ", "\[Rule]", " ", 
            "\"\<Projection\>\""}], ",", "\n", "\t\t", 
           RowBox[{"\"\<Matrix\>\"", " ", "\[Rule]", " ", "mat"}], ",", "\n", 
           "\t\t", 
           RowBox[{"\"\<Arity\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"d", ",", " ", 
              RowBox[{"Length", "[", "mat", "]"}]}], "]"}]}]}], "}"}], 
         "|>"}]}], ";", "\n", "\t", 
       RowBox[{"measOpBool", " ", "=", " ", 
        RowBox[{"inMeasSetQ", "[", 
         RowBox[{"obs", ",", " ", "d"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<InMeasurementSetQ\>\"", "]"}], " ", "=", 
        " ", "measOpBool"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"StringQ", "[", "obs", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"assoc", "[", "\"\<OperationName\>\"", "]"}], " ", "=", " ",
           "obs"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", "obs", "]"}], " ", "&&", " ", 
          RowBox[{"StringQ", "[", 
           RowBox[{"obs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"assoc", "[", "\"\<OperationName\>\"", "]"}], " ", "=", " ", 
          RowBox[{"obs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eigVals", ",", " ", "eigVecs"}], "}"}], " ", "=", " ", 
        RowBox[{"Eigensystem", "[", "mat", "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<Eigenvalues\>\"", "]"}], " ", "=", " ", 
        "eigVals"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<Eigenvectors\>\"", "]"}], " ", "=", " ", 
        RowBox[{"Normalize", " ", "/@", " ", "eigVecs"}]}], ";", "\n", "\t", 
       RowBox[{"QuantumMeasurement", "[", "assoc", "]"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQPOVM", "[", 
     RowBox[{"povm_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "assoc", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "d"}], ",", 
           " ", "\n", "\t\t", 
           RowBox[{
           "\"\<MeasurementType\>\"", " ", "\[Rule]", " ", "\"\<POVM\>\""}], 
           ",", "\n", "\t\t", 
           RowBox[{
           "\"\<InMeasurementSetQ\>\"", " ", "\[Rule]", " ", "False"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<Ms\>\"", " ", "\[Rule]", " ", "povm"}], ",", "\n", 
           "\t\t", 
           RowBox[{"\"\<Arity\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"d", ",", " ", 
              RowBox[{"Length", "[", 
               RowBox[{"povm", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], "}"}], 
         "|>"}]}], ";", "\n", "\t", 
       RowBox[{"QuantumMeasurement", "[", "assoc", "]"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "QuantumMeasurement", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"QuantumMeasurement", " ", "/:", " ", 
   RowBox[{"qmeas", ":", 
    RowBox[{"QuantumMeasurement", "[", 
     RowBox[{
      RowBox[{"\"\<Observable\>\"", " ", "\[Rule]", " ", "obs_"}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], " ", ":=", "\n", "\t", 
   
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"validObsSpecQ", "[", "obs", "]"}], ",", " ", "\n", "\t\t", 
     RowBox[{"iQObservable", "[", 
      RowBox[{"obs", ",", " ", 
       RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}], "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"HoldForm", "[", "qmeas", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMeasurement", " ", "/:", " ", 
    RowBox[{"qmeas", ":", 
     RowBox[{"QuantumMeasurement", "[", 
      RowBox[{
       RowBox[{"\"\<POVM\>\"", " ", "\[Rule]", " ", "povm_"}], ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], " ", ":=", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"validPOVMSpecQ", "[", "povm", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"iQPOVM", "[", 
       RowBox[{"povm", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}], "]"}], 
      ",", "\n", "\t\t", 
      RowBox[{"HoldForm", "[", "qmeas", "]"}]}], "]"}]}], ";"}], "\n", "\t\t",
   "\n", "\t\t", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Front", " ", "End", " ", "Fornatting", " ", "of", " ", "Measurement"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMeasurement", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qmeas1", ":", 
       RowBox[{"QuantumMeasurement", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"MeasVisualize", "[", 
     RowBox[{"qmeas1", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMeasurement", " ", "/:", " ", 
    RowBox[{"qmeas_QuantumMeasurement", "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"extractQMeasProperty", "[", 
     RowBox[{"qmeas", ",", " ", "prop"}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "explicitQuantumMeasurementQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "explicitQuantumMeasurementQ", "[", "meas_QuantumMeasurement", "]"}], " ", 
   ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "meas", "]"}], " ", "===", " ", "1"}], " ", "&&",
       " ", 
      RowBox[{"AssociationQ", "[", 
       RowBox[{"meas", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", " ", "True", ",", " ", 
     "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"explicitQuantumMeasurementQ", "[", "expr___", "]"}], " ", ":=", 
    " ", "False"}], ";"}], "\n", "\n", "\n", "\n", "\n", "\n", "\t", "\n", 
  "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "singleQuditProjector", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQuditProjector", "[", 
     RowBox[{"qmeas_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"projs", ",", " ", "dim", ",", " ", "reps"}], "}"}], ",", "\n",
       "\t", 
      RowBox[{
       RowBox[{"projs", " ", "=", " ", 
        RowBox[{"eigToProjector", " ", "/@", " ", 
         RowBox[{"qmeas", "[", "\"\<Eigenvectors\>\"", "]"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}], " ", "===", " ",
           "1"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Return", "[", "projs", "]"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"id", "[", "dim", "]"}], ",", " ", 
          RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReplacePart", "[", 
            RowBox[{"reps", ",", " ", 
             RowBox[{"pos", " ", "\[Rule]", " ", "#"}]}], "]"}], "&"}], ",", 
          " ", "projs"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KroneckerProduct", " ", "@@", " ", "#"}], " ", "&"}], ",",
           " ", "reps"}], "]"}]}], ";", "\n", "\t", "reps"}]}], "\n", "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "multiQuditProjector", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"multiQuditProjector", "[", 
     RowBox[{"qmeas_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "projs", ",", " ", "qObjs", ",", " ", "arity", ",", " ", "n", ",", " ",
         "dim", ",", " ", "passiveObjs", ",", " ", "order", ",", " ", "reps", 
        ",", " ", "passiveRep", ",", " ", "shape", ",", " ", "tpLevels"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"projs", " ", "=", " ", 
        RowBox[{"eigToProjector", " ", "/@", " ", 
         RowBox[{"qmeas", "[", "\"\<Eigenvectors\>\"", "]"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t",
        "\n", "\t", 
       RowBox[{"qObjs", " ", "=", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], ";", "\n", "\t", 
       RowBox[{"arity", " ", "=", " ", 
        RowBox[{"qmeas", "[", "\"\<Arity\>\"", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"passiveObjs", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{"qObjs", ",", " ", "pos"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"order", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"pos", ",", " ", "passiveObjs"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"passiveRep", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"id", "[", "dim", "]"}], ",", " ", 
          RowBox[{"Length", " ", "@", " ", "passiveObjs"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"shape", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"dim", ",", " ", 
          RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", " ", "@", " ", "passiveObjs"}], " ", "===", " ", 
           "0"}], ",", "\n", "\t\t", "projs", ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"KroneckerProduct", " ", "@@", " ", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", " ", "passiveRep"}], "]"}]}], 
             "&"}], ",", " ", "projs"}], "]"}]}], "]"}]}], ";", "\t", "\n", 
       "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"#", ",", " ", "shape"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"tpLevels", " ", "=", " ", 
        RowBox[{"InversePermutation", "[", 
         RowBox[{"Ordering", " ", "@", " ", "order"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"tpLevels", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"tpLevels", ",", " ", 
          RowBox[{"tpLevels", " ", "+", " ", "n"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"#", ",", " ", "tpLevels"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"Flatten", " ", "@", " ", "#"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"dim", "^", "n"}], ",", " ", 
               RowBox[{"dim", "^", "n"}]}], "}"}]}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", "reps"}]}], "\n", "\t", "]"}]}],
    ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "singleQuditPOVM", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQuditPOVM", "[", 
     RowBox[{"qmeas_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"povm", ",", " ", "dim", ",", " ", "reps"}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"povm", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ConjugateTranspose", "[", "#", "]"}], ".", "#"}], "&"}], 
          ",", " ", 
          RowBox[{"qmeas", "[", "\"\<Ms\>\"", "]"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}], " ", "===", " ",
           "1"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Return", "[", "povm", "]"}]}], "]"}], ";", "\n", "\t\t", 
       "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"id", "[", "dim", "]"}], ",", " ", 
          RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReplacePart", "[", 
            RowBox[{"reps", ",", " ", 
             RowBox[{"pos", " ", "\[Rule]", " ", "#"}]}], "]"}], "&"}], ",", 
          " ", "povm"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KroneckerProduct", " ", "@@", " ", "#"}], " ", "&"}], ",",
           " ", "reps"}], "]"}]}], ";", "\n", "\t", "reps"}]}], "\n", "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "multiQuditPOVM", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"multiQuditPOVM", "[", 
     RowBox[{"qmeas_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "povm", ",", " ", "qObjs", ",", " ", "arity", ",", " ", "n", ",", " ", 
        "dim", ",", " ", "passiveObjs", ",", " ", "order", ",", " ", "reps", 
        ",", " ", "passiveRep", ",", " ", "shape", ",", " ", "tpLevels"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"povm", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ConjugateTranspose", "[", "#", "]"}], ".", "#"}], "&"}], 
          ",", " ", 
          RowBox[{"qmeas", "[", "\"\<Ms\>\"", "]"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t",
        "\n", "\t", 
       RowBox[{"qObjs", " ", "=", " ", 
        RowBox[{"Range", "[", "n", "]"}]}], ";", "\n", "\t", 
       RowBox[{"arity", " ", "=", " ", 
        RowBox[{"qmeas", "[", "\"\<Arity\>\"", "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"passiveObjs", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{"qObjs", ",", " ", "pos"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"order", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"pos", ",", " ", "passiveObjs"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"passiveRep", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"id", "[", "dim", "]"}], ",", " ", 
          RowBox[{"Length", " ", "@", " ", "passiveObjs"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"shape", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"dim", ",", " ", 
          RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", " ", "@", " ", "passiveObjs"}], " ", "===", " ", 
           "0"}], ",", "\n", "\t\t", "povm", ",", "\n", "\t\t", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"KroneckerProduct", " ", "@@", " ", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", " ", "passiveRep"}], "]"}]}], 
             "&"}], ",", " ", "povm"}], "]"}]}], "]"}]}], ";", "\t", "\n", 
       "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"#", ",", " ", "shape"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"tpLevels", " ", "=", " ", 
        RowBox[{"InversePermutation", "[", 
         RowBox[{"Ordering", " ", "@", " ", "order"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"tpLevels", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"tpLevels", ",", " ", 
          RowBox[{"tpLevels", " ", "+", " ", "n"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"#", ",", " ", "tpLevels"}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"reps", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"Flatten", " ", "@", " ", "#"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"dim", "^", "n"}], ",", " ", 
               RowBox[{"dim", "^", "n"}]}], "}"}]}], "]"}], "&"}], ",", " ", 
          "reps"}], "]"}]}], ";", "\n", "\t", "reps"}]}], "\n", "\t", "]"}]}],
    ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "qMeasProbsAndVals", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qMeasProbsAndVals", "[", 
     RowBox[{"qs_", ",", " ", "qm_", ",", " ", "ord_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dm", ",", " ", "mType", ",", " ", "arity", ",", " ", "probs", ",", 
        " ", "vals"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"mType", " ", "=", " ", 
        RowBox[{"qm", "[", "\"\<MeasurementType\>\"", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mType", " ", "===", " ", "\"\<Projection\>\""}], ",", "\n",
           "\t\t", 
          RowBox[{"qm", "[", "\"\<Eigenvalues\>\"", "]"}], ",", "\n", "\t\t", 
          
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"qm", "[", "\"\<Ms\>\"", "]"}], "]"}], "]"}]}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"arity", " ", "=", " ", 
        RowBox[{"qm", "[", "\"\<Arity\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"probs", " ", "=", " ", 
        RowBox[{"Which", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"arity", " ", "===", " ", "1"}], " ", "&&", " ", 
           RowBox[{"mType", " ", "===", " ", "\"\<Projection\>\""}]}], ",", 
          "\n", "\t\t", 
          RowBox[{"singleQuditProjector", "[", 
           RowBox[{"qm", ",", " ", "qs", ",", " ", 
            RowBox[{"ord", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"arity", " ", "===", " ", "1"}], " ", "&&", " ", 
           RowBox[{"mType", " ", "===", " ", "\"\<POVM\>\""}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"singleQuditPOVM", "[", 
           RowBox[{"qm", ",", " ", "qs", ",", " ", 
            RowBox[{"ord", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"mType", " ", "===", " ", "\"\<Projection\>\""}], ",", "\n",
           "\t\t", 
          RowBox[{"multiQuditProjector", "[", 
           RowBox[{"qm", ",", " ", "qs", ",", " ", "ord"}], "]"}], ",", "\n", 
          "\t\t", "True", ",", "\n", "\t\t", 
          RowBox[{"multiQuditPOVM", "[", 
           RowBox[{"qm", ",", " ", "qs", ",", " ", "ord"}], "]"}]}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"probs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{"#", ".", "dm"}], "]"}], "&"}], ",", " ", "probs"}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"probs", ",", " ", "vals"}], "}"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "QuantumMeasurementDistribution", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMeasurementDistribution", "[", 
    RowBox[{
     RowBox[{"ord_", " ", "\[Rule]", " ", 
      RowBox[{"qm_QuantumMeasurement", "?", "explicitQuantumMeasurementQ"}]}],
      ",", " ", "\n", "\t", 
     RowBox[{
     "qs_QuantumFiniteDimensionalState", "?", "explicitQuantumStateQ"}]}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"probVals", " ", "=", " ", 
       RowBox[{"qMeasProbsAndVals", "[", 
        RowBox[{"qs", ",", " ", "qm", ",", " ", "ord"}], "]"}]}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{"EmpiricalDistribution", "[", 
      RowBox[{
       RowBox[{"probVals", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
       RowBox[{"probVals", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.734044948954089*^9, 3.7340449915643587`*^9}, {
   3.734045367841132*^9, 3.734045368829873*^9}, {3.7340456719338627`*^9, 
   3.7340457830050507`*^9}, {3.73404664764353*^9, 3.734046697267277*^9}, {
   3.734046733014422*^9, 3.734046762982256*^9}, {3.7340472881252604`*^9, 
   3.734047290673436*^9}, {3.734047387650609*^9, 3.734047394144945*^9}, 
   3.734047456490312*^9, 3.734047813756851*^9, {3.734063171365548*^9, 
   3.734063267213797*^9}, {3.734063306113686*^9, 3.7340633324771338`*^9}, {
   3.734063396533392*^9, 3.734063502614254*^9}, {3.734063636993441*^9, 
   3.734063674431067*^9}, {3.734063716408373*^9, 3.734063757136174*^9}, {
   3.73406380541434*^9, 3.734063827804668*^9}, {3.734063919859942*^9, 
   3.7340640417028427`*^9}, {3.734064071752136*^9, 3.73406411892749*^9}, {
   3.734064160720152*^9, 3.7340642208474407`*^9}, {3.734064370239728*^9, 
   3.734064371142384*^9}, {3.734064401508803*^9, 3.7340644430340242`*^9}, {
   3.7340644928125267`*^9, 3.7340648800834637`*^9}, {3.7340649713218*^9, 
   3.734065099529249*^9}, {3.734065522772599*^9, 3.734065528465283*^9}, {
   3.734065636155514*^9, 3.734065737151198*^9}, {3.73406593066788*^9, 
   3.73406620331842*^9}, {3.734066247302915*^9, 3.7340662909557457`*^9}, {
   3.734066552099663*^9, 3.734066652004574*^9}, {3.734066727659176*^9, 
   3.73406680371583*^9}, {3.73406691326318*^9, 3.734066915957663*^9}, {
   3.734066964082676*^9, 3.7340670347285557`*^9}, {3.7340670694418*^9, 
   3.73406712053827*^9}, {3.734701300180379*^9, 3.734701324665196*^9}, {
   3.7358615480898933`*^9, 3.735861597146639*^9}, {3.7358740304317513`*^9, 
   3.735874055253277*^9}, {3.735875865915275*^9, 3.7358758699518213`*^9}, {
   3.73587685986333*^9, 3.7358768782523947`*^9}, {3.735877012328905*^9, 
   3.735877017136702*^9}, {3.735877064963696*^9, 3.735877271789213*^9}, {
   3.7358773295229063`*^9, 3.7358773742989264`*^9}, {3.735877405381536*^9, 
   3.735877444667493*^9}, {3.7358774907796392`*^9, 3.7358774916139393`*^9}, {
   3.7358775518095083`*^9, 3.7358775863342867`*^9}, {3.735877802960205*^9, 
   3.7358779917158213`*^9}, {3.735878023445833*^9, 3.735878200452029*^9}, {
   3.735878258583311*^9, 3.735878260625909*^9}, {3.735878293968861*^9, 
   3.735878320806285*^9}, {3.7358785306289167`*^9, 3.735878563169142*^9}, {
   3.7358786317549*^9, 3.735878767164508*^9}, {3.735878896575636*^9, 
   3.7358789053307953`*^9}, {3.735879015652348*^9, 3.735879160789863*^9}, {
   3.735879285669188*^9, 
   3.735879289690126*^9}},ExpressionUUID->"0b736554-ebdb-40d8-9aaa-\
ef605b32dd33"],

Cell[CellGroupData[{

Cell["QuantumEntangledObjectsQ", "Subsection",
 CellChangeTimes->{{3.723215005894731*^9, 
  3.7232150159726257`*^9}},ExpressionUUID->"1ce4b915-fff1-483c-baa1-\
5e9e64578675"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumEntangledObjectsQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "inputs"}], "=", 
   RowBox[{
   "\"\<Arguments to QuantumEntangledObjectsQ must be \>\"", "<>", "\n", 
    "\t", "\"\<a pure quantum finiteDimensional state qstate and a \
bipartition of the quantum objects \>\"", "<>", "\n", "\t", 
    "\"\<in qstate\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "qstate"}], "=", 
   "\"\<Argument `1` at position 1 is not a quantum finiteDimensional state\>\
\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "pureState"}], "=", 
   "\"\<Argument `1` at position 1 must be pure\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "splitList"}], "=", 
   "\"\<Argument `1` at position 2 must be a list\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "splitLength"}], "=", 
   "\"\<Argument `1` at position 2 must have length 2\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], "=", 
   RowBox[{
   "\"\<All elements of argument `2` at position `3` in `4` \>\"", "<>", "\n",
     "\t", "\"\<must be quantum objects in `1`\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "unique"}], "=", 
   "\"\<All elements of Flatten @ `1` at position 2 must be unique\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "::", "bipartition"}], "=", 
    RowBox[{
    "\"\<Argument `2` at position 2 must form a \>\"", "<>", "\n", "\t", 
     "\"\<valid bipartition of the quantum objects in `1`\>\""}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "[", 
     RowBox[{"qs_", ",", " ", "split_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "redState", ",", " ", "tracedObjects", ",", " ", "redDM", ",", " ", 
        "concurrence"}], "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"validEntangledStateQ", "[", "qs", "]"}]}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"validBipartitionQ", "[", 
           RowBox[{"qs", ",", " ", "split"}], "]"}]}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"tracedObjects", " ", "=", " ", 
        RowBox[{"split", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"redState", " ", "=", " ", 
        RowBox[{"QuantumPartialTr", "[", 
         RowBox[{"qs", ",", " ", "tracedObjects"}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"redDM", " ", "=", " ", 
        RowBox[{"redState", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"concurrence", " ", "=", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Tr", "[", 
             RowBox[{"redDM", ".", "redDM"}], "]"}]}], ")"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"concurrence", " ", ">", " ", "0"}], ",", " ", "True", ",", 
         " ", "False"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "[", "expr___", "]"}], " ", ":=", " ",
     "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"QuantumEntangledObjectsQ", "::", "inputs"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n", "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validEntangledStateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "validEntangledStateQ", "[", "qs_QuantumFiniteDimensionalState", "]"}], 
    " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"qs", "[", "\"\<PureStateQ\>\"", "]"}], ",", "\n", "\t", "True",
       ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "pureState"}], ",", 
          "qs"}], "]"}], ";", "False"}], ")"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validEntangledStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"QuantumEntangledObjectsQ", "::", "qstate"}], ",", "expr"}], 
       "]"}], ";", "False"}], ")"}]}], ";"}], "\n", "\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validBipartitionQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validBipartitionQ", "[", 
     RowBox[{"qs_", ",", " ", "split_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "split", "]"}], " ", "\[NotEqual]", " ", "2"}], 
      ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "splitLength"}], ",", 
          "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"split", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}], "]"}], ",", 
            " ", "#"}], "]"}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], ",", "qs", ",", 
          RowBox[{"split", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", "split"}], "]"}], 
        ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"split", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}], "]"}], ",", 
            " ", "#"}], "]"}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], ",", "qs", ",", 
          RowBox[{"split", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2", ",", "split"}], "]"}], 
        ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"DuplicateFreeQ", "[", 
        RowBox[{"Flatten", " ", "@", " ", "split"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "unique"}], ",", 
          "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}], "]"}], ",", 
          " ", 
          RowBox[{"Flatten", "@", "split"}]}], "]"}], " ", "===", " ", 
        RowBox[{"{", "}"}]}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "bipartition"}], ",", 
          "qs", ",", "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t",
       "True", ",", "\n", "\t", "True"}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validBipartitionQ", "[", 
    RowBox[{"qs_", ",", " ", "split_"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumEntangledObjectsQ", "::", "splitList"}], ",", 
       "split"}], "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7232150356981907`*^9, 3.7232151110275793`*^9}, {
   3.723215669726712*^9, 3.723215710327383*^9}, {3.72321620687922*^9, 
   3.7232163758705187`*^9}, {3.723216453726006*^9, 3.723216578318243*^9}, {
   3.723216666686944*^9, 3.723217095185898*^9}, {3.723217135136756*^9, 
   3.723217201457869*^9}, {3.72321723262122*^9, 3.723217386243476*^9}, {
   3.727403997746726*^9, 3.72740399775037*^9}, {3.727404037821417*^9, 
   3.727404037826783*^9}, {3.7340627312544823`*^9, 3.734062745334387*^9}, {
   3.734403941776145*^9, 3.734403962090726*^9}, 
   3.734404015399415*^9},ExpressionUUID->"52648a38-b3b1-4c1f-a5a7-\
1e2729f47d2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumStateDistance ", "Subsection",
 CellChangeTimes->{{3.723217644558773*^9, 
  3.7232176602845993`*^9}},ExpressionUUID->"7e90fb90-bc04-4b3b-8a8e-\
401566dd46d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumStateDistance", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "inputs"}], "=", 
   RowBox[{
   "\"\<Inputs to QuantumStateDistance must be two \>\"", "<>", "\n", "\t", 
    "\"\<quantum finiteDimensional states\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "distMeasure"}], "=", 
   RowBox[{
   "\"\<Method `1` is not a valid option for \>\"", "<>", "\n", "\t", 
    "\"\<calculating the distance between two states\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "qubit"}], "=", 
   RowBox[{
   "\"\<Argument `1` must be a single qubit state for \>\"", "<>", "\n", 
    "\t", "\"\< Euclidean distance method\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "dims"}], "=", 
   RowBox[{
   "\"\<Arguments `1` at position 1 and `2` at position 2 \>\"", "<>", "\n", 
    "\t", "\"\<must have the same qudit dimension\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "::", "numObjs"}], "=", 
    RowBox[{
    "\"\<Arguments `1` at position 1 and `2` at position 2 \>\"", "<>", "\n", 
     "\t", "\"\<must describe the same number of quantum objects\>\""}]}], 
   ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumStateDistance", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Fidelity\>\""}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "[", 
     RowBox[{
     "qs1_QuantumFiniteDimensionalState", ",", " ", 
      "qs2_QuantumFiniteDimensionalState", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"sameSizeStatesQ", "[", 
        RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ",", " ", "$Failed", ",", 
      "\n", "\t", 
      RowBox[{"qdistHelper", "[", 
       RowBox[{"qs1", ",", " ", "qs2", ",", " ", 
        RowBox[{"OptionValue", "[", "Method", "]"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "[", "expr___", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"QuantumStateDistance", "::", "inputs"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sameSizeStatesQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sameSizeStatesQ", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"qs1", "[", "\"\<QuditDimension\>\"", "]"}], " ", 
       "\[NotEqual]", " ", 
       RowBox[{"qs2", "[", "\"\<QuditDimension\>\"", "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumStateDistance", "::", "dims"}], ",", "qs1", ",", 
          "qs2"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"qs1", "[", "\"\<NumberOfQudits\>\"", "]"}], " ", 
       "\[NotEqual]", " ", 
       RowBox[{"qs2", "[", "\"\<NumberOfQudits\>\"", "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumStateDistance", "::", "numObjs"}], ",", "qs1", ",", 
          "qs2"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", "True", ",",
       "\n", "\t", "True"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qdistHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Fidelity\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"fidelityDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Trace\>\""}], "]"}], " ",
    ":=", " ", 
   RowBox[{"traceDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<BuresAngle\>\""}], "]"}],
    " ", ":=", " ", 
   RowBox[{"buresAngleDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<HilbertSchmidt\>\""}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"hilbertSchmidtDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Euclidean\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"blochDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qdistHelper", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "method_"}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{"QuantumStateDistance", "::", "distMeasure"}], "]"}], ";", 
      "$Failed"}], ")"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "fidelityDist", ",", " ", "traceDist", ",", " ", "buresAngleDist", ",", 
     " ", "hilbertSchmidtDist", ",", " ", "blochDist"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fidelityDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"dm1", " ", "=", " ", 
         RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"rootDM2", " ", "=", " ", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}], ",", " ", 
           RowBox[{"1", "/", "2"}]}], "]"}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Re", " ", "@", " ", 
       RowBox[{"Chop", "[", 
        RowBox[{
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"Tr", "[", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{
             RowBox[{"rootDM2", ".", " ", "dm1", ".", " ", "rootDM2"}], ",", 
             RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "6"}], ")"}]}]}], "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traceDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", " ", "\[Sigma]", ",", " ", "eigs"}], "}"}], ",",
       "\n", "\t", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "=", " ", 
        RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"\[Sigma]", " ", "=", " ", 
        RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"eigs", " ", "=", " ", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"\[Rho]", " ", "-", " ", "\[Sigma]"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"Re", " ", "@", " ", 
         RowBox[{"Total", " ", "@", " ", 
          RowBox[{"(", 
           RowBox[{"Abs", " ", "/@", " ", "eigs"}], ")"}]}]}], "/", "2"}]}]}],
      "\n", "\t", "]"}]}], ";"}], "\n", "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Bures", " ", "Angle"}], " ", "-", " ", 
    RowBox[{"Statistical", " ", "Distance"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buresAngleDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"Re", " ", "@", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"fidelityDist", "[", 
        RowBox[{"qs1", ",", " ", "qs2"}], "]"}], "]"}], "]"}]}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hilbertSchmidtDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", " ", "\[Sigma]"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "=", " ", 
        RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"\[Sigma]", " ", "=", " ", 
        RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"Re", " ", "@", " ", 
        RowBox[{"Sqrt", " ", "@", " ", 
         RowBox[{"Tr", " ", "@", " ", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{
            RowBox[{"\[Rho]", " ", "-", " ", "\[Sigma]"}], ",", " ", "2"}], 
           "]"}]}]}]}]}]}], "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blochDist", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vec1", ",", " ", "vec2"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"singleQubitStateQ", "[", "qs1", "]"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumStateDistance", "::", "qubit"}], ",", "qs1"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"singleQubitStateQ", "[", "qs2", "]"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumStateDistance", "::", "qubit"}], ",", "qs2"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"vec1", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"qs1", "[", "\"\<BlochCartesianCoordinates\>\"", "]"}], 
         ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"vec2", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"qs2", "[", "\"\<BlochCartesianCoordinates\>\"", "]"}], 
         ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Re", " ", "@", " ", 
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"vec1", ",", " ", "vec2"}], "]"}]}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.72321766257332*^9, 3.723217720450388*^9}, {
   3.723217770681522*^9, 3.7232177972318974`*^9}, {3.723217874648583*^9, 
   3.723217972158352*^9}, {3.723218023245501*^9, 3.723218071963575*^9}, {
   3.723218338085889*^9, 3.7232184017182407`*^9}, {3.723220264038382*^9, 
   3.723220325570417*^9}, {3.723220388669196*^9, 3.723220471742654*^9}, {
   3.7232206293636923`*^9, 3.7232206973722467`*^9}, {3.727401959704597*^9, 
   3.727401959709466*^9}, 3.7274039977332487`*^9, 3.727404037812934*^9, {
   3.7340626183719473`*^9, 3.734062628327113*^9}, {3.7344049879591713`*^9, 
   3.734404999244837*^9}, {3.734407050211598*^9, 
   3.734407055976063*^9}},ExpressionUUID->"50f55ad3-70b9-4ffe-acd4-\
30fd51dceb30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumCircuit", "Section",
 CellChangeTimes->{{3.7337676918020697`*^9, 3.733767698120964*^9}, {
  3.734062519463274*^9, 3.734062521261772*^9}, {3.7341433204210787`*^9, 
  3.734143321234954*^9}},ExpressionUUID->"464a7421-f0be-4192-9504-\
d7ffa50e9cd1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumCircuit", "]"}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Extract", " ", "Properties", " ", "of", " ", "the", " ", "Circuit"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qcirc_QuantumCircuit", "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc", ",", " ", "prop"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qcirc", ":", 
     RowBox[{"QuantumCircuit", "[", 
      RowBox[{
       RowBox[{"\"\<BooleanFunction\>\"", " ", "\[Rule]", " ", "bf_"}], ",", 
       " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"booleanFunctionQ", "[", "bf", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"iQCircBool", "[", "bf", "]"}], ",", "\n", "\t\t", 
      RowBox[{"HoldForm", "[", "qcirc", "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qcirc", ":", 
     RowBox[{"QuantumCircuit", "[", 
      RowBox[{"qops_List", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], " ", ":=", "  ", 
    RowBox[{"iQCircOps", "[", "qops", "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qcirc1", ":", 
       RowBox[{"QuantumCircuit", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"circVisualize", "[", 
     RowBox[{"qcirc1", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Converting", " ", "boolean", " ", "function", " ", "to", " ", "quantum", 
    " ", "circuit"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"boolFuncs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "Xor", ",", " ", "And", ",", " ", "Not", ",", " ", "Or", ",", " ", "Nor",
       ",", " ", "Nand", ",", " ", "Xnor"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"booleanFunctionQ", ",", " ", "booleanExpressionQ"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"booleanFunctionQ", "[", "expr_", "]"}], " ", ":=", " ", 
    RowBox[{"MemberQ", "[", 
     RowBox[{"boolFuncs", ",", " ", 
      RowBox[{"Head", "[", "expr", "]"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"booleanExpressionQ", "[", 
    RowBox[{"expr_", "?", "booleanFunctionQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "subExprs", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"subExprs", " ", "=", " ", "expr"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"subExprs", "[", 
        RowBox[{"[", "0", "]"}], "]"}], " ", "=", " ", "List"}], ";", "\n", 
      "\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"subExprs", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", "Symbol"}], " ", 
          "||", " ", 
          RowBox[{"booleanFunctionQ", "[", "#", "]"}]}], "&"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"booleanExpressionQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "False"}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"xorQ", ",", " ", "andQ", ",", " ", "notQ"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xorQ", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", "Xor"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"andQ", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", "And"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"notQ", "[", "expr_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", "Not"}], ",", " ",
       "True", ",", " ", "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "baseLengthQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"baseLengthQ", "[", 
    RowBox[{"expr_", "?", "xorQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "expr", "]"}], " ", "===", " ", "2"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"baseLengthQ", "[", 
    RowBox[{"expr_", "?", "andQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "expr", "]"}], " ", "===", " ", "2"}], ",", " ", 
     "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"baseLengthQ", "[", 
     RowBox[{"expr_", "?", "notQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "expr", "]"}], " ", "===", " ", "1"}], ",", " ",
       "True", ",", " ", "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "bfReduce", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bfReduce", "[", 
    RowBox[{"Not", "[", "expr_", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Not\>\"", ",", " ", 
     RowBox[{"bfReduce", "[", "expr", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bfReduce", "[", 
    RowBox[{"Xor", "[", 
     RowBox[{"x_", ",", " ", "y_"}], "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Xor\>\"", ",", " ", 
     RowBox[{"bfReduce", "[", "x", "]"}], ",", " ", 
     RowBox[{"bfReduce", "[", "y", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bfReduce", "[", 
    RowBox[{"expr_", "?", "xorQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"expr", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<Xor\>\"", ",", " ", 
       RowBox[{"bfReduce", "[", "x", "]"}], ",", " ", 
       RowBox[{"bfReduce", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"expr", ",", " ", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bfReduce", "[", 
    RowBox[{"expr_", "?", "andQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", " ", "=", " ", 
       RowBox[{"expr", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<And\>\"", ",", " ", 
       RowBox[{"bfReduce", "[", "x", "]"}], ",", " ", 
       RowBox[{"bfReduce", "[", 
        RowBox[{"Delete", "[", 
         RowBox[{"expr", ",", " ", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bfReduce", "[", "expr_Symbol", "]"}], " ", ":=", " ", "expr"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "esopFormQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"esopFormQ", "[", "bf_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tf", " ", "=", " ", 
        RowBox[{"TreeForm", "[", "bf", "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"tf", ",", " ", "_Nand", ",", " ", "Infinity"}], "]"}], 
          " ", "===", " ", "0"}], " ", "&&", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"tf", ",", " ", "_Or", ",", " ", "Infinity"}], "]"}], " ", 
          "===", " ", "0"}], " ", "&&", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"tf", ",", " ", "_Nor", ",", " ", "Infinity"}], "]"}], " ",
           "===", " ", "0"}], " ", "&&", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"tf", ",", " ", "_Xnand", ",", " ", "Infinity"}], "]"}], 
          " ", "===", " ", "0"}]}], ",", "\n", "\t\t", "True", ",", " ", 
        "False"}], "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "convertToNormalForm", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"convertToNormalForm", "[", "bf_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"simpBF", " ", "=", " ", 
        RowBox[{"Simplify", " ", "@", " ", 
         RowBox[{"BooleanConvert", "[", 
          RowBox[{"bf", ",", " ", "\"\<ESOP\>\""}], "]"}]}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"esopFormQ", "[", "simpBF", "]"}], ",", " ", "\n", "\t\t", 
        RowBox[{"bfReduce", "[", "simpBF", "]"}], ",", "\n", "\t\t", 
        RowBox[{"bfReduce", " ", "@", " ", 
         RowBox[{"BooleanConvert", "[", 
          RowBox[{
           RowBox[{"Simplify", " ", "@", " ", "bf"}], ",", " ", 
           "\"\<ESOP\>\""}], "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"countANDs", ",", " ", "countXORs", ",", " ", "numAncillas"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"countANDs", "[", "bf_", "]"}], " ", ":=", " ", 
   RowBox[{"Count", "[", 
    RowBox[{"bf", ",", " ", "\"\<And\>\"", ",", " ", "Infinity"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"countXORs", "[", "bf_", "]"}], " ", ":=", " ", 
   RowBox[{"Count", "[", 
    RowBox[{"bf", ",", " ", "\"\<Xor\>\"", ",", " ", "Infinity"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"numAncillas", "[", "boolFun_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"countANDs", "[", "boolFun", "]"}], " ", "+", " ", 
     RowBox[{"countXORs", "[", "boolFun", "]"}], " ", "-", "1"}]}], ";"}], 
  "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "extractQcircProperty", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQcircProperty", "[", 
    RowBox[{"qcirc_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
   "  ", 
   RowBox[{"qcirc", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQcircProperty", "[", 
    RowBox[{"qcirc_", ",", " ", "\"\<Instructions\>\""}], "]"}], " ", ":=", 
   "  ", 
   RowBox[{"qcirc", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Instructions\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQcircProperty", "[", 
    RowBox[{"qcirc_", ",", " ", "\"\<Arity\>\""}], "]"}], " ", ":=", "  ", 
   RowBox[{"qcirc", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<Arity\>\""}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQcircProperty", "[", 
    RowBox[{"qcirc_", ",", " ", "\"\<NumberOfAncillas\>\""}], "]"}], " ", ":=",
    "  ", 
   RowBox[{"qcirc", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<NumberOfAncillas\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc_", ",", " ", "\"\<CircuitDiagram\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"circuitRepresentation", "[", "qcirc", "]"}]}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQCircOps", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQCircOps", "[", "ops_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "wires", ",", " ", "arity", ",", " ", "dim", ",", " ", "assoc"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"wires", " ", "=", " ", 
        RowBox[{"Range", " ", "@@", " ", 
         RowBox[{"MinMax", "[", 
          RowBox[{"Union", "[", 
           RowBox[{"ops", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}]}], 
       ";", "\n", "\t", 
       RowBox[{"arity", " ", "=", " ", 
        RowBox[{"Length", "[", "wires", "]"}]}], ";", "\n", "\t", 
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{
         RowBox[{"ops", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"\"\<Instructions\>\"", " ", "\[Rule]", " ", "ops"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], 
           ",", "\n", "\t\t", 
           RowBox[{"\"\<Arity\>\"", " ", "\[Rule]", " ", "arity"}], ",", "\n",
            "\t\t", 
           RowBox[{"\"\<Wires\>\"", " ", "\[Rule]", " ", "wires"}], ",", "\n",
            "\t\t", 
           RowBox[{"\"\<NumberOfAncillas\>\"", " ", "\[Rule]", " ", "0"}], 
           ",", "\n", "\t\t", 
           RowBox[{
           "\"\<InitializeAncillas\>\"", " ", "\[Rule]", " ", "False"}], ",", 
           "\n", "\t\t", 
           RowBox[{
           "\"\<TraceOutAncillas\>\"", " ", "\[Rule]", " ", "False"}]}], "\n",
           "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
       RowBox[{"QuantumCircuit", "[", "assoc", "]"}]}]}], "\n", "\t", "]"}]}],
    ";"}], "\n", "\n", "\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQCircBool", "[", "bf_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "vars", ",", " ", "normalBF", ",", " ", "nAnc", ",", " ", "ancCount", 
        ",", " ", "instructions", ",", " ", "ANDPos", ",", " ", "XORPos", ",",
         " ", "assoc"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{"BooleanVariables", "[", "bf", "]"}]}], ";", "\n", "\t", 
       RowBox[{"normalBF", " ", "=", " ", 
        RowBox[{"convertToNormalForm", "[", "bf", "]"}]}], ";", "\n", "\t", 
       RowBox[{"nAnc", " ", "=", " ", 
        RowBox[{"numAncillas", "[", "normalBF", "]"}]}], ";", "\n", "\t", 
       RowBox[{"ANDPos", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"-", "1"}]}], "]"}], "&"}], ",", " ", 
          RowBox[{"Reverse", "[", 
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"normalBF", ",", " ", "\"\<And\>\""}], "]"}], ",", " ", 
             "Depth"}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"XORPos", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", " ", 
             RowBox[{"-", "1"}]}], "]"}], "&"}], ",", " ", 
          RowBox[{"Reverse", "[", 
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"normalBF", ",", " ", "\"\<Xor\>\""}], "]"}], ",", " ", 
             "Depth"}], "]"}], "]"}]}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
       
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ancCount", ",", " ", "normalBF", ",", " ", "instructions"}],
          "}"}], " ", "=", " ", "\n", "\t\t", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"boolCircANDHelper", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "nAnc"}], "]"}], "&"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "normalBF", ",", " ", 
            RowBox[{"{", "}"}]}], "}"}], ",", " ", "ANDPos"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ancCount", ",", " ", "normalBF", ",", " ", "instructions"}],
          "}"}], " ", "=", " ", "\n", "\t\t", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"boolCircXORHelper", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", "nAnc"}], "]"}], "&"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "ancCount", ",", " ", "normalBF", ",", " ", "instructions"}], 
           "}"}], ",", " ", "XORPos"}], "]"}]}], ";", "\t", "\n", "\t", 
       RowBox[{"instructions", " ", "=", " ", 
        RowBox[{"boolCircNegationHelper", "[", 
         RowBox[{"vars", ",", " ", "instructions"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"instructions", " ", "=", " ", 
        RowBox[{"cleanGarbage", "[", "instructions", "]"}]}], ";", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Turn", " ", "instructions", " ", "into", " ", "matrix", " ", 
         "operations"}], " ", "*)"}], "\n", "\t", 
       RowBox[{"instructions", " ", "=", " ", 
        RowBox[{"instructionsToOps", "[", 
         RowBox[{"instructions", ",", " ", 
          RowBox[{"Sort", " ", "@", " ", "vars"}], ",", " ", "nAnc"}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"assoc", " ", "=", " ", 
        RowBox[{"<|", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{
           "\"\<Instructions\>\"", " ", "\[Rule]", " ", "instructions"}], ",",
            "\n", "\t\t", 
           RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<Arity\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Length", "[", "vars", "]"}]}], ",", "\n", "\t\t", 
           RowBox[{"\"\<NumberOfAncillas\>\"", " ", "\[Rule]", " ", "nAnc"}], 
           ",", "\n", "\t\t", 
           RowBox[{
           "\"\<InitializeAncillas\>\"", " ", "\[Rule]", " ", "True"}], ",", 
           "\n", "\t\t", 
           RowBox[{"\"\<TraceOutAncillas\>\"", " ", "\[Rule]", " ", "True"}], 
           ",", "\n", "\t\t", 
           RowBox[{"\"\<Measure\>\"", " ", "\[Rule]", " ", "False"}], ",", 
           "\n", "\t\t", 
           RowBox[{
           "\"\<QuantumResultRegister\>\"", " ", "\[Rule]", " ", "True"}], 
           ",", "\n", "\t\t", 
           RowBox[{
           "\"\<ClassicalResultRegister\>\"", " ", "\[Rule]", " ", "False"}], 
           ",", "\n", "\t\t", 
           RowBox[{"\"\<Wires\>\"", " ", "\[Rule]", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Sort", "[", "vars", "]"}], ",", " ", 
              RowBox[{"{", "\"\<resReg\>\"", "}"}], ",", " ", "\n", "\t\t\t", 
              
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"\"\<anc[\>\"", ",", " ", 
                   RowBox[{"ToString", "[", "#", "]"}], ",", " ", 
                   "\"\<]\>\""}], "]"}], "&"}], ",", " ", 
                RowBox[{"Range", "[", 
                 RowBox[{"1", ",", " ", "nAnc"}], "]"}]}], "]"}]}], "]"}]}]}],
           "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"QuantumCircuit", "[", "assoc", "]"}]}]}], "\n", "\t", "]"}]}],
    ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "instructionToOp", ",", " ", "instructionsToOps", ",", " ", 
    "instrToOpHelper"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"instructionsToOps", "[", 
     RowBox[{"instrs_", ",", " ", "vars_", ",", " ", "nAnc_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"instructionToOp", "[", 
        RowBox[{"#", ",", " ", "vars", ",", " ", "nAnc"}], "]"}], "&"}], ",", 
      " ", "instrs"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"instructionToOp", "[", 
     RowBox[{"instr_", ",", " ", "vars_", ",", " ", "nAnc_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"instr", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<Toffoli\>\""}], 
      ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"QuantumMatrixOperation", "[", "\"\<Toffoli\>\"", "]"}], " ", 
       "\[Rule]", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"instrToOpHelper", "[", 
          RowBox[{
           RowBox[{"instr", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", "vars", ",", " ", 
           "nAnc"}], "]"}], ",", "\n", "\t\t ", 
         RowBox[{"instrToOpHelper", "[", 
          RowBox[{
           RowBox[{"instr", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", " ", "vars", ",", " ", 
           "nAnc"}], "]"}], ",", "\n", "\t\t ", 
         RowBox[{"instrToOpHelper", "[", 
          RowBox[{
           RowBox[{"instr", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", " ", "vars", ",", " ", 
           "nAnc"}], "]"}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"instr", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<CNOT\>\""}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"QuantumMatrixOperation", "[", "\"\<CNOT\>\"", "]"}], " ", 
       "\[Rule]", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"instrToOpHelper", "[", 
          RowBox[{
           RowBox[{"instr", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", "vars", ",", " ", 
           "nAnc"}], "]"}], ",", "\n", "\t\t ", 
         RowBox[{"instrToOpHelper", "[", 
          RowBox[{
           RowBox[{"instr", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", " ", "vars", ",", " ", 
           "nAnc"}], "]"}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"instr", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<SigmaX\>\""}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"QuantumMatrixOperation", "[", "\"\<SigmaX\>\"", "]"}], " ", 
       "\[Rule]", " ", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"instrToOpHelper", "[", 
         RowBox[{
          RowBox[{"instr", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "vars", ",", " ", 
          "nAnc"}], "]"}], "}"}]}]}], "\n", "\t\t", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"instrToOpHelper", "[", 
     RowBox[{"var_", ",", " ", "vars_", ",", " ", "nAnc_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"vars", ",", " ", "var"}], "]"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"vars", ",", " ", "var"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "\n", "\t", 
      RowBox[{"var", " ", "===", " ", "\"\<ResultRegister\>\""}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"Length", "[", "vars", "]"}], " ", "+", " ", "1"}], ",", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"var", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<Ancilla\>\""}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"var", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
       RowBox[{"Length", "[", "vars", "]"}], " ", "+", " ", "2"}]}], "]"}]}], 
   ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "boolCircANDHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"boolCircANDHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"anc_", ",", " ", "bf_", ",", " ", "instr_"}], "}"}], ",", " ",
       "ANDpos_", ",", " ", "nAnc_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"and", ",", " ", "args"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"and", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"bf", ",", " ", "ANDpos"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ANDpos", " ", "===", " ", 
           RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bf", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"bf", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"and", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"and", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"anc", " ", "+", " ", "1"}], ",", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"bf", ",", " ", 
           RowBox[{"ANDpos", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{"\"\<Ancilla\>\"", " ", "\[Rule]", " ", "anc"}], 
             ")"}]}]}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Join", "[", 
          RowBox[{"instr", ",", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"\"\<Toffoli\>\"", ",", " ", 
              RowBox[{"args", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"args", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"nAnc", " ", "===", " ", "anc"}], ",", " ", 
                "\"\<ResultRegister\>\"", ",", " ", 
                RowBox[{"(", 
                 RowBox[{"\"\<Ancilla\>\"", " ", "\[Rule]", " ", "anc"}], 
                 ")"}]}], "]"}]}], "}"}], "}"}]}], "]"}]}], "}"}]}]}], " ", 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "boolCircXORHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"boolCircXORHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"anc_", ",", " ", "bf_", ",", " ", "instr_"}], "}"}], ",", " ",
       "XORpos_", ",", " ", "nAnc_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xor", ",", " ", "args"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"xor", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"bf", ",", " ", "XORpos"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"args", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"XORpos", " ", "===", " ", 
           RowBox[{"{", "}"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bf", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"bf", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xor", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"xor", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"anc", " ", "+", " ", "1"}], ",", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"bf", ",", " ", 
           RowBox[{"XORpos", " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{"\"\<Ancilla\>\"", " ", "\[Rule]", " ", "anc"}], 
             ")"}]}]}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Join", "[", 
          RowBox[{"instr", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<CNOT\>\"", ",", " ", 
               RowBox[{"args", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"nAnc", " ", "===", " ", "anc"}], ",", " ", 
                 "\"\<ResultRegister\>\"", ",", " ", 
                 RowBox[{"(", 
                  RowBox[{"\"\<Ancilla\>\"", " ", "\[Rule]", " ", "anc"}], 
                  ")"}]}], "]"}]}], "}"}], ",", "\n", "\t\t\t", 
             RowBox[{"{", 
              RowBox[{"\"\<CNOT\>\"", ",", " ", 
               RowBox[{"args", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"nAnc", " ", "===", " ", "anc"}], ",", " ", 
                 "\"\<ResultRegister\>\"", ",", " ", 
                 RowBox[{"(", 
                  RowBox[{"\"\<Ancilla\>\"", " ", "\[Rule]", " ", "anc"}], 
                  ")"}]}], "]"}]}], "}"}]}], "}"}]}], "]"}]}], "}"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"boolCircNegationHelper", ",", " ", "negationHelper"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"boolCircNegationHelper", "[", 
     RowBox[{"vars_", ",", " ", "instr_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"negVars", ",", " ", "notPos", ",", " ", "newInstr"}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"negVars", " ", "=", " ", 
        RowBox[{"Association", " ", "@", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", " ", "\[Rule]", " ", "False"}], " ", "&"}], ",", " ",
            "vars"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"notPos", " ", "=", " ", 
        RowBox[{"Reverse", " ", "@", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"instr", ",", " ", "\"\<Not\>\""}], "]"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"negVars", ",", " ", "newInstr"}], "}"}], " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"negationHelper", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"negVars", ",", " ", "instr"}], "}"}], ",", " ", 
          "notPos"}], "]"}]}], ";", "\n", "\t", "newInstr"}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"negationHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"negVars_", ",", " ", "instr_"}], "}"}], ",", " ", "NOTpos_"}],
      "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"var", ",", " ", "newInstr", ",", " ", "newNegVars"}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"instr", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"NOTpos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "1"}], "]"}], "]"}], 
          " ", "===", " ", "\"\<SigmaX\>\""}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"negationHelper", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"negVars", ",", " ", "instr"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"NOTpos", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", "1"}], ",", 
              " ", 
              RowBox[{"NOTpos", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"NOTpos", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
        "]"}], ";", "\n", "\t", 
       RowBox[{"var", " ", "=", " ", 
        RowBox[{"Extract", "[", 
         RowBox[{"instr", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NOTpos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"NOTpos", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", "2"}], "}"}]}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"newInstr", " ", "=", " ", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"instr", ",", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"NOTpos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"NOTpos", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], " ", "\[Rule]", " ", 
           "var"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"newNegVars", " ", "=", " ", "negVars"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"negVars", "[", "var", "]"}], " ", "===", " ", "False"}], 
         ",", "\n", "\t\t", 
         RowBox[{"newInstr", " ", "=", " ", 
          RowBox[{"Insert", "[", 
           RowBox[{"newInstr", ",", " ", 
            RowBox[{"{", 
             RowBox[{"\"\<SigmaX\>\"", ",", " ", "var"}], "}"}], ",", " ", 
            RowBox[{"NOTpos", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"newNegVars", "[", "var", "]"}], " ", "=", " ", "True"}], ";",
        "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"newNegVars", ",", " ", "newInstr"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "cleanGarbage", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cleanGarbage", "[", "instr_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ndrop", " ", "=", " ", 
        RowBox[{"Count", "[", 
         RowBox[{
         "instr", ",", " ", "\"\<ResultRegister\>\"", ",", " ", "Infinity"}], 
         "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Join", "[", 
       RowBox[{"instr", ",", " ", 
        RowBox[{"Reverse", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"instr", ",", " ", 
           RowBox[{"-", " ", "ndrop"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Front", " ", "End", " ", "Fornatting", " ", "of", " ", "Circuit"}], " ", 
    "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "circVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "circVisualize", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circVisualize", "[", 
     RowBox[{"circ_QuantumCircuit", ",", " ", "fmt_"}], "]"}], " ", ":=", " ",
     "\n", "\t", 
    RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
     RowBox[{
     "QuantumCircuit", ",", "\n", "\t\t", "circLogo", ",", "\n", "\t\t", 
      "circLogo", ",", "\n", "\t\t", 
      RowBox[{"circBaseVisual", "[", "circ", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"circExpandedVisual", "[", "circ", "]"}], ",", " ", "\n", 
      "\t\t", "fmt"}], "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"circBaseVisual", ",", " ", "circExpandedVisual"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"circArityVisualize", ",", " ", "circNumAncillasVisualize"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circBaseVisual", "[", "circ_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"circArityVisualize", "[", "circ", "]"}], ",", " ", 
      RowBox[{"circNumAncillasVisualize", "[", "circ", "]"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circExpandedVisual", "[", "circ_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"circDimVisualize", "[", "circ", "]"}], ",", " ", 
      RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circDimVisualize", "[", "circ_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"circ", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"dim", " ", "===", "  ", "2"}]}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Qudit Dimension: \>\"", ",", " ", "dim"}], "}"}], ",",
           "\n", "\t\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"{", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n",
   "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circArityVisualize", "[", "circ_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Arity: \>\"", ",", 
         RowBox[{"circ", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<Arity\>\""}], "]"}], "]"}]}], "}"}], ",", 
       "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n", 
  "\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circNumAncillasVisualize", "[", "circ_", "]"}], " ", ":=", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Number of Ancillas: \>\"", ",", " ", 
         RowBox[{"circ", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<NumberOfAncillas\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n", "\n", "\n", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"baseString", "[", "op_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"op", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
        "\"\<OperationName\>\""}], "]"}], ",", "\n", "\t", 
      RowBox[{"op", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<OperationName\>\""}], "]"}], "]"}], ",", 
      "\n", "\t", "\"\<\[ScriptCapitalU]\>\""}], "]"}]}], ";"}], "\n", "\n", 
  "\n", "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
   "Circuit", " ", "Representation", " ", "Graphics", " ", "Generation"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wireGraphics", "[", 
     RowBox[{"numSteps_", ",", " ", "wires_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapIndexed", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "#1", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", "*", " ", "numSteps"}], ",", " ", 
               RowBox[{"100", " ", "*", " ", 
                RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}], "]"}], "}"}], 
          ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", " ", "\n", 
            "\t\t", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", 
                 RowBox[{"100", "*", " ", 
                  RowBox[{"First", "[", "#2", "]"}]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"60", "*", "numSteps"}], " ", "+", " ", "60"}], ",", 
                 RowBox[{"100", " ", "*", 
                  RowBox[{"First", "[", "#2", "]"}]}]}], "}"}]}], "}"}], 
             "]"}]}], "}"}]}], "}"}], "&"}], ",", " ", "\n", "\t\t", 
       RowBox[{"Reverse", " ", "@", " ", "wires"}]}], "]"}], "]"}]}], ";"}], 
  "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "circLogo", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circLogo", " ", ":=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"Join", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EdgeForm", "[", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{{{{{
                    {GrayLevel[0], RectangleBox[{0, 0}]}}}}}, {{{{
                    {GrayLevel[0], RectangleBox[{1, -1}]}}}}}, {{{{
                    {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}}}}}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->GrayLevel[0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "GrayLevel[0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["GrayLevelColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            GrayLevel[0],
            Editable->False,
            Selectable->False], "]"}], ",", 
          RowBox[{"FaceForm", "[", "]"}], ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "30"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"870", ",", " ", "400"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"wireGraphics", "[", 
         RowBox[{"12", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", " ", "\"\<\>\"", ",", " ", "\"\<\>\""}], 
           "}"}]}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"50", ",", "30"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
  "\t\t\t\t", "\n", "\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "initialWirePositions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"initialWirePositions", "[", "wires_", "]"}], " ", ":=", " ", 
    RowBox[{"Association", " ", "@", " ", 
     RowBox[{"Thread", "[", 
      RowBox[{"wires", " ", "\[Rule]", " ", "0"}], "]"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "updateWirePositions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"updateWirePositions", "[", 
     RowBox[{"posAssoc_", ",", " ", "w_", ",", " ", "newPos_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"{", "newAssoc", "}"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"newAssoc", " ", "=", " ", "posAssoc"}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"newAssoc", "[", "w", "]"}], " ", "=", " ", "newPos"}], ";", 
       "\[IndentingNewLine]", "\t", "newAssoc"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "addOpToCircGraphicsSteps", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"addOpToCircGraphicsSteps", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numSteps_", ",", " ", "positions_", ",", " ", "steps_"}], 
       "}"}], ",", " ", "op_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "wsRange", ",", " ", "pos", ",", " ", "ws", ",", " ", "rightSteps", 
        ",", " ", "offset", ",", " ", "newPositions", ",", " ", "newSteps"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"op", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"wsRange", " ", "=", " ", 
        RowBox[{"Range", " ", "@@", " ", 
         RowBox[{"MinMax", "[", "ws", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"positions", ",", " ", "wsRange"}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"newPositions", " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"updateWirePositions", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", " ", 
             RowBox[{"pos", " ", "+", " ", "1"}]}], "]"}], "&"}], ",", " ", 
          "positions", ",", " ", "wsRange"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", " ", "===", " ", "numSteps"}], ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"newSteps", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"steps", ",", " ", 
             RowBox[{"{", "op", "}"}]}], "]"}]}], ";", " ", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"numSteps", " ", "+", " ", "1"}], ",", " ", 
             "newPositions", ",", " ", "newSteps"}], "}"}], "]"}]}]}], "]"}], 
       ";", "\n", "\t", 
       RowBox[{"newSteps", " ", "=", " ", "steps"}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"newSteps", "[", 
         RowBox[{"[", 
          RowBox[{"pos", " ", "+", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"steps", "[", 
           RowBox[{"[", 
            RowBox[{"pos", " ", "+", " ", "1"}], "]"}], "]"}], ",", " ", 
          RowBox[{"{", "op", "}"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"numSteps", ",", " ", "newPositions", ",", " ", "newSteps"}], 
        "}"}]}]}], "\n", "]"}]}], ";"}], "\t", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "circuitGraphicsSteps", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitGraphicsSteps", "[", "circ_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ops", ",", " ", "positions", ",", " ", "numSteps", ",", " ", "steps", 
        ",", " ", "wires"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"ops", " ", "=", " ", 
        RowBox[{"circ", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<Instructions\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"wires", " ", "=", " ", 
        RowBox[{"Range", " ", "@", " ", 
         RowBox[{"Length", "[", 
          RowBox[{"circ", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<Wires\>\""}], "]"}], "]"}], "]"}]}]}], ";",
        "\n", "\t", 
       RowBox[{"ops", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "wires", "]"}], " ", "+", " ", "1", " ", 
              "-", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "&"}], ",", " ", 
          "ops"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"positions", " ", "=", " ", 
        RowBox[{"initialWirePositions", "[", "wires", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"numSteps", " ", "=", " ", "0"}], ";", "\n", "\t", 
       RowBox[{"steps", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"numSteps", ",", " ", "positions", ",", " ", "steps"}], 
         "}"}], " ", "=", " ", "\n", "\t\t", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"addOpToCircGraphicsSteps", "[", 
            RowBox[{"#1", ",", " ", "#2"}], "]"}], "&"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"numSteps", ",", " ", "positions", ",", " ", "steps"}], 
           "}"}], ",", " ", "ops"}], "]"}]}], ";", "\n", "\t", "steps"}]}], 
     "\n", "]"}]}], ";"}], "\n", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "cnotGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cnotGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cntrl", ",", " ", "trgt", ",", " ", "rad", ",", " ", "lineSeg"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"cntrl", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"trgt", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"rad", " ", "=", " ", "20"}], ";", "\n", "\t", 
       RowBox[{"lineSeg", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cntrl", " ", ">", " ", "trgt"}], ",", " ", 
          RowBox[{"-", " ", "rad"}], ",", " ", "rad"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"PointSize", "[", ".07", "]"}], ",", "\n", "\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl"}]}], "}"}], "]"}], ",", " ", "Black", 
         ",", "\n", "\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "trgt"}]}], "}"}], ",", " ", "rad"}], "]"}], 
         ",", "\n", "\t", "Thick", ",", "Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{
               RowBox[{"100", "*", "trgt"}], " ", "+", " ", "lineSeg"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{"100", "*", "cntrl"}]}], "}"}]}], "}"}], "]"}]}], "\n", 
        "\t", "}"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "cphaseGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cphaseGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cntrl", ",", " ", "trgt", ",", " ", "connector", ",", " ", "box"}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"cntrl", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"trgt", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"connector", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "trgt"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "cntrl"}]}], "}"}]}], "}"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"box", " ", "=", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "\n", "\t\t", 
          RowBox[{"FaceForm", "[", "LightBlue", "]"}], ",", " ", "\n", "\t\t", 
          RowBox[{"Rectangle", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "-", "15"}], 
              ",", " ", 
              RowBox[{
               RowBox[{"100", " ", "*", " ", "trgt"}], " ", "-", "20"}]}], 
             "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "+", " ", 
               "15"}], ",", " ", 
              RowBox[{
               RowBox[{"100", " ", "*", " ", "trgt"}], " ", "+", " ", 
               "20"}]}], "}"}]}], "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[ScriptCapitalZ]\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{"100", "*", "trgt"}]}], "}"}]}], "]"}]}], "\n", "\t\t", 
         "}"}]}], ";", "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"PointSize", "[", ".07", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl"}]}], "}"}], "]"}], ",", "\n", "\t\t", 
         "Thick", ",", " ", "Black", ",", " ", "\n", "\t\t", "connector", ",",
          "\n", "\t\t", "box"}], "\n", "\t", "}"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "toffGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toffGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cntrl1", ",", " ", "cntrl2", ",", " ", "trgt", ",", " ", "rad", ",", 
        " ", "lowLine", ",", " ", "highLine", ",", " ", "min", ",", " ", 
        "max"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"cntrl1", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"cntrl2", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"trgt", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"min", ",", " ", "max"}], "}"}], " ", "=", " ", 
        RowBox[{"MinMax", "[", "wireNums", "]"}]}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"rad", " ", "=", " ", "20"}], ";", "\n", "\t", 
       RowBox[{"lowLine", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trgt", " ", "===", " ", "min"}], ",", " ", 
          RowBox[{"-", "rad"}], ",", " ", "0"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"highLine", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"trgt", " ", "===", " ", "max"}], ",", " ", "rad", ",", " ",
           "0"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"{", "\n", "\t", 
        RowBox[{
         RowBox[{"PointSize", "[", ".07", "]"}], ",", "\n", "\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl1"}]}], "}"}], "]"}], ",", " ", "\n", 
         "\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl2"}]}], "}"}], "]"}], ",", " ", "Black",
          ",", "\n", "\t", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "trgt"}]}], "}"}], ",", " ", "rad"}], "]"}], 
         ",", "\n", "\t", "Thick", ",", "Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{
               RowBox[{"100", "*", "min"}], " ", "+", " ", "lowLine"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{
               RowBox[{"100", "*", "max"}], " ", "+", " ", "highLine"}]}], 
             "}"}]}], "}"}], "]"}]}], "\n", "\t", "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "fredkinGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fredkinGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cntrl", ",", " ", "sw1", ",", " ", "sw2", ",", " ", "min", ",", " ", 
        "max", ",", " ", "l1", ",", " ", "l2", ",", " ", "l3", ",", " ", "l4",
         ",", " ", "connector"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"cntrl", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"sw1", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"sw2", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"min", ",", " ", "max"}], "}"}], " ", "=", " ", 
        RowBox[{"MinMax", "[", "wireNums", "]"}]}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"l1", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw1"}], " ", "-", " ", "15"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw1"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l2", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw1"}], " ", "+", " ", "15"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw1"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l3", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw2"}], " ", "-", " ", "15"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw2"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l4", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw2"}], " ", "+", " ", "15"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "sw2"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"connector", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "min"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "max"}]}], "}"}]}], "}"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"PointSize", "[", ".07", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl"}]}], "}"}], "]"}], ",", " ", "\n", 
         "\t\t", "Thick", ",", " ", "Black", ",", " ", "\n", "\t\t", "l1", 
         ",", " ", "l2", ",", " ", "l3", ",", " ", "l4", ",", " ", "\n", 
         "\t\t", "connector"}], "\n", "\t", "}"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "deutschGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"deutschGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cntrl1", ",", " ", "cntrl2", ",", " ", "trgt", ",", " ", "min", ",", 
        " ", "max", ",", " ", "box", ",", " ", "connector", ",", " ", "rot"}],
        "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"cntrl1", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"cntrl2", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"trgt", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"min", ",", " ", "max"}], "}"}], " ", "=", " ", 
        RowBox[{"MinMax", "[", "wireNums", "]"}]}], ";", "\n", "\t", "\n", 
       "\t", 
       RowBox[{"box", " ", "=", " ", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "\n", "\t\t", 
          RowBox[{"FaceForm", "[", "LightBlue", "]"}], ",", " ", "\n", "\t\t", 
          RowBox[{"Rectangle", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "-", "25"}], 
              ",", " ", 
              RowBox[{
               RowBox[{"100", " ", "*", " ", "trgt"}], " ", "-", "20"}]}], 
             "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "+", " ", 
               "25"}], ",", " ", 
              RowBox[{
               RowBox[{"100", " ", "*", " ", "trgt"}], " ", "+", " ", 
               "20"}]}], "}"}]}], "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<R(\[Theta])\>\"", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], ",", " ", 
              RowBox[{"100", "*", "trgt"}]}], "}"}]}], "]"}]}], "\n", "\t\t", 
         "}"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"connector", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "min"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "max"}]}], "}"}]}], "}"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"PointSize", "[", ".07", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl1"}]}], "}"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"100", "*", "cntrl2"}]}], "}"}], "]"}], ",", " ", "\n", 
         "\t\t", "Thick", ",", " ", "Black", ",", " ", "\n", "\t\t", 
         "connector", ",", "\n", "\t\t", "box"}], "\n", "\t", "}"}]}]}], "\n",
      "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "swapGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"swapGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "l1", ",", " ", "l2", ",", " ", "l3", ",", " ", "l4", ",", " ", 
        "connector", ",", " ", "w1", ",", " ", "w2"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"w1", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"w2", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l1", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "-", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l2", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "+", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l3", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "-", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l4", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "+", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"connector", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "w1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "w2"}]}], "}"}]}], "}"}], "]"}]}], ";", "\n",
        "\t", 
       RowBox[{"{", 
        RowBox[{
        "Thick", ",", " ", "Black", ",", " ", "l1", ",", " ", "l2", ",", " ", 
         "l3", ",", " ", "l4", ",", " ", "connector"}], "}"}]}]}], "\n", "\t",
      "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "rootSwapGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rootSwapGraphics", "[", 
     RowBox[{"wireNums_", ",", " ", "stepNum_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "l1", ",", " ", "l2", ",", " ", "l3", ",", " ", "l4", ",", " ", 
        "connector1", ",", " ", "connector2", ",", " ", "w1", ",", " ", "w2", 
        ",", " ", "circle", ",", " ", "min", ",", " ", "max", ",", " ", 
        "txt"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"w1", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"w2", " ", "=", " ", 
        RowBox[{"wireNums", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"min", ",", " ", "max"}], "}"}], " ", "=", " ", 
        RowBox[{"MinMax", "[", 
         RowBox[{"{", 
          RowBox[{"w1", ",", " ", "w2"}], "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l1", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "-", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l2", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "+", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w1"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l3", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "-", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "+", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"l4", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "-", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "+", " ", "15"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"60", "*", "stepNum"}], " ", "+", " ", "10"}], ",", " ", 
             RowBox[{
              RowBox[{"100", "*", "w2"}], " ", "-", " ", "15"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"connector1", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "min"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{
              RowBox[{"50", "*", 
               RowBox[{"(", 
                RowBox[{"min", "+", "max"}], ")"}]}], "-", "20"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"connector2", " ", "=", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{"100", "*", "max"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"60", "*", "stepNum"}], ",", " ", 
             RowBox[{
              RowBox[{"50", "*", 
               RowBox[{"(", 
                RowBox[{"min", "+", "max"}], ")"}]}], "+", "20"}]}], "}"}]}], 
          "}"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"circle", " ", "=", " ", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"50", "*", 
             RowBox[{"(", 
              RowBox[{"w1", "+", "w2"}], ")"}]}]}], "}"}], ",", " ", "20"}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"txt", " ", "=", " ", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<1/2\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"60", "*", "stepNum"}], ",", " ", 
            RowBox[{"50", "*", 
             RowBox[{"(", 
              RowBox[{"w1", "+", "w2"}], ")"}]}]}], "}"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
        "Thick", ",", " ", "Black", ",", " ", "l1", ",", " ", "l2", ",", " ", 
         "l3", ",", " ", "l4", ",", " ", "connector1", ",", " ", "connector2",
          ",", " ", "circle", ",", " ", "txt"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "circuitRepresentation", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitRepresentation", "[", "circ_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "test", ",", " ", "wires", ",", " ", "steps", ",", " ", "width", ",", 
        " ", "height", ",", " ", "imageW", ",", " ", "imageH", ",", " ", 
        "xScroll", ",", " ", "yScroll", ",", " ", "wireLines", ",", " ", 
        "graphics"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"wires", " ", "=", " ", 
        RowBox[{"circ", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<Wires\>\""}], "]"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"steps", " ", "=", " ", 
        RowBox[{"circuitGraphicsSteps", "[", "circ", "]"}]}], ";", "\n", "\t", 
       RowBox[{"width", " ", "=", " ", 
        RowBox[{"circuitWidth", "[", "steps", "]"}]}], ";", "\n", "\t", 
       RowBox[{"height", " ", "=", " ", 
        RowBox[{"circuitHeight", "[", "wires", "]"}]}], ";", "\n", "\t", 
       RowBox[{"imageW", " ", "=", " ", 
        RowBox[{"circuitImageWidth", "[", "steps", "]"}]}], ";", "\n", "\t", 
       RowBox[{"imageH", " ", "=", " ", 
        RowBox[{"circuitImageHeight", "[", "wires", "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"xScroll", " ", "=", " ", 
        RowBox[{"circuitXScroll", "[", "steps", "]"}]}], ";", "\n", "\t", 
       RowBox[{"yScroll", " ", "=", " ", 
        RowBox[{"circuitYScroll", "[", "wires", "]"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"wireLines", " ", "=", " ", 
        RowBox[{"wireGraphics", "[", 
         RowBox[{
          RowBox[{"Length", "[", "steps", "]"}], ",", " ", "wires"}], "]"}]}],
        ";", "\n", "\t", 
       RowBox[{"graphics", " ", "=", " ", 
        RowBox[{"Flatten", "[", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#1", ",", " ", "wires", ",", " ", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", " ", 
            "steps", ",", " ", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "1"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"graphics", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"opGraphics", ",", " ", "graphics"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"Pane", "[", 
        RowBox[{
         RowBox[{"Panel", " ", "@", " ", 
          RowBox[{"Panel", " ", "@", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{"wireLines", ",", " ", "graphics"}], "]"}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"imageW", ",", " ", "imageH"}], "}"}]}]}], "]"}]}]}], 
         ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"400", ",", "200"}], "}"}]}], ",", " ", 
         RowBox[{"Scrollbars", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"xScroll", ",", " ", "yScroll"}], "}"}]}]}], "]"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"circuitWidth", ",", " ", "circuitHeight"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitWidth", "[", "steps1_", "]"}], " ", ":=", " ", 
   RowBox[{"60", " ", "+", " ", 
    RowBox[{"60", " ", "*", " ", 
     RowBox[{"Length", "[", "steps1", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitHeight", "[", "wires_", "]"}], " ", ":=", " ", 
    RowBox[{"100", " ", "*", " ", 
     RowBox[{"Length", "[", "wires", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"circuitImageWidth", ",", " ", "circuitImageHeight"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitImageWidth", "[", "stps_", "]"}], " ", ":=", " ", 
   RowBox[{"Min", "[", 
    RowBox[{"300", ",", " ", 
     RowBox[{"circuitWidth", "[", "stps", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitImageHeight", "[", "wires_", "]"}], " ", ":=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{"100", ",", " ", 
      RowBox[{"circuitHeight", "[", "wires", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"circuitXScroll", ",", " ", "circuitYScroll"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circuitXScroll", "[", "steps2_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "steps2", "]"}], " ", "\[GreaterEqual]", " ", 
      "5"}], ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"circuitYScroll", "[", "wires_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "wires", "]"}], " ", "\[GreaterEqual]", " ", 
       "5"}], ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "opGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"opGraphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"operation_", " ", "\[Rule]", " ", "wires_"}], ",", " ", 
       "allWires_", ",", " ", "stepNum_"}], "}"}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "wires", "]"}], " ", ">", " ", "1"}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"multiQuditOpGraphics", "[", 
       RowBox[{
       "wires", ",", " ", "operation", ",", " ", "stepNum", ",", " ", 
        RowBox[{"Length", " ", "@", " ", "allWires"}]}], "]"}], ",", "\n", 
      "\t\t", 
      RowBox[{"singleQuditOpGraphics", "[", 
       RowBox[{
        RowBox[{"wires", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "operation", ",", " ", 
        "stepNum", ",", " ", 
        RowBox[{"Length", " ", "@", " ", "allWires"}]}], "]"}]}], "\n", 
     "\t\t", "]"}]}], ";"}], "\n", "\t", "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "singleQuditOpGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQuditOpGraphics", "[", 
     RowBox[{
     "wire_", ",", " ", "operation_", ",", " ", "stepNum_", ",", " ", 
      "numWires_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
      RowBox[{"FaceForm", "[", "LightBlue", "]"}], ",", " ", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "-", "15"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"100", " ", "*", " ", "wire"}], " ", "-", "20"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"60", " ", "*", " ", "stepNum"}], " ", "+", " ", "15"}], 
          ",", " ", 
          RowBox[{
           RowBox[{"100", " ", "*", " ", "wire"}], " ", "+", " ", "20"}]}], 
         "}"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"singleQuditGraphicsHelper", "[", 
         RowBox[{"baseString", "[", "operation", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"60", "*", "stepNum"}], ",", " ", 
          RowBox[{"100", "*", "wire"}]}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  "\t", "\n", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "singleQuditGraphicsHelper", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditGraphicsHelper", "[", "\"\<SigmaX\>\"", "]"}], " ", ":=",
    " ", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \
\(\[ScriptCapitalX]\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditGraphicsHelper", "[", "\"\<SigmaY\>\"", "]"}], " ", ":=",
    " ", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \
\(\[ScriptCapitalY]\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditGraphicsHelper", "[", "\"\<SigmaZ\>\"", "]"}], " ", ":=",
    " ", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \
\(\[ScriptCapitalZ]\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQuditGraphicsHelper", "[", "\"\<Hadamard\>\"", "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalH]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQuditGraphicsHelper", "[", "expr___", "]"}], " ", ":=", 
    " ", "expr"}], ";"}], "\n", "\t", "\n", "\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "multiQuditOpGraphics", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOpGraphics", "[", 
    RowBox[{
    "wires_", ",", " ", "operation_", ",", " ", "stepNum_", ",", " ", 
     "numWires_"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"base", " ", "=", " ", 
       RowBox[{"baseString", "[", "operation", "]"}]}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{"(", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"base", " ", "===", " ", "\"\<CNOT\>\""}], ",", "\n", "\t\t", 
        
        RowBox[{"cnotGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"base", " ", "===", " ", "\"\<SWAP\>\""}], ",", "\n", "\t\t", 
        
        RowBox[{"swapGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"base", " ", "===", " ", "\"\<RootSWAP\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"rootSwapGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"base", " ", "===", " ", "\"\<CPHASE\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"cphaseGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"base", " ", "===", " ", "\"\<Toffoli\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"toffGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{"base", " ", "===", " ", "\"\<Fredkin\>\""}], ",", "\n", 
        "\t\t", 
        RowBox[{"fredkinGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"ListQ", "[", "base", "]"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"base", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", 
          "\"\<Deutsch\>\""}]}], ",", "\n", "\t\t", 
        RowBox[{"deutschGraphics", "[", 
         RowBox[{"wires", ",", " ", "stepNum"}], "]"}], ",", "\n", "\t\t", 
        "\n", "\t\t", "True", ",", "\n", "\t\t", "\"\<ERROR\>\""}], "\n", 
       "\t\t", "]"}], ")"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.73414332570718*^9, 3.734143330923191*^9}, {
   3.734143712835898*^9, 3.734143769310266*^9}, {3.734143936191923*^9, 
   3.734143956477746*^9}, {3.7341442424487658`*^9, 3.734144418670331*^9}, {
   3.7341444685281887`*^9, 3.734144478990261*^9}, {3.734144647916246*^9, 
   3.7341446590052633`*^9}, 3.734144759518798*^9, 3.734144808169286*^9, {
   3.7341448698202057`*^9, 3.7341448773641357`*^9}, {3.734144968193479*^9, 
   3.734145073130631*^9}, {3.734145193318667*^9, 3.734145212052764*^9}, {
   3.734145249836832*^9, 3.734145373934307*^9}, {3.734145404834628*^9, 
   3.7341454618190727`*^9}, {3.734145626336894*^9, 3.734145655010426*^9}, {
   3.734145691977729*^9, 3.734145707649702*^9}, {3.7341457507446327`*^9, 
   3.734145766068335*^9}, {3.7341458297401247`*^9, 3.7341458445884943`*^9}, {
   3.7341458903925657`*^9, 3.73414606057336*^9}, {3.7341461347002*^9, 
   3.734146234146044*^9}, 3.7341463900161552`*^9, {3.734146442010232*^9, 
   3.734146490544426*^9}, {3.734146528356612*^9, 3.7341466091501513`*^9}, {
   3.7341466533968687`*^9, 3.734146705208712*^9}, {3.734146750191139*^9, 
   3.734146824154707*^9}, {3.734146882298759*^9, 3.73414688295397*^9}, {
   3.734146937649458*^9, 3.734146940171351*^9}, {3.734147048140828*^9, 
   3.734147058362002*^9}, {3.734147089242764*^9, 3.734147090261732*^9}, {
   3.7341473531622877`*^9, 3.734147380340963*^9}, {3.734147618862707*^9, 
   3.734147747632597*^9}, {3.7341477942744827`*^9, 3.7341478167996407`*^9}, {
   3.7341480000211983`*^9, 3.734148070990885*^9}, {3.734630785178774*^9, 
   3.734630878181797*^9}, {3.734630932508148*^9, 3.734630962051462*^9}, {
   3.7346312100103703`*^9, 3.734631343623734*^9}, {3.73463138327713*^9, 
   3.7346314220828943`*^9}, {3.734631559328127*^9, 3.734631615348859*^9}, {
   3.734631657314044*^9, 3.734631670331765*^9}, {3.734631791414311*^9, 
   3.7346319170803223`*^9}, {3.73463213587693*^9, 3.7346322015414963`*^9}, {
   3.734632382898699*^9, 3.734632476388669*^9}, {3.734632682201804*^9, 
   3.73463268415757*^9}, {3.734633197380028*^9, 3.734633206551955*^9}, {
   3.7346332736611977`*^9, 3.7346332765170383`*^9}, {3.734633343836632*^9, 
   3.7346333655840816`*^9}, {3.7346336879352007`*^9, 
   3.7346337251267557`*^9}, {3.734633823472381*^9, 3.734633856749991*^9}, {
   3.734634087383679*^9, 3.7346340917730427`*^9}, {3.734634183326517*^9, 
   3.734634217158515*^9}, {3.7346342572520247`*^9, 3.734634302481043*^9}, {
   3.734634632472755*^9, 3.734634669219836*^9}, {3.734634741886408*^9, 
   3.734634765468383*^9}, {3.73463479846157*^9, 3.7346348111254063`*^9}, {
   3.7346350207041063`*^9, 3.734635111385478*^9}, {3.734635153187295*^9, 
   3.7346351759790173`*^9}, {3.734635224163547*^9, 3.734635230920905*^9}, {
   3.7346353464633217`*^9, 3.7346353534406023`*^9}, {3.734635623195818*^9, 
   3.734635693197218*^9}, {3.73463572590694*^9, 3.7346357413269176`*^9}, {
   3.734636165644662*^9, 3.734636182244896*^9}, {3.734636246153075*^9, 
   3.7346364278631353`*^9}, {3.73463648009202*^9, 3.734636482455234*^9}, {
   3.734636565060114*^9, 3.7346365664043303`*^9}, {3.7346368291386833`*^9, 
   3.734636829877586*^9}, {3.734636992667952*^9, 3.734637109429635*^9}, {
   3.7346373164625483`*^9, 3.734637346514597*^9}, {3.734637472506056*^9, 
   3.734637512797811*^9}, {3.734637547846759*^9, 3.734637749093069*^9}, {
   3.734637783577092*^9, 3.734637785733232*^9}, {3.734637823146708*^9, 
   3.73463785783676*^9}, {3.734637936835525*^9, 3.7346380058742657`*^9}, {
   3.734638040012106*^9, 3.734638042671924*^9}, {3.7346381061478558`*^9, 
   3.734638128678961*^9}, {3.73463816962612*^9, 3.734638192888276*^9}, {
   3.734638349773238*^9, 3.734638419627637*^9}, {3.73463847070339*^9, 
   3.73463847607909*^9}, {3.734638540882139*^9, 3.734638857979628*^9}, {
   3.7346389904877167`*^9, 3.734638995971818*^9}, {3.7346393679563293`*^9, 
   3.73463951473424*^9}, {3.734639626984252*^9, 3.734639728508443*^9}, {
   3.734639805456575*^9, 3.734639811783648*^9}, {3.7346398421189747`*^9, 
   3.734639846260722*^9}, {3.7346399111766033`*^9, 3.734639974658585*^9}, {
   3.734640013210239*^9, 3.734640016998506*^9}, {3.734640091815982*^9, 
   3.7346401688815603`*^9}, {3.734640360908453*^9, 3.734640510685905*^9}, {
   3.734640863989718*^9, 3.734640930838129*^9}, {3.734640981413849*^9, 
   3.7346410877027063`*^9}, {3.734641208298177*^9, 3.734641250364872*^9}, {
   3.734641284977963*^9, 3.734641361660069*^9}, {3.734641431893571*^9, 
   3.734641549168268*^9}, {3.734641627798572*^9, 3.73464175843025*^9}, {
   3.734641892308782*^9, 3.734642062016732*^9}, {3.7346421244768553`*^9, 
   3.734642174994749*^9}, {3.734642222588131*^9, 3.7346422338295918`*^9}, {
   3.7346422831178827`*^9, 3.7346424255354958`*^9}, {3.734642495367798*^9, 
   3.734642538283083*^9}, {3.734642625719356*^9, 3.7346426261389914`*^9}, {
   3.734642680538114*^9, 3.7346426817984753`*^9}, {3.734642747717372*^9, 
   3.734642867330535*^9}, {3.734642975214098*^9, 3.7346430314750013`*^9}, {
   3.7346430763970222`*^9, 3.734643182147463*^9}, {3.734643227703731*^9, 
   3.734643271470072*^9}, {3.7346433218618927`*^9, 3.734643335822822*^9}, 
   3.73464338815882*^9, {3.734643421290594*^9, 3.734643473703589*^9}, {
   3.734643587494904*^9, 3.734643625055238*^9}, 3.734643701561022*^9, {
   3.734643741982696*^9, 3.734643751536854*^9}, {3.7346506175959377`*^9, 
   3.7346507302897263`*^9}, {3.734651614692445*^9, 3.734651701519438*^9}, {
   3.73465175299629*^9, 3.734651764636915*^9}, {3.734651812403902*^9, 
   3.734651832058296*^9}, {3.734651920509733*^9, 3.7346520208996553`*^9}, {
   3.734652317475917*^9, 3.734652343194215*^9}, {3.7346528741555758`*^9, 
   3.734652929497411*^9}, {3.7346529631981907`*^9, 3.7346530308957243`*^9}, {
   3.734653061825357*^9, 3.734653127407846*^9}, {3.734653160602438*^9, 
   3.734653161945612*^9}, {3.734662095340475*^9, 3.734662353566512*^9}, {
   3.73466238432397*^9, 3.7346624092399597`*^9}, {3.734662495101574*^9, 
   3.734662721524486*^9}, {3.73466277232938*^9, 3.734662818777822*^9}, {
   3.734662942109521*^9, 3.734662971556723*^9}, {3.734663153611422*^9, 
   3.734663162823389*^9}, {3.734663331409717*^9, 3.734663332295651*^9}, {
   3.734663457745771*^9, 3.734663458216199*^9}, {3.7346638218741302`*^9, 
   3.734663898810244*^9}, {3.734663954778943*^9, 3.7346639699610786`*^9}, {
   3.734664049249593*^9, 3.734664062618084*^9}, {3.7346641199126787`*^9, 
   3.7346641467734613`*^9}, {3.734664294456009*^9, 3.734664351208315*^9}, 
   3.734664384324027*^9, {3.7346645247752247`*^9, 3.734664590910981*^9}, {
   3.7346646272805233`*^9, 3.734664657723406*^9}, {3.734664707383492*^9, 
   3.7346647477348137`*^9}, 3.7346650029902887`*^9, {3.734666356615213*^9, 
   3.734666412014771*^9}, {3.734666633040482*^9, 3.734666697469825*^9}, {
   3.734667322647253*^9, 3.734667375782098*^9}, {3.734667434182425*^9, 
   3.7346674679655848`*^9}, {3.734667509530602*^9, 3.734667528515115*^9}, {
   3.734667617065702*^9, 3.734667619271573*^9}, {3.734667703800239*^9, 
   3.73466770522691*^9}, {3.734667805717643*^9, 3.734667828336342*^9}, {
   3.734667886394185*^9, 3.734667922363414*^9}, {3.734668006230095*^9, 
   3.734668082260215*^9}, {3.734668361742297*^9, 3.7346683848273*^9}, {
   3.7346686618515368`*^9, 3.734668699450254*^9}, {3.734668745430501*^9, 
   3.734668861474711*^9}, {3.7346689169428988`*^9, 3.734668946210843*^9}, {
   3.734668995844612*^9, 3.7346690374249363`*^9}, {3.734669074965563*^9, 
   3.734669118167534*^9}, {3.734669161257242*^9, 3.734669171770637*^9}, {
   3.7346692180883427`*^9, 3.7346692192464314`*^9}, {3.734669293504257*^9, 
   3.734669317673202*^9}, {3.734669353408044*^9, 3.734669496566011*^9}, {
   3.734669656139398*^9, 3.73466966188768*^9}, {3.73466992044014*^9, 
   3.7346699220526*^9}, {3.734699793274125*^9, 3.734699807044726*^9}, {
   3.734699877327888*^9, 3.7346998837629004`*^9}, {3.73469997782095*^9, 
   3.734699983751569*^9}, {3.734700037262991*^9, 3.734700039721327*^9}, {
   3.734700070547592*^9, 3.73470008906328*^9}, {3.73470017771111*^9, 
   3.734700236268237*^9}, {3.734700328025753*^9, 3.7347003404455223`*^9}, {
   3.734700431252761*^9, 3.7347004397717876`*^9}, 3.734700487113824*^9, {
   3.734700602017499*^9, 3.734700655184062*^9}, {3.7347007467764397`*^9, 
   3.7347007592245502`*^9}, {3.734701562384459*^9, 3.734701573031646*^9}, {
   3.734702533952284*^9, 3.734702537477229*^9}, {3.734702738893839*^9, 
   3.734702746028413*^9}, {3.734702948011443*^9, 3.734702992811969*^9}, {
   3.73470321904073*^9, 3.7347032195166903`*^9}, {3.7347040745356197`*^9, 
   3.7347040895550823`*^9}, {3.734704462769793*^9, 3.7347044933881693`*^9}, {
   3.7347045889431973`*^9, 3.7347047726634083`*^9}, {3.7347053917588053`*^9, 
   3.734705430708942*^9}, {3.734705547926332*^9, 3.734705548484105*^9}, {
   3.734705849198653*^9, 3.734705861594515*^9}, {3.734705911147279*^9, 
   3.734705914583251*^9}, {3.734706448858197*^9, 3.734706452767558*^9}, {
   3.734706531322587*^9, 3.734706540525701*^9}, {3.734706722379573*^9, 
   3.7347067303412323`*^9}, {3.734706808524004*^9, 3.734706819863323*^9}, {
   3.7347070008339577`*^9, 3.734707011416169*^9}, {3.734707162598711*^9, 
   3.734707167102089*^9}, {3.734707379127974*^9, 3.734707392369989*^9}, {
   3.7347074531939373`*^9, 3.734707457092224*^9}, {3.734707529016966*^9, 
   3.73470753133292*^9}, {3.734707581009487*^9, 3.734707588086834*^9}, {
   3.734707639496641*^9, 3.734707644980706*^9}, {3.734707714363626*^9, 
   3.7347077353062763`*^9}, {3.734707773344021*^9, 3.734707906289762*^9}, {
   3.734710768465931*^9, 3.734710772304471*^9}, {3.7347110171863956`*^9, 
   3.734711093610956*^9}, {3.735848931898959*^9, 3.7358489582671213`*^9}, {
   3.735850221463223*^9, 3.735850234939474*^9}, {3.735850653002451*^9, 
   3.7358506699515457`*^9}, {3.735850754458474*^9, 3.735850785172748*^9}, {
   3.735850824722598*^9, 3.7358508387319736`*^9}, {3.7358511324566193`*^9, 
   3.735851147750979*^9}, {3.7358513561945343`*^9, 3.735851369244175*^9}, {
   3.735851888915313*^9, 3.7358520023513403`*^9}, {3.7358520452210007`*^9, 
   3.735852060995466*^9}, {3.735873950293466*^9, 
   3.735873963609201*^9}},ExpressionUUID->"38295eef-1dfe-4140-a087-\
0fcdae43cc58"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumEvaluate", "Section",
 CellChangeTimes->{{3.7337676918020697`*^9, 3.733767698120964*^9}, {
  3.734062519463274*^9, 
  3.734062521261772*^9}},ExpressionUUID->"f7fcb0e2-a18f-4656-b509-\
7f5dd1f4ef47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumEvaluate", "]"}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumEvaluate", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Trials\>\"", " ", "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{
      "\"\<BackEnd\>\"", " ", "\[Rule]", " ", 
       "\"\<ClassicalSimulator\>\""}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEvaluate", " ", "/:", " ", 
    RowBox[{"qev", ":", 
     RowBox[{"QuantumEvaluate", "[", 
      RowBox[{
       RowBox[{"order_", " ", "\[Rule]", " ", "qop_QuantumMatrixOperation"}], 
       ",", " ", "qs_QuantumFiniteDimensionalState", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ":=", "\n", "\t", 
    RowBox[{"If", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"explicitQuantumMatrixOpQ", "[", "qop", "]"}], " ", "&&", "\n",
        "\t\t", 
       RowBox[{"explicitQuantumStateQ", "[", "qs", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"iQOpEval", "[", 
       RowBox[{"qop", ",", " ", "qs", ",", " ", "order", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<BackEnd\>\"", "]"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"HoldForm", "[", "qev", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], 
  "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEvaluate", " ", "/:", " ", 
    RowBox[{"qev", ":", 
     RowBox[{"QuantumEvaluate", "[", 
      RowBox[{
       RowBox[{"order_", " ", "\[Rule]", " ", "qmeas_QuantumMeasurement"}], 
       ",", " ", "qs_QuantumFiniteDimensionalState", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ":=", "\n", "\t", 
    RowBox[{"If", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"explicitQuantumMeasurementQ", "[", "qmeas", "]"}], " ", "&&", 
       "\n", "\t\t", 
       RowBox[{"explicitQuantumStateQ", "[", "qs", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"iQMeasEval", "[", 
       RowBox[{"qmeas", ",", " ", "qs", ",", " ", "order", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<Trials\>\"", "]"}], ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<BackEnd\>\"", "]"}]}], "]"}], ",", 
      "\n", "\t\t", 
      RowBox[{"HoldForm", "[", "qev", "]"}]}], "\n", "\t\t", "]"}]}], ";"}], 
  "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQOpEval", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQOpEval", "[", 
     RowBox[{
     "qop_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "backend_"}], 
     "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"backend", " ", "===", " ", "\"\<ClassicalSimulator\>\""}], ",",
       "\n", "\t\t", 
      RowBox[{"iQOpSimulate", "[", 
       RowBox[{"qop", ",", " ", "qs", ",", " ", "order"}], "]"}], ",", "\n", 
      "\t\t", 
      RowBox[{"iQOpExecute", "[", 
       RowBox[{"qop", ",", " ", "qs", ",", " ", "order"}], "]"}]}], "]"}]}], 
   ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQMeasEval", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQMeasEval", "[", 
     RowBox[{
     "qmeas_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "trials_", ",", 
      " ", "backend_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"backend", " ", "===", " ", "\"\<ClassicalSimulator\>\""}], ",",
       "\n", "\t\t", 
      RowBox[{"iQMeasSimulate", "[", 
       RowBox[{
       "qmeas", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}], ",", "\n", "\t\t", 
      RowBox[{"iQMeasExecute", "[", 
       RowBox[{
       "qmeas", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQCircEval", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQCircEval", "[", 
     RowBox[{
     "qcirc_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "trials_", ",", 
      " ", "backend_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"backend", " ", "===", " ", "\"\<ClassicalSimulator\>\""}], ",",
       "\n", "\t\t", 
      RowBox[{"iQCircSimulate", "[", 
       RowBox[{
       "qcirc", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}], ",", "\n", "\t\t", 
      RowBox[{"iQCircExecute", "[", 
       RowBox[{
       "qcirc", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\t\t", "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQOpSimulate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQOpSimulate", "[", 
     RowBox[{"qop_", ",", " ", "qs_", ",", " ", "order_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"qop", "[", "\"\<Arity\>\"", "]"}], " ", "===", " ", "1"}],
           ",", " ", "\n", "\t\t", 
          RowBox[{"singleQuditOpMat", "[", 
           RowBox[{"qop", ",", " ", "qs", ",", " ", 
            RowBox[{"order", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"multiQuditOpMat", "[", 
           RowBox[{"qop", ",", " ", "qs", ",", " ", "order"}], "]"}]}], 
         "]"}]}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"applyMatToState", "[", 
       RowBox[{"mat", ",", " ", "qs"}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQMeasSimulate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQMeasSimulate", "[", 
     RowBox[{
     "qmeas_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "trials_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"qmeas", "[", "\"\<MeasurementType\>\"", "]"}], " ", "===", 
       " ", "\"\<Projection\>\""}], ",", "\n", "\t", 
      RowBox[{"iQProjectionSimulate", "[", 
       RowBox[{
       "qmeas", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}], ",", "\n", "\t", 
      RowBox[{"iQPOVMSimulate", "[", 
       RowBox[{
       "qmeas", ",", " ", "qs", ",", " ", "order", ",", " ", "trials"}], 
       "]"}]}], "]"}]}], ";"}], "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "eigToProjector", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigToProjector", "[", "eig_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"SparseArray", " ", "@", " ", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"{", "eig", "}"}], "]"}]}], ".", 
    RowBox[{"{", "eig", "}"}]}]}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQProjectionSimulate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQProjectionSimulate", "[", 
     RowBox[{
     "qmeas_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "trials_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"projectors", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"qmeas", "[", "\"\<Arity\>\"", "]"}], " ", "===", " ", 
           "1"}], ",", "\n", "\t", 
          RowBox[{"singleQuditProjector", "[", 
           RowBox[{"qmeas", ",", " ", "qs", ",", " ", 
            RowBox[{"order", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t", 
          RowBox[{"multiQuditProjector", "[", 
           RowBox[{"qmeas", ",", " ", "qs", ",", " ", "order"}], "]"}]}], 
         "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"applyProjectorsToState", "[", 
       RowBox[{
       "projectors", ",", " ", "qs", ",", " ", "qmeas", ",", " ", "trials"}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "applyProjectorsToState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"applyProjectorsToState", "[", 
     RowBox[{
     "projectors_", ",", " ", "qs_", ",", " ", "qmeas_", ",", " ", 
      "trials_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dm", ",", " ", "probs"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"probs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{"#", ".", "dm"}], "]"}], "&"}], ",", " ", "projectors"}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"probs", " ", "\[Rule]", " ", 
          RowBox[{"qmeas", "[", "\"\<Eigenvalues\>\"", "]"}]}], ",", " ", 
         "trials"}], "]"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "iQPOVMSimulate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"iQPOVMSimulate", "[", 
     RowBox[{
     "qmeas_", ",", " ", "qs_", ",", " ", "order_", ",", " ", "trials_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"povm", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"qmeas", "[", "\"\<Arity\>\"", "]"}], " ", "===", " ", 
           "1"}], ",", "\n", "\t", 
          RowBox[{"singleQuditPOVM", "[", 
           RowBox[{"qmeas", ",", " ", "qs", ",", " ", 
            RowBox[{"order", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t", 
          RowBox[{"multiQuditPOVM", "[", 
           RowBox[{"qmeas", ",", " ", "qs", ",", " ", "order"}], "]"}]}], 
         "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"applyPOVMToState", "[", 
       RowBox[{
       "povm", ",", " ", "qs", ",", " ", "qmeas", ",", " ", "trials"}], 
       "]"}]}], "]"}]}], ";"}], "\n", "\t", "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "applyPOVMToState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"applyPOVMToState", "[", 
     RowBox[{
     "povm_", ",", " ", "qs_", ",", " ", "qmeas_", ",", " ", "trials_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dm", ",", " ", "probs"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"probs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tr", "[", 
            RowBox[{"#", ".", "dm"}], "]"}], "&"}], ",", " ", "povm"}], 
         "]"}]}], ";", "\n", "\t", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"probs", " ", "\[Rule]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "probs", "]"}], "]"}]}], ",", " ", 
         "trials"}], "]"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\n", "\n", 
  "\t\t\t\t\t\t"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "applyMatToState", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"applyMatToState", "[", 
     RowBox[{"mat_", ",", " ", "state_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "newState", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"newState", " ", "=", " ", "state"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pureStateQ", "[", "state", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"newState", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], " ", "=",
           " ", 
          RowBox[{"FullSimplify", " ", "@", " ", 
           RowBox[{"SparseArray", "[", 
            RowBox[{"mat", ".", 
             RowBox[{"state", "[", "\"\<StateVector\>\"", "]"}]}], "]"}]}]}], 
         ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"newState", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], " ", 
          "=", " ", 
          RowBox[{"FullSimplify", " ", "@", "  ", 
           RowBox[{"SparseArray", "[", 
            RowBox[{"mat", ".", 
             RowBox[{"state", "[", "\"\<DensityMatrix\>\"", "]"}], ".", 
             RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}], "]"}]}]}]}], 
        "\n", "\t\t", "]"}], ";", "\n", "\t", "newState"}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t", "\n", "\t", "\n", "\t", "\n", "\t", "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"singleQuditOpMat", ",", " ", "multiQuditOpMat"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQuditOpMat", "[", 
     RowBox[{"qop_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opMats", ",", " ", "dim"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"opMats", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"id", "[", "dim", "]"}], ",", " ", 
          RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"opMats", "[", 
         RowBox[{"[", "pos", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"qop", "[", "\"\<MatrixRepresentation\>\"", "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "opMats"}], " ", "\[Equal]", " ", 
          "1"}], ",", " ", 
         RowBox[{"opMats", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"KroneckerProduct", " ", "@@", " ", "opMats"}]}], "]"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiQuditOpMat", "[", 
    RowBox[{"qop_", ",", " ", "qs_", ",", " ", "pos_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "qObjs", ",", " ", "arity", ",", " ", "n", ",", " ", "dim", ",", " ", 
       "passiveObjs", ",", " ", "order", ",", " ", "passiveRep", ",", " ", 
       "shape", ",", " ", "opMat", ",", " ", "tpLevels"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<NumberOfQudits\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"qObjs", " ", "=", " ", 
       RowBox[{"Range", "[", "n", "]"}]}], ";", "\n", "\t", 
      RowBox[{"arity", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Arity\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"passiveObjs", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"qObjs", ",", " ", "pos"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"order", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"pos", ",", " ", "passiveObjs"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"passiveRep", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"id", "[", "dim", "]"}], ",", " ", 
         RowBox[{"Length", " ", "@", " ", "passiveObjs"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "passiveObjs"}], " ", "===", " ", 
          "0"}], ",", "\n", "\t\t", 
         RowBox[{"qop", "[", "\"\<MatrixRepresentation\>\"", "]"}], ",", "\n",
          "\t\t", 
         RowBox[{"KroneckerProduct", " ", "@@", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"qop", "[", "\"\<MatrixRepresentation\>\"", "]"}], "}"}],
             ",", " ", "passiveRep"}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"opMat", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Ordering", " ", "@", " ", "order"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tpLevels", ",", " ", 
         RowBox[{"tpLevels", " ", "+", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"opMat", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "opMat"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", "^", "n"}], ",", " ", 
           RowBox[{"dim", "^", "n"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      "opMat"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.734028543634056*^9, 3.734028666482995*^9}, {
   3.7340288736160727`*^9, 3.734028885172907*^9}, {3.734028921478015*^9, 
   3.734029042652213*^9}, {3.734029077674862*^9, 3.7340291095670013`*^9}, {
   3.734029219821701*^9, 3.734029222162879*^9}, {3.7340297623295107`*^9, 
   3.7340297632058153`*^9}, {3.734044867492511*^9, 3.7340448781768503`*^9}, {
   3.734062355866897*^9, 3.734062355991124*^9}, {3.734132199614296*^9, 
   3.734132210003213*^9}, {3.7341322520723743`*^9, 3.7341322967791433`*^9}, {
   3.734132331891843*^9, 3.734132373864273*^9}, {3.734132503915545*^9, 
   3.734132604294259*^9}, {3.734132819654634*^9, 3.73413282092376*^9}, {
   3.7341328891906757`*^9, 3.734132903486607*^9}, {3.73414846120258*^9, 
   3.734148500516906*^9}, {3.734148545555147*^9, 3.734148548092507*^9}, {
   3.734148589775415*^9, 3.734148664097171*^9}, {3.7341489784160357`*^9, 
   3.734149204763007*^9}, {3.734149271890802*^9, 3.734149301453478*^9}, {
   3.734149345380959*^9, 3.734149367571025*^9}, {3.734187432660804*^9, 
   3.734187575746545*^9}, {3.734187630016621*^9, 3.7341876325054398`*^9}, {
   3.7341876940581636`*^9, 3.734187743409225*^9}, {3.7341877822148848`*^9, 
   3.7341879108993*^9}, {3.734187947430831*^9, 3.7341879815012693`*^9}, {
   3.734188710350801*^9, 3.7341887124702*^9}, {3.7341887499709387`*^9, 
   3.73418875023074*^9}, 3.734188875152727*^9, {3.7341889229727507`*^9, 
   3.734188968688238*^9}, {3.7344043539061193`*^9, 3.7344043709188757`*^9}, {
   3.734404425806138*^9, 3.734404433515122*^9}, {3.734405348078681*^9, 
   3.734405365227178*^9}, {3.735853025858407*^9, 3.735853034883498*^9}, {
   3.7358616229745207`*^9, 3.7358616351306753`*^9}, {3.735861680073333*^9, 
   3.7358616958324127`*^9}, {3.735862155667961*^9, 3.7358622074844513`*^9}, {
   3.735862248232128*^9, 3.735862322682551*^9}, {3.735862379262899*^9, 
   3.7358624093688793`*^9}, {3.735862759456092*^9, 3.735862936993791*^9}, {
   3.735863062942527*^9, 3.7358632605863934`*^9}, {3.7358633196488028`*^9, 
   3.735863330313788*^9}, {3.735863374760435*^9, 3.73586337950273*^9}, {
   3.7358634116345778`*^9, 3.735863468208068*^9}, {3.7358635117202253`*^9, 
   3.735863718001926*^9}, {3.735870513895788*^9, 3.735870569185961*^9}, {
   3.7358706155738277`*^9, 3.7358706177968197`*^9}, {3.735870649372736*^9, 
   3.735870705452241*^9}, {3.7358707497154408`*^9, 3.7358707642997513`*^9}, {
   3.7358711138548403`*^9, 3.73587112599641*^9}, {3.735871258810824*^9, 
   3.735871259708249*^9}, {3.735871328489863*^9, 3.735871462681138*^9}, {
   3.735871529061646*^9, 3.7358715459466343`*^9}, {3.7358715877513523`*^9, 
   3.7358716063256702`*^9}, {3.735871659901684*^9, 3.735871661297373*^9}, {
   3.735871704002791*^9, 3.7358717122764273`*^9}, {3.735871892976762*^9, 
   3.735871957396703*^9}, {3.735872172064198*^9, 3.735872179595245*^9}, {
   3.7358722173368196`*^9, 3.7358722615695057`*^9}, {3.73587246490784*^9, 
   3.735872471160802*^9}, {3.7358725056293783`*^9, 3.7358725585414333`*^9}, {
   3.735872901581045*^9, 3.73587292088531*^9}, {3.7358730361311607`*^9, 
   3.7358730543814783`*^9}, {3.7358731407363977`*^9, 
   3.7358731443528233`*^9}, {3.73587322179494*^9, 3.7358732837659197`*^9}, {
   3.735873377451795*^9, 3.735873403680884*^9}, {3.735873547561398*^9, 
   3.735873637146817*^9}, {3.735873698802072*^9, 3.7358737010241623`*^9}, {
   3.735873733896484*^9, 3.735873814421937*^9}, {3.735873856476879*^9, 
   3.735873893878121*^9}, {3.7358740770041103`*^9, 3.735874079807152*^9}, 
   3.735875191604396*^9, {3.735875339257794*^9, 3.735875398510847*^9}, {
   3.7358754563629503`*^9, 3.73587546551033*^9}, {3.7358755593052883`*^9, 
   3.735875566135*^9}, {3.735875632048295*^9, 3.735875636356538*^9}, {
   3.735875719186995*^9, 3.7358757306324453`*^9}, {3.7358760749791727`*^9, 
   3.735876138496985*^9}, {3.735878250400375*^9, 3.7358782510628233`*^9}, {
   3.735878283752013*^9, 3.7358782842854137`*^9}, {3.736048270748204*^9, 
   3.73604827794026*^9}},ExpressionUUID->"7e0758bb-5486-4dc3-9191-\
c04f2c33e79b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711200134959556*^9},ExpressionUUID->"19d2d169-34a5-4e92-854e-\
a9822da4d3fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{932, 1315},
WindowMargins->{{30, Automatic}, {Automatic, 123}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 92, "Title", "ExpressionUUID" -> \
"aafce6c4-05b6-4c99-b858-c6ccca8214bf"],
Cell[753, 27, 507, 11, 96, "Input", "ExpressionUUID" -> \
"6485396f-30db-4003-b042-8e68d983b124"],
Cell[1263, 40, 2999, 44, 52, "Code", "ExpressionUUID" -> \
"32839bc1-325d-4f0d-821b-2ee4846ab6c4"],
Cell[CellGroupData[{
Cell[4287, 88, 159, 3, 64, "Section", "ExpressionUUID" -> \
"ba55bc7d-379e-4eb3-9369-efcd81b39ba2"],
Cell[4449, 93, 12768, 287, 1374, "Code", "ExpressionUUID" -> \
"5d741b42-3406-4e72-a817-1ec1ca77fd83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17254, 385, 167, 3, 65, "Chapter", "ExpressionUUID" -> \
"03c0cbcd-57db-4bdd-9658-a81b6470d3fe"],
Cell[17424, 390, 336, 7, 52, "Code", "ExpressionUUID" -> \
"b48ef789-bc10-4c22-a4ba-ee359ab3637c"],
Cell[CellGroupData[{
Cell[17785, 401, 176, 3, 64, "Section", "ExpressionUUID" -> \
"6d63e10e-0c14-4da3-afd0-097436f66423"],
Cell[17964, 406, 109020, 2862, 14619, "Code", "ExpressionUUID" -> \
"5d19d0d0-9ca5-400c-955c-b97ccdb2a14f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127021, 3273, 217, 4, 64, "Section", "ExpressionUUID" -> \
"818653ff-be8f-487d-b9db-a60748cce5a5"],
Cell[127241, 3279, 61472, 1711, 5831, "Code", "ExpressionUUID" -> \
"c3318974-448a-4fda-990f-b42e5142a159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188750, 4995, 210, 3, 64, "Section", "ExpressionUUID" -> \
"0c8641d4-ebcc-4197-a2da-2654766246e9"],
Cell[188963, 5000, 35837, 916, 4786, "Code", "ExpressionUUID" -> \
"4b65d089-7b29-4c3f-85b7-d372ce8c3315"],
Cell[CellGroupData[{
Cell[224825, 5920, 174, 3, 44, "Subsection", "ExpressionUUID" -> \
"ac66f678-90e5-441a-a1ea-7ed027616593"],
Cell[225002, 5925, 9097, 239, 1231, "Code", "ExpressionUUID" -> \
"3c970fac-3242-4aad-97f3-4f058dece28c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234136, 6169, 171, 3, 44, "Subsection", "ExpressionUUID" -> \
"f9c9ab15-678d-4cc4-81fb-b31964621f91"],
Cell[234310, 6174, 11824, 314, 1554, "Code", "ExpressionUUID" -> \
"4ec6d5e3-720b-486e-addc-d2803ba504bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246183, 6494, 258, 4, 64, "Section", "ExpressionUUID" -> \
"9e0d1da4-81d2-4aff-ae9d-01f3e75d3652"],
Cell[246444, 6500, 97008, 2397, 10278, "Code", "ExpressionUUID" -> \
"f9de8a5a-9850-4a4d-83e2-05db6d0b9c3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343489, 8902, 211, 4, 64, "Section", "ExpressionUUID" -> \
"87c68156-78b9-4907-8382-7944705545e5"],
Cell[343703, 8908, 21529, 504, 2618, "Code", "ExpressionUUID" -> \
"b312b97f-8c03-488e-8858-92cb735a9fd4"],
Cell[365235, 9414, 252, 8, 72, "Code", "ExpressionUUID" -> \
"43f66569-d95d-48c5-8352-bf1261297b49"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

