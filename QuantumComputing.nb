(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    412646,      10539]
NotebookOptionsPosition[    393694,      10122]
NotebookOutlinePosition[    394048,      10138]
CellTagsIndexPosition[    394005,      10135]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Computing Package", "Title",
 CellChangeTimes->{{3.7233570644639378`*^9, 
  3.723357069374892*^9}},ExpressionUUID->"a9b786b5-4fd1-400d-b7da-\
e45e5ef415da"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "QuantumComputing`", "\n", "   ", "Jacob", " ", "Austin", " ", "Marks", 
   "\[IndentingNewLine]", "  ", "Wolfram", " ", "Research"}], "\n", 
  "*)"}]], "Input",
 CellDingbat->None,
 CellChangeTimes->{{3.7112431771618967`*^9, 3.7112432416543627`*^9}, {
  3.7130599180603523`*^9, 3.713059921827227*^9}, {3.7225624601091146`*^9, 
  3.722562461838049*^9}, {3.722731644405295*^9, 
  3.722731655570418*^9}},ExpressionUUID->"277fb974-bc35-4672-baa4-\
c94ca8bacbaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<QuantumComputing`\>\"", "]"}], 
  ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.71119344544118*^9, 3.711193445442876*^9}, {
   3.7111935758969088`*^9, 3.71119358197393*^9}, {3.711193724272962*^9, 
   3.7111937837615433`*^9}, {3.7111942324929*^9, 3.711194232873934*^9}, {
   3.711194264277464*^9, 3.7111942960690937`*^9}, {3.7111945326747704`*^9, 
   3.711194533863912*^9}, {3.711194794402788*^9, 3.7111948241755123`*^9}, {
   3.7111948732002068`*^9, 3.7111948856569643`*^9}, {3.711195117865428*^9, 
   3.711195143663855*^9}, {3.711198852783217*^9, 3.711198863228898*^9}, {
   3.711199057616405*^9, 3.711199057966117*^9}, {3.7111995656484337`*^9, 
   3.7111995693923903`*^9}, 3.711199611375822*^9, {3.711199647287364*^9, 
   3.7111996545556297`*^9}, {3.7112001136732616`*^9, 3.71120011475924*^9}, {
   3.711201105731988*^9, 3.7112011064408216`*^9}, {3.711201177545103*^9, 
   3.711201177901832*^9}, {3.711203077872945*^9, 3.7112030931669607`*^9}, {
   3.711214119707698*^9, 3.7112141582915497`*^9}, 3.7112431596633873`*^9, {
   3.711244256821862*^9, 3.711244260995764*^9}, {3.711285497008274*^9, 
   3.711285501382182*^9}, {3.711397212435175*^9, 3.711397216331284*^9}, {
   3.7113976134407473`*^9, 3.711397614779649*^9}, {3.7114154788441343`*^9, 
   3.711415494207264*^9}, {3.711544664674857*^9, 3.71154469027597*^9}, {
   3.711544733314969*^9, 3.711544739073782*^9}, {3.711544820576893*^9, 
   3.711544842213991*^9}, {3.711544888880245*^9, 3.711544935842847*^9}, {
   3.711545048913875*^9, 3.711545094598609*^9}, {3.71154517082306*^9, 
   3.711545208731883*^9}, {3.71154525542529*^9, 3.711545403283863*^9}, 
   3.711545496270652*^9, {3.711545556569695*^9, 3.711545568336632*^9}, {
   3.711545658844892*^9, 3.7115457211922197`*^9}, {3.7115457632574167`*^9, 
   3.711545992155058*^9}, {3.711546175651061*^9, 3.711546198696273*^9}, {
   3.711546367395368*^9, 3.711546369166432*^9}, {3.711546643128674*^9, 
   3.711546682339615*^9}, {3.711546750311109*^9, 3.71154679181918*^9}, {
   3.7115470932716427`*^9, 3.711547192052308*^9}, {3.711547282701106*^9, 
   3.711547315384865*^9}, {3.711547407555133*^9, 3.71154744444681*^9}, {
   3.711547483649725*^9, 3.711547529839658*^9}, {3.711547592395959*^9, 
   3.711547604304677*^9}, {3.711547639210986*^9, 3.7115477098842373`*^9}, {
   3.711547746490939*^9, 3.711547894602139*^9}, {3.711547953360056*^9, 
   3.7115479716167107`*^9}, {3.7115480384668493`*^9, 3.711548040339731*^9}, {
   3.7115480830280247`*^9, 3.711548114492032*^9}, {3.7115485086740303`*^9, 
   3.711548533187901*^9}, {3.711548596686845*^9, 3.7115486596865473`*^9}, {
   3.711548695865452*^9, 3.711548767854805*^9}, {3.711548810828059*^9, 
   3.71154881645711*^9}, {3.711549100277008*^9, 3.7115491032830257`*^9}, {
   3.711549453420886*^9, 3.711549456409721*^9}, {3.7225617088386307`*^9, 
   3.722561711696302*^9}, {3.722731647626582*^9, 
   3.722731652714527*^9}},ExpressionUUID->"cf3be8b3-fb99-4a22-a5e3-\
fab7ecea13da"],

Cell[CellGroupData[{

Cell["Usage Messages", "Section",
 CellChangeTimes->{{3.713453035956633*^9, 
  3.713453039115574*^9}},ExpressionUUID->"577c222b-da0c-44f2-93ad-\
b5656aa457a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "usage"}], " ", "=", "\n", "\t", 
    RowBox[{"\"\<QuantumDiscreteState[{\!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\) \[Rule] \!\(\*SubscriptBox[
StyleBox[\"vals\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\) \[Rule] \!\(\*SubscriptBox[
StyleBox[\"vals\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)}] yields the discrete \>\"", "<>", "\n", "\t", 
     "\"\<quantum state in which quantum objects \!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) assume values \!\(\*SubscriptBox[
StyleBox[\"vals\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\).\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteState[{{\!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\)} \[Rule] \!\(\*
StyleBox[\"vals\", \"TI\"]\)}] yields the discrete \>\"", "<>", "\n", "\t", 
     "\"\<quantum state in which potentially entangled quantum objects \
\!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) assume values \!\(\*
StyleBox[\"vals\", \"TI\"]\).\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteState[{\\\"Product\\\" \[Rule] {\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\)}}] yields the quantum \>\"", "<>", "\n", 
     "\t", "\"\< state formed by taking the tensor product of discrete \
quantum states \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], \"i\"]\).\\n\>\"", "<>", "\n", "\t", "\n", 
     "\t", "\"\<QuantumDiscreteState[{\\\"Mixture\\\" \[Rule] \
<|{\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\)\[Rule] \!\(\*SubscriptBox[
StyleBox[\"prob\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)\[Rule] \!\(\*SubscriptBox[
StyleBox[\"prob\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \[Ellipsis]}|>}] yields \>\"", "<>", "\n", "\t", 
     "\"\<the mixed quantum state formed from a statistical ensemble in which \
\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) \>\"", "<>", "\n", "\t", 
     "\"\<has weight \!\(\*SubscriptBox[
StyleBox[\"prob\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\).\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteState[{\\\"Trace\\\" \[Rule] {\!\(\*
StyleBox[\"qstate\", \"TI\"]\),{\!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\)}}}] yields the quantum \>\"", "<>", "\n", 
     "\t", "\"\<discrete state resulting from tracing out subsystems \
\!\(\*SubscriptBox[
StyleBox[\"qob\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) from \!\(\*
StyleBox[\"qstate\", \"TI\"]\).\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteStateQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumDiscreteStateQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if the head of \!\(\*
StyleBox[\"expr\", \"TI\"]\) is \>\"", "<>", "\n", "\t", 
     "\"\<QuantumDiscreteState, and False otherwise.\\n\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPureStateQ", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumPureStateQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if \!\(\*
StyleBox[\"expr\", \"TI\"]\) is a pure quantum state \>\"", "<>", "\n", "\t", 
     "\"\<and False otherwise.\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMixedStateQ", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    
    RowBox[{"\"\<QuantumMixedStateQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if \!\(\*
StyleBox[\"expr\", \"TI\"]\) is a mixed quantum state \>\"", "<>", "\n", 
     "\t", "\"\<and False otherwise.\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumDiscreteOperation[\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[
StyleBox[\"s\", \"TI\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"pec\", \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"inputs\", \"TI\"]\)}] yields the unitary discrete quantum \>\"", "<>",
      "\n", "\t", "\"\<operation with specification \!\(\*
StyleBox[\"spec\", \"TI\"]\) on the quantum objects \!\(\*
StyleBox[\"inputs\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\\n\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[\\\"Conditional\\\" \[Rule] \
{\!\(\*SubscriptBox[
StyleBox[\"cond\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\) \[Rule] \!\(\*SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"cond\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\) \[Rule] \!\(\*SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \[Ellipsis]}] \>\"", "<>", "\n", "\t", 
     "\"\<yields the conditional operation given by \!\(\*SubscriptBox[
StyleBox[\"qop\", \"TI\"], \"i\"]\) where \!\(\*SubscriptBox[
StyleBox[\"cond\", \"TI\"], \"i\"]\) is the first \>\"", "<>", "\n", "\t", 
     "\"\<condition satisfied.\>\"", "<>", "\n", "\t", "\n", "\t", 
     "\"\<QuantumDiscreteOperation[\\\"Projection\\\" \[Rule] {\!\(\*
StyleBox[\"spec\", \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\) \!\(\*
StyleBox[\"qobs\", \"TI\"]\)}] yields the projective \>\"", "<>", "\n", "\t", 
     "\"\<measurement specified by \!\(\*
StyleBox[\"spec\", \"TI\"]\) on quantum objects \!\(\*
StyleBox[\"qobs\", \"TI\"]\)\!\(\*
StyleBox[\".\", \"TI\"]\)\\n\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperationQ", "::", "usage"}], " ", "=", " ", "\n",
     "\t", 
    RowBox[{"\"\<QuantumDiscreteOperationQ[\!\(\*
StyleBox[\"expr\", \"TI\"]\)] gives True if the head of \!\(\*
StyleBox[\"expr\", \"TI\"]\) is \>\"", "<>", "\n", "\t", 
     "\"\<QuantumDiscreteOperation, and False otherwise.\\n\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumBlochPlot", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumBlochPlot[\!\(\*
StyleBox[\"qstate\", \"TI\"]\)] plots the Bloch vector corresponding to \>\"",
      "<>", "\n", "\t", "\"\<single qubit state \!\(\*
StyleBox[\"qstate\", \"TI\"]\) on a Bloch Sphere.\\n\>\"", "<>", "\n", "\t", 
     "\n", "\t", "\"\<QuantumBlochPlot[{\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\),\!\(\*
StyleBox[\"\[Ellipsis]\", \"TR\"]\)}] plots the Bloch vectors for \>\"", "<>",
      "\n", "\t", "\"\<single qubit states \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"i\", \"TI\"]]\) all on a single Bloch Sphere.\\n\>\""}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumStateDistance[\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\), \\\"\!\(\*
StyleBox[\"Method\", \"TI\"]\)\\\" \[Rule] \!\(\*
StyleBox[\"mthd\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)yields the \>\"", "<>", "\n", "\t", 
     "\"\<distance between quantum states \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[
StyleBox[\"qstate\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\) as calculated \>\"", "<>", "\n", "\t", 
     "\"\<according to method \!\(\*
StyleBox[\"mthd\", \"TI\"]\)\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "::", "usage"}], " ", "=", " ", "\n", 
    "\t", 
    RowBox[{"\"\<QuantumEntangledObjectsQ[\!\(\*
StyleBox[\"qstate\", \"TI\"]\), {\!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)}\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)yields true if pure \>\"", "<>", "\n", "\t", 
     "\"\<quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\) is entangled across the bipartition \
{\!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[
StyleBox[\"qobs\", \"TI\"], 
StyleBox[\"2\", \"TR\"]]\)}\\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuit", "::", "usage"}], " ", "=", " ", "\n", "\t", 
    RowBox[{"\"\<QuantumCircuit[\!\(\*
StyleBox[\"{\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"1\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"2\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"\[Ellipsis]\", \"TI\"]\)}] yields the quantum circuit described by \
\>\"", "<>", "\n", "\t", "\"\< the ordered sequence of operations \!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"1\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[SubscriptBox[
StyleBox[\"qop\", \"TI\"], 
StyleBox[\"2\", \"TR\"]], \"TI\"]\)\!\(\*
StyleBox[\",\", \"TI\"]\)\!\(\*
StyleBox[\" \", \"TI\"]\)\!\(\*
StyleBox[\"\[Ellipsis]\", \"TI\"]\) \\n\>\""}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPartialTr", "::", "usage"}], " ", "=", " ", "\n", "\t", 
   RowBox[{"\"\<QuantumPartialTr[\!\(\*
StyleBox[\"qstate\", \"TI\"]\), \!\(\*
StyleBox[\"qobs\", \"TI\"]\)\!\(\*
StyleBox[\"]\", \"TI\"]\)\!\(\*
StyleBox[\"  \", \"TI\"]\)yields the quantum state resulting from \>\"", "<>",
     "\n", "\t", "\"\<tracing out quantum objects \!\(\*
StyleBox[\"qobs\", \"TI\"]\) from quantum state \!\(\*
StyleBox[\"qstate\", \"TI\"]\)\\n\>\""}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723392527846676*^9, 3.723392875686284*^9}, {
  3.7233943007807837`*^9, 3.723394336128017*^9}, {3.7233943892056293`*^9, 
  3.723394715592004*^9}, {3.723394759411268*^9, 3.7233947781276703`*^9}, {
  3.723394825106251*^9, 3.723395011834484*^9}, {3.723395065015622*^9, 
  3.723395215379421*^9}, {3.7233952733274384`*^9, 3.723395347741436*^9}, {
  3.723395386864015*^9, 3.7233954577407913`*^9}, {3.7233955066850977`*^9, 
  3.723395530730135*^9}, {3.723395572162043*^9, 3.723395758482688*^9}, {
  3.7233958061952667`*^9, 3.723395936094789*^9}, {3.723395974987628*^9, 
  3.723396055527536*^9}, {3.7233960876962852`*^9, 3.7233961948379498`*^9}, {
  3.7234310984183702`*^9, 
  3.723431132821906*^9}},ExpressionUUID->"ea37a549-9593-4726-8127-\
98ced9613055"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions", "Chapter",
 CellChangeTimes->{{3.7134530599596777`*^9, 
  3.713453065631654*^9}},ExpressionUUID->"5c04dbbe-6bb2-4f98-9aa2-\
038adf99a770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711198901838376*^9, 3.711198907164904*^9}, {
  3.711199901118759*^9, 3.7111999051631403`*^9}, {3.711552598218913*^9, 
  3.7115525982261353`*^9}},ExpressionUUID->"9398a9e7-7f66-4a30-8120-\
a9b62d56a21e"],

Cell[CellGroupData[{

Cell["QuantumDiscreteState", "Subchapter",
 CellChangeTimes->{{3.722906908762578*^9, 3.7229069164918413`*^9}, {
  3.72296289630523*^9, 
  3.72296289854408*^9}},ExpressionUUID->"e9cfc2fa-ea0b-4e61-b0b2-\
13895e154d0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteState", "]"}], ";"}], "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "rules"}], "=", 
    "\"\<Argument `1` is not of the form \!\(\*
StyleBox[\"qobs\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)\[Rule] \!\(\*
StyleBox[\"state\",
FontSlant->\"Italic\"]\)\>\""}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "spec"}], "=", 
    "\"\<Argument `1` is not a valid state specification\>\""}], ";"}], 
  "Code"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "dimension"}], "=", 
   StyleBox[
    RowBox[{
    "\"\<Argument `1` is not a valid state specification\>\"", "<>", "\n", 
     "\t", "\"\< for quantum objects of dimension `2`\>\""}], "Code"]}], 
  StyleBox[";", "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "arity"}], "=", 
   RowBox[{
   "\"\<Argument `1` is not a valid state specification for\>\"", "<>", "\n", 
    "\t", "\"\< a state of `2` quantum objects\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "arrayDimensions"}], "=", 
    StyleBox[
     RowBox[{
     "\"\<Argument `1` does not have dimensions compatible\>\"", "<>", "\n", 
      "\t", "\"\< with state vector or density matrix representation for a \
quantum state comprised\>\"", "<>", "\n", "\t", 
      "\"\< of `3` `2`-level quantum objects\>\""}], "Code"]}], 
   StyleBox[";", "Code"]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "BaseDim"}], "=", 
   "\"\<Each base of `1` for BasisState must fall in Range[0,`2`]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "BaseArity"}], "=", 
    RowBox[{
    "\"\<Argument `1` must be a list of length `2` to be a BasisState\>\"", "<>",
      "\n", "\t", "\"\< for given list of quantum objects\>\""}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "herm"}], "=", 
   "\"\<Input density matrix `1` must be Hermitian\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "tr"}], "=", 
    "\"\<Input density matrix `1` must have unit trace\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "duplicateWires"}], "=", 
   "\"\<Quantum object labels must be unique\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "listDims"}], "=", 
    RowBox[{
    "\"\<All quantum states must have the same \>\"", "<>", "\n", "\t", 
     "\"\<total dimension\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "traceInputs"}], "=", 
    RowBox[{
    "\"\<Argument `1` must be a list of length 2\>\"", "<>", "\n", "\t", 
     "\"\< whose first element is the quantum state from which to trace, and \
\>\"", "<>", "\n", "\t", 
     "\"\< whose second element contains the quantum objects to be \
removed\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "mixtureAssoc"}], "=", 
   RowBox[{
   "\"\<Argument `1` is not an association with\>\"", "<>", "\n", "\t", 
    "\"\< states as keys and probabilities as values\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "mixtureKeys"}], "=", 
   RowBox[{
   "\"\<Keys of argument `1` are not valid quantum\>\"", "<>", "\n", "\t", 
    "\"\< discrete states\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "mixtureVals"}], "=", 
   RowBox[{
   "\"\<Values of argument `1` must be either symbolic\>\"", "<>", "\n", 
    "\t", "\"\< or numeric probabilities\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "emptyMixture"}], "=", 
   "\"\<Argument `1` must be a non-empty association\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "qobjs"}], "=", 
   RowBox[{
   "\"\<Quantum states in mixture described by argument `1` must\>\"", "<>", 
    "\n", "\t", "\"\< correspond to the same quantum objects\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "traceWires"}], "=", 
    RowBox[{
    "\"\<All quantum objects to be traced out, `1`, \>\"", "<>", "\n", "\t", 
     "\"\<must be subsystems of `2`\>\""}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "::", "prodObjs"}], "=", 
   RowBox[{
   "\"\<All quantum states `1` in tensor product state \>\"", "<>", "\n", 
    "\t", "\"\<must contain distinct quantum objects\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteState", "::", "prodDims"}], "=", 
    RowBox[{
    "\"\<All quantum states `1` in tensor product state \>\"", "<>", "\n", 
     "\t", "\"\<must have the same qudit dimension\>\""}]}], ";"}], "\n", 
  "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumDiscreteState", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], "}"}]}], 
   ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Transform", " ", "input", " ", "into", " ", "a", " ", "normal", " ", 
     "form"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteState", "[", 
     RowBox[{"specs_List", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"qstateHelper", "[", 
     RowBox[{"specs", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}]}], "]"}]}], 
   ";"}], "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Extract", " ", "Properties", " ", "of", " ", "the", " ", "State"}], " ", 
    "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"qstate_QuantumDiscreteState", "?", "QuantumDiscreteStateQ"}], 
     "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qstate", ",", " ", "prop"}], "]"}]}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Front", " ", "End", " ", "Fornatting", " ", "of", " ", "State"}],
     " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteState", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qs", ":", 
       RowBox[{"QuantumDiscreteState", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"stateVisualize", "[", 
     RowBox[{"qs", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Symbolic", " ", "Replacement", " ", "Rule", " ", "for", " ", "Quantum", 
     " ", "State"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteState", " ", "/:", " ", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     RowBox[{"qs", ":", 
      RowBox[{"QuantumDiscreteState", "[", 
       RowBox[{"specs_Association", ",", " ", 
        RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "subs_"}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"stateReplaceAll", "[", 
    RowBox[{"qs", ",", " ", "subs"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7229638311047297`*^9, 3.722963898695064*^9}, {
   3.7229639842556143`*^9, 3.7229640169729443`*^9}, {3.72296446007482*^9, 
   3.7229644615642357`*^9}, {3.722964504253599*^9, 3.722964504594747*^9}, {
   3.722965981757844*^9, 3.7229660466316*^9}, {3.7229669103101482`*^9, 
   3.722966912826725*^9}, {3.7229677403158503`*^9, 3.722967773932769*^9}, {
   3.722979438311317*^9, 3.7229795140025187`*^9}, {3.7229806612037573`*^9, 
   3.722980767506061*^9}, {3.722984208978909*^9, 3.722984243293787*^9}, {
   3.722984329816086*^9, 3.7229844264562397`*^9}, {3.7229845314502773`*^9, 
   3.722984538375678*^9}, {3.722984714417983*^9, 3.722984775449753*^9}, 
   3.7229848056294537`*^9, {3.722984854866523*^9, 3.722984926227969*^9}, {
   3.722985030378767*^9, 3.722985038296021*^9}, {3.7229850702164717`*^9, 
   3.722985138130546*^9}, {3.7229982868114758`*^9, 3.7229983159279623`*^9}, {
   3.7229990738386803`*^9, 3.72299909166785*^9}, {3.723047739970183*^9, 
   3.723047747632392*^9}, {3.7230478161063766`*^9, 3.7230479125735817`*^9}, {
   3.723048000015959*^9, 3.723048008139889*^9}, {3.723048278875083*^9, 
   3.7230482795993567`*^9}, {3.723053035323452*^9, 3.723053054483755*^9}, {
   3.7230552004048853`*^9, 3.723055276837679*^9}, {3.723055312900402*^9, 
   3.723055504061693*^9}, {3.723055548418788*^9, 3.723055613043438*^9}, {
   3.723059516649461*^9, 3.7230595678564157`*^9}, {3.72307704454136*^9, 
   3.723077060513249*^9}, {3.7230771347340317`*^9, 3.72307719926891*^9}, {
   3.723077564211761*^9, 3.723077643448481*^9}, {3.723080180686193*^9, 
   3.723080193148695*^9}, {3.72315207214112*^9, 3.723152103024705*^9}, {
   3.723157401558823*^9, 3.72315755741759*^9}, {3.723157669153565*^9, 
   3.7231576700425*^9}, {3.723163501558375*^9, 3.72316350653767*^9}, {
   3.7232510306395473`*^9, 
   3.723251113558238*^9}},ExpressionUUID->"651fbc4a-9335-404f-a093-\
986e1a92256c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qstateHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qstateHelper", "[", 
    RowBox[{"specs_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"specs", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<QuantumObjects\>\""}], ",", " ", 
       
       RowBox[{"buildStateFromGround", "[", 
        RowBox[{
         RowBox[{"specs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", "dim"}], "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Product\>\""}], ",", " ", 
       RowBox[{"buildProductState", "[", 
        RowBox[{
         RowBox[{"specs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", "dim"}], "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Mixture\>\""}], ",", " ", 
       RowBox[{"buildMixedState", "[", 
        RowBox[{
         RowBox[{"specs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", "dim"}], "]"}], 
       ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Trace\>\""}], ",", " ", 
       RowBox[{"traceOutFromState", "[", 
        RowBox[{"specs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], ",", "\n", "\t\t", 
       "True", ",", " ", 
       RowBox[{"buildStateFromGround", "[", 
        RowBox[{"specs", ",", " ", "dim"}], "]"}]}], "\n", "\t\t", "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722964632254249*^9, 3.722964679754368*^9}, {
  3.722964726086269*^9, 3.722964736459461*^9}, {3.722964780005917*^9, 
  3.722964783340578*^9}, {3.722964828683526*^9, 3.722964950538714*^9}, {
  3.722964981043494*^9, 3.7229650050555153`*^9}, {3.7229650699245167`*^9, 
  3.7229651461901484`*^9}, {3.723076923753598*^9, 
  3.7230769245779037`*^9}},ExpressionUUID->"ce5da2af-730e-4290-81db-\
a3aecfd6769a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"vecKeys", ",", " ", "dmKeys", ",", " ", "discreteStateKeysQ"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vecKeys", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<QuditDimension\>\"", ",", " ", "\"\<QuantumObjects\>\"", ",", " ", 
     "\"\<StateVector\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dmKeys", " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<QuditDimension\>\"", ",", " ", "\"\<QuantumObjects\>\"", ",", " ", 
      "\"\<DensityMatrix\>\""}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateKeysQ", "[", "assoc_", "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"If", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "assoc", "]"}], ",", " ", "vecKeys"}], "]"}], 
        " ", "===", " ", 
        RowBox[{"{", "}"}]}], ")"}], " ", "||", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "assoc", "]"}], ",", " ", "dmKeys"}], "]"}], 
        " ", "===", " ", 
        RowBox[{"{", "}"}]}], ")"}]}], ",", "\n", "\t\t", "True", ",", " ", 
     "\n", "\t\t", "False"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045690071863*^9, 3.72304577864074*^9}, 
   3.723045880039966*^9, {3.723057429054289*^9, 3.7230574906188297`*^9}, {
   3.723057575063951*^9, 3.7230576020854053`*^9}, {3.723057667242813*^9, 
   3.723057701176552*^9}, {3.723160307224415*^9, 
   3.723160399829957*^9}},ExpressionUUID->"7a9bac07-91a1-481b-a3bf-\
93dcd082f3d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validDiscreteStateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validDiscreteStateQ", "[", 
     RowBox[{"qstate_QuantumDiscreteState", "[", 
      RowBox[{"assoc_Association", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"discreteStateKeysQ", "[", 
       RowBox[{"qstate", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "True", ",", " ", 
      "False"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validDiscreteStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045426832735*^9, 3.7230454481602087`*^9}, {
   3.7230455245911694`*^9, 3.7230455381351233`*^9}, {3.723045593524185*^9, 
   3.723045619934106*^9}, {3.723045936236136*^9, 3.723045964826318*^9}, {
   3.723046805006936*^9, 3.723046812230378*^9}, 3.7230469947733803`*^9, {
   3.723047282778314*^9, 3.7230472917025414`*^9}, {3.723047334320068*^9, 
   3.7230473466660957`*^9}, {3.723047550545642*^9, 3.7230475606659307`*^9}, {
   3.7231602750095863`*^9, 3.7231602791508636`*^9}, {3.723163451293292*^9, 
   3.7231634545768957`*^9}},ExpressionUUID->"3aafaad1-e4a2-4ec9-b34f-\
de7c7d92c262"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validDiscreteStateListQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validDiscreteStateListQ", "[", "states_List", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"states", ",", " ", "validDiscreteStateQ"}], "]"}]}], ",", 
      " ", "\n", "\t", "False", ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"states", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1", ",", " ", "\"\<QuditDimension\>\""}],
            "]"}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"#", " ", "===", " ", 
           RowBox[{"states", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "1", ",", " ", "\"\<QuditDimension\>\""}],
              "]"}], "]"}]}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"QuantumDiscreteState", "::", "listDims"}], "]"}], ";", 
        "False"}], ")"}], ",", "\n", "\t", "True", ",", "\n", "\t", "True"}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validDiscreteStateListQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045426832735*^9, 3.7230454481602087`*^9}, {
   3.7230455245911694`*^9, 3.7230455381351233`*^9}, {3.723045593524185*^9, 
   3.723045619934106*^9}, {3.723045936236136*^9, 3.723045964826318*^9}, {
   3.723046142082382*^9, 3.723046213292479*^9}, {3.723046964640306*^9, 
   3.723046965183105*^9}, {3.723059307864773*^9, 3.723059502477662*^9}, 
   3.7230596621859617`*^9, {3.723160266250187*^9, 
   3.723160267047916*^9}},ExpressionUUID->"0edbcf48-18ea-4339-8266-\
9baf7682eb5c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "QuantumDiscreteStateQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteStateQ", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", 
      "QuantumDiscreteState"}], ",", " ", "True", ",", " ", "False"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722889256871593*^9, 3.722889316804421*^9}, {
  3.722964549484581*^9, 
  3.7229645562224503`*^9}},ExpressionUUID->"3ab0a7c4-effe-4390-9118-\
e830b40e700b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "vecQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecQ", "[", "state_QuantumDiscreteState", "]"}], " ", ":=", " ", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"state", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
     "\"\<StateVector\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecQ", "[", "expr___", "]"}], " ", ":=", " ", "$Failed"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7168720620694017`*^9, 
  3.7168721433063917`*^9}},ExpressionUUID->"d0686014-180d-438a-b698-\
86c6d0263697"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "matQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"matQ", "[", "state_QuantumDiscreteState", "]"}], " ", ":=", " ", 
   RowBox[{"!", 
    RowBox[{"vecQ", "[", "state", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"matQ", "[", "expr___", "]"}], " ", ":=", " ", "$Failed"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7168720620694017`*^9, 3.7168721433063917`*^9}, {
  3.723048162750235*^9, 
  3.7230481834044952`*^9}},ExpressionUUID->"6ec9e4a5-7545-427e-b2aa-\
72edbff91274"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "vecToMat", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vecToMat", "[", "vec_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"SparseArray", "[", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"{", "vec", "}"}], "]"}], "]"}], ".", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", "vec", "}"}], "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.717897940910837*^9, 
  3.717897950447522*^9}},ExpressionUUID->"0f4e6d82-a3b9-440a-8a73-\
3f997e31ffbe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "matToVecHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matToVecHelper", "[", 
   RowBox[{"row_", ",", " ", "pos_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"row", "[", 
        RowBox[{"[", "pos", "]"}], "]"}], " ", "===", "  ", "0"}], ")"}]}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "pos"}], "}"}], ",", " ", "False"}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.717899382748835*^9, 3.717899417856217*^9}, {
  3.7178994644431877`*^9, 3.717899495556345*^9}, {3.71789983882973*^9, 
  3.7178998661278543`*^9}, {3.717899947496282*^9, 
  3.717899969439877*^9}},ExpressionUUID->"8178a6d7-57d0-4578-aa7a-\
6258ab276f0a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "matToVec", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"matToVec", "[", "mat_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"row", ",", " ", "pos"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"row", ",", " ", "pos"}], "}"}], " ", "=", " ", "\n", "\t\t", 
      RowBox[{"SelectFirst", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"matToVecHelper", "[", 
            RowBox[{"#1", ",", " ", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", " ", 
          "mat"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"False", "===", "#"}], ")"}]}], "&"}]}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"row", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"row", "[", 
        RowBox[{"[", "pos", "]"}], "]"}], "]"}]}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.715484196073102*^9, 3.71548424308594*^9}, {
   3.71548429541007*^9, 3.7154843364021397`*^9}, {3.7154847050176*^9, 
   3.715484736493114*^9}, {3.715484779352688*^9, 3.715484807424138*^9}, {
   3.715484843128563*^9, 3.7154848649575644`*^9}, {3.71548494124043*^9, 
   3.715484944048614*^9}, {3.7154850185525208`*^9, 3.715485065180085*^9}, {
   3.7154851096148243`*^9, 3.715485118950433*^9}, {3.715485185665057*^9, 
   3.7154852735821342`*^9}, {3.7154854462549973`*^9, 3.715485456643058*^9}, {
   3.715485501403493*^9, 3.7154856212928753`*^9}, {3.7154856602846603`*^9, 
   3.715485721230138*^9}, {3.715485785520257*^9, 3.715485792141713*^9}, {
   3.71789741945383*^9, 3.717897421333804*^9}, {3.717897949471046*^9, 
   3.717897958679181*^9}, {3.717898174744206*^9, 3.717898273204597*^9}, {
   3.7178990438837633`*^9, 3.7178990965057487`*^9}, {3.717899134875248*^9, 
   3.717899142419416*^9}, {3.7178992832908373`*^9, 3.717899295345045*^9}, {
   3.7178993358361607`*^9, 3.717899377698143*^9}, {3.717899504182296*^9, 
   3.717899640986308*^9}, {3.717899708847746*^9, 3.717899738669833*^9}, {
   3.717899974826664*^9, 3.717899983825816*^9}, {3.717900014031599*^9, 
   3.7179000208540916`*^9}, {3.717900180768692*^9, 3.717900328173729*^9}, {
   3.71790036130405*^9, 3.717900397253748*^9}, 3.7179004727983093`*^9, {
   3.723058165250901*^9, 
   3.723058173314444*^9}},ExpressionUUID->"3c0fee95-2cd2-474d-9ce7-\
977bdb4d7f8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "l1Normalize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"l1Normalize", "[", "vals_List", "]"}], " ", ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/", 
      RowBox[{"(", 
       RowBox[{"Total", " ", "@", " ", "vals"}], ")"}]}], "&"}], ",", " ", 
    "vals"}], "]"}], " "}]}], "Code",
 CellChangeTimes->{{3.717897766247712*^9, 
  3.717897861456724*^9}},ExpressionUUID->"bd949b4d-dbc1-4829-aa55-\
14e0186b1e7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "wiresFormat", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"wiresFormat", "[", "ws_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ListQ", "[", "ws", "]"}], ",", " ", "ws", ",", " ", 
     RowBox[{"{", "ws", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722978989044413*^9, 3.722979045979841*^9}, 
   3.723052602385542*^9},ExpressionUUID->"91b6831f-5c35-48d2-837e-\
5292bd9f8b3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stateInputArrayQ", "[", "arr_", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", "arr", "]"}], " ", "&&", " ", "\n", "\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "arr", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"NumericQ", "[", "#", "]"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", "Symbol"}]}], 
         " ", "&"}]}], "]"}]}], ",", " ", "\n", "\t\t\t", "True", ",", " ", 
     "False"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.722963268198328*^9, 3.7229633065974607`*^9}, {
  3.722967950051255*^9, 3.722967955400393*^9}, {3.723058000877346*^9, 
  3.723058006714366*^9}, {3.7230580448560038`*^9, 
  3.7230580456794157`*^9}},ExpressionUUID->"011e8c9c-0814-4d0d-b743-\
3f971d8b20d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "singleQubitStateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"singleQubitStateQ", "[", "qs_QuantumDiscreteState", "]"}], " ", ":=",
     " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}], " ", "\[Equal]", 
        " ", "2"}], " ", "&&", "\n", "\t", 
       RowBox[{
        RowBox[{"Length", " ", "@", " ", 
         RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}]}], " ", 
        "\[Equal]", " ", "1"}]}], ",", "\n", "\t", "True", ",", "\n", "\t", 
      "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"singleQubitStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.72308223296305*^9, 
  3.723082350968309*^9}},ExpressionUUID->"38ab3d73-a920-4824-8817-\
e56a7a192216"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sparseQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sparseQ", "[", "arr_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "arr", "]"}], " ", "===", " ", "SparseArray"}], 
     ",", " ", "True", ",", " ", "False"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723157791679099*^9, 
  3.723157818657105*^9}},ExpressionUUID->"a09a65ea-fd4c-4e6e-81d6-\
4c99ddf94f72"],

Cell[CellGroupData[{

Cell["Symbolic Replacement for Quantum State", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.7231575761452847`*^9, 
  3.7231575804401083`*^9}},ExpressionUUID->"6fe3aeb0-bd5c-4644-ae1c-\
d673bd934805"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateReplaceAll", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateReplaceAll", "[", 
    RowBox[{"qs_", ",", " ", "subs_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dim", ",", " ", "objs", ",", " ", "key", ",", " ", "arr", ",", " ", 
       "assoc"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"objs", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"key", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\"\<StateVector\>\"", 
         ",", " ", "\"\<DensityMatrix\>\""}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"arr", " ", "=", " ", 
       RowBox[{"qs", "[", "key", "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"arr", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sparseQ", "[", "arr", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ArrayRules", "[", "arr", "]"}], "/.", "subs"}], ",", " ", 
           RowBox[{"Dimensions", "[", "arr", "]"}]}], "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"arr", "/.", "subs"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"key", " ", "\[Rule]", " ", "arr"}], ",", "\n", "\t\t", 
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",",
           "\n", "\t\t", 
          RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", "objs"}]}], 
         "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteState", "[", 
       RowBox[{"assoc", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}]}], 
       "]"}]}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723157586558752*^9, 3.723157611782199*^9}, {
  3.723157878545871*^9, 
  3.7231580926213293`*^9}},ExpressionUUID->"ea252774-6480-461c-98a9-\
b2e4b48a14c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties of Quantum State", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 
  3.723079988814993*^9}},ExpressionUUID->"b4b89830-d2db-4aab-b394-\
21ee8553fa4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "extractQStateProperty", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Basics", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qs", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<QuantumObjects\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"qs", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<QuantumObjects\>\""}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<StateVector\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"sVec", "[", "qs", "]"}]}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"dMat", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Basis", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<BasisLabels\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"basisLabels", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<BasisStates\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"basisStates", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Numerical", " ", "Properties"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<VonNeumannEntropy\>\""}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"vnEntropy", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<Purity\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"purity", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"State", " ", "Queries"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<PureStateQ\>\""}], "]"}], " ", ":=", " ", 
   RowBox[{"QuantumPureStateQ", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<MixedStateQ\>\""}], "]"}], " ", ":=", " ", 
    
    RowBox[{"QuantumMixedStateQ", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Bloch", " ", "Sphere"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<BlochCartesianCoordinates\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"blochCartesianCoords", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", 
    RowBox[{"qs_", ",", " ", "\"\<BlochSphericalCoordinates\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"blochSphericalCoords", "[", "qs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<BlochPlot\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"QuantumBlochPlot", "[", "qs", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Visualizations", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQStateProperty", "[", 
     RowBox[{"qs_", ",", " ", "\"\<Plot\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"plot", "[", "qs", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQStateProperty", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723080148947225*^9, 3.723080165444251*^9}, {
  3.723080263523758*^9, 3.7230803827752237`*^9}, {3.7230804266174707`*^9, 
  3.723080558260765*^9}, {3.723080618245543*^9, 3.72308067471662*^9}, {
  3.723080736599165*^9, 3.723080793690329*^9}, {3.723080834229566*^9, 
  3.723080869165203*^9}, {3.723080919811203*^9, 3.723080933361886*^9}, {
  3.72308096556192*^9, 3.7230809977842693`*^9}, {3.723081044624694*^9, 
  3.7230810858366737`*^9}, {3.723081415922271*^9, 3.723081459573505*^9}, {
  3.7230815042068577`*^9, 3.723081512986466*^9}, {3.7230815480519037`*^9, 
  3.723081653427617*^9}, {3.723081720869252*^9, 3.7230817752707863`*^9}, {
  3.723081828425395*^9, 3.723081830812449*^9}, {3.723168581593861*^9, 
  3.7231685881955423`*^9}},ExpressionUUID->"80857c46-c651-4deb-b543-\
98fb5f7db32a"],

Cell[CellGroupData[{

Cell["State Queries", "Subsection",
 CellChangeTimes->{{3.723084831285357*^9, 
  3.723084833653574*^9}},ExpressionUUID->"592fb9e7-f8ba-4601-ab5b-\
d2c69088473d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"QuantumPureStateQ", ",", " ", "QuantumMixedStateQ"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPureStateQ", "[", "qs_QuantumDiscreteState", "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qs", "[", "\"\<Purity\>\"", "]"}], " ", "===", " ", "1"}], ",",
      " ", "True", ",", " ", "False"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPureStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
    "$Failed"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMixedStateQ", "[", "qs_QuantumDiscreteState", "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qs", "[", "\"\<Purity\>\"", "]"}], " ", "===", " ", "1"}], ",",
      " ", "False", ",", " ", "True"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumMixedStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723084848712854*^9, 
  3.7230849594450607`*^9}},ExpressionUUID->"9d409a9f-3e64-4419-bede-\
d4ba2095dbbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Vector and Density Matrix", "Subsection",
 CellChangeTimes->{{3.7230813014090853`*^9, 
  3.723081329329158*^9}},ExpressionUUID->"815f14e9-01d0-41a9-91a3-\
552d6242b895"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"dMat", ",", " ", "sVec"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sVec", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"QuantumPureStateQ", "[", "qs", "]"}], ",", " ", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}], ",", " ",
      "\n", "\t\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"QuantumDiscreteState", "::", "mixture"}], "]"}], ";", 
       "$Failed"}], ")"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dMat", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"qs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
       "\"\<DensityMatrix\>\""}], "]"}], ",", " ", "\n", "\t\t", 
     RowBox[{"qs", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], "]"}], ",", 
     " ", "\n", "\t\t", 
     RowBox[{"vecToMat", "[", 
      RowBox[{"qs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}]}],
     "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723081332168064*^9, 
  3.723081390202325*^9}},ExpressionUUID->"39762e65-31ba-4072-9651-\
65fcc295d01b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basis Labels and Basis Vectors", "Subsection",
 CellChangeTimes->{{3.7230813014090853`*^9, 
  3.723081310000461*^9}},ExpressionUUID->"e4857872-d435-4d9f-b24a-\
178814ff46a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"basisLabels", ",", " ", "basisStates"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisLabels", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}], " ", "/.", " ", 
    RowBox[{"List", " ", "\[Rule]", " ", "Ket"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basisStates", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dim", ",", " ", "n", ",", " ", "kets"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", 
        RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}]}]}], ";", "\n", 
      "\t", 
      RowBox[{"kets", " ", "=", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"dim", "-", "1"}]}], "]"}], ",", " ", "n"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"kets", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", " ", "kets", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"kets", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"StringJoin", ",", " ", "kets"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{"Ket", ",", " ", "kets"}], "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723081003535055*^9, 3.7230810707321367`*^9}, {
   3.7230811169933167`*^9, 3.723081126294136*^9}, {3.723081190479735*^9, 
   3.723081207721685*^9}, {3.723081238157145*^9, 3.723081276038707*^9}, 
   3.7230901301048*^9},ExpressionUUID->"406313e8-c2af-43ba-9800-53d87789be01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Properties", "Subsection",
 CellChangeTimes->{{3.7230813014090853`*^9, 3.723081310000461*^9}, {
  3.723081852060924*^9, 
  3.723081855443262*^9}},ExpressionUUID->"51e68e41-1728-4cb2-a2a3-\
a51984a6994a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"vnEntropy", ",", " ", "purity"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vnEntropy", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dm", ",", " ", "eigs", ",", " ", "entropy"}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", 
         RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"eigs", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Eigenvalues", "[", "dm", "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"entropy", " ", "=", " ", 
        RowBox[{"-", " ", 
         RowBox[{"Total", "@", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"2", ",", "#"}], "]"}]}], "&"}], ",", "eigs"}], 
           "]"}]}]}]}], ";", "\n", "\t", "entropy"}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"purity", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\n", "\t", "1", ",", " ", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dm", " ", "=", " ", 
         RowBox[{"qs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], "}"}],
        ",", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"Tr", "[", 
         RowBox[{"dm", ".", "dm"}], "]"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723081858826152*^9, 3.723081872827489*^9}, {
  3.723081908109528*^9, 3.7230820360542192`*^9}, {3.723163169664028*^9, 
  3.7231631781221037`*^9}},ExpressionUUID->"c7ab64b1-d792-4b08-8657-\
d7d7d95da60f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bloch Sphere", "Subsection",
 CellChangeTimes->{{3.7230821103601627`*^9, 
  3.7230821129915733`*^9}},ExpressionUUID->"d014d5d2-8409-4b60-9c9a-\
b9b8867436f9"],

Cell[CellGroupData[{

Cell["Bloch Coordinates", "Subsubsection",
 CellChangeTimes->{{3.7230852290313473`*^9, 3.723085231550041*^9}, {
  3.723085852805791*^9, 
  3.723085853663068*^9}},ExpressionUUID->"8024ae38-46bb-4190-88b3-\
37f858be509d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"blochPureSphericalCoords", ",", " ", "blochPureCartesianCoords"}],
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "blochMixedSphericalCoords", ",", " ", "blochMixedCartesianCoords"}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"blochSphericalCoords", ",", " ", "blochCartesianCoords"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "u", ",", " ", "v", ",", " ", "w", ",", " ", "r", ",", " ", "\[Theta]", 
     ",", " ", "\[Phi]"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochPureSphericalCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", "=", " ", 
         RowBox[{
          RowBox[{"qs", "[", "\"\<StateVector\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t", 
        RowBox[{"\[Beta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"qs", "[", "\"\<StateVector\>\"", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "\n", "\t\t", "}"}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"2", " ", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"Abs", " ", "@", " ", "\[Alpha]"}], "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"Arg", "[", "\[Beta]", "]"}], " ", "-", " ", 
         RowBox[{"Arg", "[", "\[Alpha]", "]"}]}]}], "}"}]}], "\n", "\t\t", 
     "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochPureCartesianCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]", ",", " ", "u", ",", " ",
         "v", ",", " ", "w"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"blochPureSphericalCoords", "[", "qs", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"u", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"v", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochMixedCartesianCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dm", ",", " ", "u", ",", " ", "v", ",", " ", "w"}], "}"}], 
      ",", "\n", "\t", 
      RowBox[{
       RowBox[{"dm", " ", "=", " ", 
        RowBox[{"Normal", " ", "@", " ", 
         RowBox[{"qs", "[", "\"\<DensityMatrix\>\"", "]"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"u", " ", "=", " ", 
        RowBox[{"Re", " ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"dm", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", " ", "2"}], "]"}], "]"}], ")"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"v", " ", "=", " ", 
        RowBox[{"Im", " ", "@", " ", 
         RowBox[{"(", 
          RowBox[{"dm", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", " ", "1"}], "]"}], "]"}], ")"}]}]}], ";", "\n", 
       "\t", 
       RowBox[{"w", " ", "=", " ", 
        RowBox[{
         RowBox[{"dm", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"dm", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", " ", "2"}], "]"}], "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochMixedSphericalCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r", ",", " ", "\[Theta]", ",", " ", "\[Phi]", ",", " ", "u", ",", " ",
         "v", ",", " ", "w"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}], " ", "=", " ", 
        RowBox[{"blochMixedCartesianCoords", "[", "qs", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
          RowBox[{"v", " ", "\[Equal]", " ", "0"}], " ", "&&", " ", 
          RowBox[{"w", " ", "\[Equal]", " ", "0"}]}], ",", "\n", "\t\t", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], "]"}]}], "]"}],
        ";", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Abs", ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"CoordinateTransformData", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
            "\"\<Cartesian\>\"", " ", "\[Rule]", " ", "\"\<Spherical\>\""}], 
            ",", " ", "\n", "\t\t\t\t\t", "\"\<Mapping\>\"", ",", " ", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"u", ",", " ", "v", ",", " ", "w"}], "}"}]}], "\n", 
           "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "}"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"blochSphericalCoords", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"vals", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
          RowBox[{"blochPureSphericalCoords", "[", "qs", "]"}], ",", "\n", 
          "\t\t", 
          RowBox[{"blochMixedSphericalCoords", "[", "qs", "]"}]}], "]"}]}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<r\>\"", ",", " ", "\"\<\[Theta]\>\"", ",", " ", 
          "\"\<\[Phi]\>\""}], "}"}], " ", "\[Rule]", " ", "vals"}], "]"}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blochCartesianCoords", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{"blochPureCartesianCoords", "[", "qs", "]"}], ",", "\n", 
         "\t\t", 
         RowBox[{"blochMixedCartesianCoords", "[", "qs", "]"}]}], "]"}]}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", " ", "\"\<v\>\"", ",", " ", "\"\<w\>\""}], 
        "}"}], " ", "\[Rule]", " ", "vals"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723082995984948*^9, 3.723083051918002*^9}, {
   3.723083091127631*^9, 3.723083314138953*^9}, {3.723083388606472*^9, 
   3.723083701361402*^9}, {3.723083732087542*^9, 3.723083759619532*^9}, 
   3.723083990033866*^9, {3.723084298919677*^9, 3.723084361666766*^9}, {
   3.7230844270839853`*^9, 3.723084477002389*^9}, {3.7230845448547783`*^9, 
   3.723084575125111*^9}, {3.723085104618924*^9, 3.723085142258936*^9}, {
   3.723085788301993*^9, 3.723085820325091*^9}, {3.723254336074091*^9, 
   3.723254348779917*^9}, {3.723254404861882*^9, 
   3.723254412896562*^9}},ExpressionUUID->"1b17427b-205f-4047-aa8e-\
cf45b3abc0d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bloch Visualization", "Subsubsection",
 CellChangeTimes->{{3.723085843239553*^9, 
  3.723085848614937*^9}},ExpressionUUID->"59e4802d-f9f8-4875-9bf3-\
3bc97ec6ce9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "referenceStates", ",", " ", "greatCircles", ",", " ", "blochQubit"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"referenceStates", " ", ":=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.4", "]"}], ",", " ", 
        RowBox[{"Sphere", "[", "]"}], ",", "\n", "\t", "Black", ",", " ", 
        "Thick", ",", " ", 
        RowBox[{"Opacity", "[", "1.", "]"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|0\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1.3"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|1\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "1.3"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|R\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.3", ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|L\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1.3"}], ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|+\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"1.6", ",", 
            RowBox[{"-", "0.25"}], ",", "0"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<|-\[RightAngleBracket]\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "0.3", ",", "0"}], "}"}]}], "]"}]}], 
       "}"}], ",", "\n", "\t", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", "\t", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"greatCircles", " ", ":=", " ", 
    RowBox[{"ParametricPlot3D", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}], ",", " ", "0"}], "}"}], ",", " ", 
        "\n", "\t ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", "\n", "\t ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", " ", "0", ",", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], "}"}], ",", " ", "\n", 
      "\t ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Black", ",", " ", "Thin"}], "}"}], ",", " ", "3"}], 
        "]"}]}], ",", " ", "\n", "\t", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", "\n", "\t", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\n", "\t", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", "\n", "\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "blochQubit", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Color\>\"", " ", "\[Rule]", " ", "Red"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"blochQubit", "[", 
   RowBox[{"qs_QuantumDiscreteState", ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"coords", " ", "=", " ", 
       RowBox[{
        RowBox[{"blochCartesianCoords", "[", "qs", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"color", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "\"\<Color\>\"", "]"}]}]}], "}"}], ",", 
    "\n", "\t", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"color", ",", " ", "\n", "\t\t", 
        RowBox[{"Arrowheads", "[", ".03", "]"}], ",", " ", "\n", "\t\t", 
        RowBox[{"Arrow", "[", 
         RowBox[{
          RowBox[{"Tube", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "coords"}], 
             "}"}], ",", ".01"}], "]"}], ",", "\n", "\t\t", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", 
            RowBox[{"-", ".01"}]}], "}"}]}], "]"}]}], "}"}], ",", "\n", 
      "\t\t", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\n", "\t\t", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.7"}], ",", " ", "1.7"}], "}"}]}], "}"}]}]}], "\n", 
     "\t\t", "]"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.723086418720476*^9, 3.723086595678315*^9}, 
   3.723086710776038*^9, {3.723086777088711*^9, 3.7230867959930468`*^9}, {
   3.72308683816606*^9, 3.723086842436117*^9}, {3.723086910317874*^9, 
   3.723086912569715*^9}, {3.723086965259246*^9, 3.7230870043365393`*^9}, {
   3.723087039033695*^9, 
   3.7230872502617483`*^9}},ExpressionUUID->"e3bae353-a9c8-4f91-88de-\
1ac6df17b115"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumBlochPlot", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "::", "qubit"}], "=", 
   StyleBox["\"\<Argument `1` is not a single qubit state\>\"", "Code"]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "::", "input"}], "=", 
   RowBox[{
   "\"\<Inputs to QuantumBlochPlot must be either \>\"", "<>", "\n", "\t", 
    "\"\<quantum discrete states or rules of the form qstate \[Rule] \
color\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "::", "ruleQubit"}], "=", 
   StyleBox["\"\<Argument `1` must be a single qubit state\>\"", "Code"]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumBlochPlot", "::", "ruleColor"}], "=", 
    StyleBox["\"\<Argument `1` must be a color\>\"", "Code"]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "[", "qs_QuantumDiscreteState", "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"QuantumBlochPlot", "[", 
    RowBox[{"{", "qs", "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumBlochPlot", "[", 
     RowBox[{"qs_QuantumDiscreteState", " ", "\[Rule]", " ", 
      RowBox[{"col_", "?", "ColorQ"}]}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"QuantumBlochPlot", "[", 
     RowBox[{"{", 
      RowBox[{"qs", " ", "\[Rule]", " ", "col"}], "}"}], "]"}]}], ";"}], "\n",
   "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumBlochPlot", "[", "qstates_List", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "qubits", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"qstates", ",", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"validBlochInputQ", "[", "#", "]"}], "&"}]}], "]"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"qubits", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"QuantumDiscreteStateQ", "[", "#", "]"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"blochQubit", "[", "#", "]"}], ",", " ", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"blochQubit", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
              RowBox[{"\"\<Color\>\"", " ", "\[Rule]", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "\n", 
           "\t\t\t\t\t", "]"}], "&"}], ",", " ", "qstates"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Show", "[", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"greatCircles", ",", " ", "referenceStates"}], "}"}], ",", 
         "\n", "\t\t ", "qubits"}], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"QuantumBlochPlot", "[", "expr___", "]"}], " ", ":=", " ", 
  "$Failed"}]}], "Code",
 CellChangeTimes->{{3.723087656919984*^9, 3.723087684880952*^9}, {
  3.723087731365644*^9, 3.723087747148327*^9}, {3.723087825029429*^9, 
  3.723087950154996*^9}, {3.7230880205592546`*^9, 3.723088053251017*^9}, {
  3.723088085216803*^9, 3.723088198906848*^9}, {3.723088583688422*^9, 
  3.723088585544519*^9}, {3.7230886986431417`*^9, 3.723088763803362*^9}, {
  3.723088881998773*^9, 3.7230888994993277`*^9}, {3.723088936022841*^9, 
  3.723088946195594*^9}, {3.723089184602295*^9, 3.723089235649457*^9}, {
  3.7230893044618196`*^9, 3.7230893092656403`*^9}, {3.723089339802908*^9, 
  3.723089449107246*^9}, {3.723089479220242*^9, 3.723089518708214*^9}, {
  3.723089649462016*^9, 
  3.723089651201412*^9}},ExpressionUUID->"9bb39bfc-f601-4b60-83ab-\
33b7ccde9f03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validBlochInputQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validBlochInputQ", "[", "expr_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"QuantumDiscreteStateQ", "[", "expr", "]"}], " ", "&&", "\n", 
      "\t", 
      RowBox[{"!", 
       RowBox[{"singleQubitStateQ", "[", "expr", "]"}]}]}], ",", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumBlochPlot", "::", "qubit"}], ",", "expr"}], "]"}], 
       ";", 
       RowBox[{"Return", "[", "False", "]"}]}], ")"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Head", "[", "expr", "]"}], " ", "\[NotEqual]", " ", "Rule"}], 
     ",", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumBlochPlot", "::", "input"}], ",", "expr"}], "]"}], 
       ";", 
       RowBox[{"Return", "[", "False", "]"}]}], ")"}], ",", "\n", "\t", 
     RowBox[{"!", 
      RowBox[{"singleQubitStateQ", "[", 
       RowBox[{"expr", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumBlochPlot", "::", "ruleQubit"}], ",", 
         RowBox[{"expr", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"Return", "[", "False", "]"}]}], ")"}], ",", "\n", "\t", 
     RowBox[{"!", 
      RowBox[{"ColorQ", "[", 
       RowBox[{"expr", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumBlochPlot", "::", "ruleColor"}], ",", 
         RowBox[{"expr", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
       RowBox[{"Return", "[", "False", "]"}]}], ")"}], ",", "\n", "\t", 
     "True", ",", "\n", "\t", "True"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validBlochInputQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723088221368561*^9, 3.7230884134919443`*^9}, {
  3.72308844598695*^9, 3.723088562686406*^9}, {3.7230886584182262`*^9, 
  3.723088675002851*^9}, {3.723088794887854*^9, 3.7230888741596327`*^9}, {
  3.723088911165948*^9, 3.723088926407366*^9}, {3.72308896869389*^9, 
  3.723089157549605*^9}},ExpressionUUID->"28a41781-aabc-4ec2-83c0-\
ef58a5c1acd2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Amplitude and Phase", "Subsection",
 CellChangeTimes->{{3.7230897995868998`*^9, 
  3.7230898043785267`*^9}},ExpressionUUID->"c3b934a6-fc8e-4312-8299-\
ed2ba95ea15c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"colorBar", ",", " ", "unitSquare"}], "]"}], ";"}], "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"colorBar", " ", ":=", " ", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{"y", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", "\n", "\t", 
      RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", "\n", "\t", 
      RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"PlotPoints", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "150"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", "\n", "\t", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", "\n", "\t", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"None", ",", "All"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"ColorData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<GrayTones\>\"", ",", "\"\<Reverse\>\""}], "}"}], 
        "]"}]}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitSquare", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_", ",", "abs_", ",", "arg_"}], "}"}], "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<BlueGreenYellow\>\"", "]"}], "[", 
      RowBox[{"Rescale", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "arg", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "]"}], ",", " ", "\n", 
     "\t", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "j", ",", "abs"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "j", ",", "abs"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"j", "+", "1"}], ",", "abs"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", 
          RowBox[{"j", "+", "1"}], ",", "abs"}], "}"}]}], "}"}], "]"}]}], 
    "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723166636809556*^9, 3.723166715253025*^9}, {
  3.7231667704521513`*^9, 
  3.723166784647059*^9}},ExpressionUUID->"273149ac-6874-47c8-b43c-\
7e58aabed475"],

Cell["Amplitudes and Phases:", "Text",
 CellChangeTimes->{{3.72316708371984*^9, 
  3.723167093935359*^9}},ExpressionUUID->"49a2ea4c-7b51-4d1a-8cda-\
ff6e2d65ff88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "plot", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"plot", "[", "qs_QuantumDiscreteState", "]"}], " ", ":=", " ", "\n",
   "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", 
    RowBox[{"plotVec", "[", "qs", "]"}], ",", 
    RowBox[{"plotMat", "[", "qs", "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.723174527112797*^9, 3.723174563327647*^9}, {
  3.723174913748334*^9, 3.723174920482279*^9}, {3.723175281808826*^9, 
  3.7231752845152617`*^9}},ExpressionUUID->"31ce3af5-0b4c-44a7-b7dd-\
d64a7f60fe0f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"chartVec", ",", " ", "plotVec"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chartVec", "[", 
     RowBox[{"inputs_", ",", " ", "labels_"}], "]"}], " ", ":=", " ", 
    RowBox[{"BarChart", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"ColorData", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Rainbow\>\"", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", 
                RowBox[{"2", " ", "Pi"}]}], "}"}]}], "}"}], "]"}], "@", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], "\n", "\t\t", "/@",
        "inputs"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", " ", 
      RowBox[{"LegendAppearance", "\[Rule]", "\"\<Column\>\""}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"(", "labels", ")"}]}], ",", " ", "\n", "\t\t", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Basis State Amplitudes and Phases\>\"", ",", "\"\<Title\>\"", 
         ",", "14"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", "\"\<Amplitude\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotVec", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "labels", ",", " ", "vec", ",", " ", "amps", ",", " ", "phases", ",", 
       " ", "chartInput", ",", " ", "chart"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"labels", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<BasisStates\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<StateVector\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"amps", " ", "=", " ", 
       RowBox[{"Abs", " ", "/@", " ", "vec"}]}], ";", "\n", "\t", 
      RowBox[{"phases", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "\[GreaterEqual]", "0"}], ",", " ", "#", ",", "  ", 
            RowBox[{"\[Pi]", " ", "-", " ", "#"}]}], "]"}], "&"}], ",", " ", 
         RowBox[{"Arg", " ", "/@", " ", "vec"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"chartInput", " ", "=", " ", 
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"amps", ",", " ", "phases"}], "}"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"chart", " ", "=", " ", 
       RowBox[{"chartVec", "[", 
        RowBox[{"chartInput", ",", " ", "labels"}], "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"Show", "[", 
       RowBox[{"Legended", "[", 
        RowBox[{"chart", ",", " ", "\n", "\t\t", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Rainbow\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "6.28"}], "}"}]}], "}"}], ",", " ", "\n",
            "\t\t\t", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\<Relative Phase\>\""}]}], 
          "]"}]}], "]"}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723168963083447*^9, 3.723169014290386*^9}, {
  3.72316904442531*^9, 3.723169195724728*^9}, {3.72316925755606*^9, 
  3.7231692979057913`*^9}, {3.723169337573492*^9, 3.723169448807794*^9}, {
  3.723169480923267*^9, 3.723169481691205*^9}, {3.723174599458516*^9, 
  3.72317464036549*^9}},ExpressionUUID->"fb9543f4-6c6a-41d9-b4db-\
60b06a796f52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"chartMat", ",", " ", "plotMat"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"chartMat", "[", 
     RowBox[{"inputs_", ",", " ", "labels_"}], "]"}], " ", ":=", " ", 
    RowBox[{"BarChart3D", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"{", 
              RowBox[{"\"\<Rainbow\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], "]"}], "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], ",", "inputs", 
        ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", "\n", "\t\t", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", " ", "\n", "\t\t", 
      RowBox[{"LegendAppearance", "\[Rule]", "\"\<Column\>\""}], ",", " ", 
      "\n", "\t\t", 
      RowBox[{"ChartLabels", "\[Rule]", " ", "labels"}], ",", "\n", "\t\t", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Basis State Amplitudes and Phases\>\"", ",", "\"\<Title\>\"", 
         ",", "14"}], "]"}]}], ",", " ", "\n", "\t\t", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Canvas\>\"", "\[Rule]", "None"}], "}"}]}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "\"\<Amplitude\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMat", "[", "qs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "labels", ",", " ", "mat", ",", " ", "amps", ",", " ", "phases", ",", 
       " ", "chartInput", ",", " ", "chart"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"labels", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<BasisStates\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"labels", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"labels", ",", " ", 
         RowBox[{"labels", " ", "/.", " ", 
          RowBox[{"Ket", " ", "\[Rule]", "  ", "Bra"}]}]}], "}"}]}], ";", 
      "\n", "\t", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"qs", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"phases", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Arg", ",", " ", "mat", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"phases", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "\[GreaterEqual]", "0"}], ",", " ", "#", ",", "  ", 
            RowBox[{"\[Pi]", " ", "-", " ", "#"}]}], "]"}], " ", "&"}], ",", 
         " ", "phases", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"amps", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"Abs", ",", " ", "mat", ",", " ", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"chartInput", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2"}], "}"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"amps", ",", " ", "phases"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"chart", " ", "=", " ", 
       RowBox[{"chartMat", "[", 
        RowBox[{"chartInput", ",", " ", "labels"}], "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"Show", "[", 
       RowBox[{"Legended", "[", 
        RowBox[{"chart", ",", " ", "\n", "\t\t", 
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Rainbow\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "6.28"}], "}"}]}], "}"}], ",", " ", "\n",
            "\t\t\t", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\<Relative Phase\>\""}]}], 
          "]"}]}], "]"}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723171476682596*^9, 3.72317152561683*^9}, {
  3.723173919608376*^9, 3.7231740269395447`*^9}, {3.723174067712072*^9, 
  3.723174135811254*^9}, {3.7231741682740383`*^9, 3.7231742878736753`*^9}, {
  3.723174317986081*^9, 3.723174387634445*^9}, {3.7231744237220287`*^9, 
  3.7231744410156384`*^9}},ExpressionUUID->"eded28f5-0ef4-4c11-bc6c-\
c1acac011cbd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Front End Formatting", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.723080236894109*^9, 3.723080249301784*^9}, {3.7231505243953857`*^9, 
  3.723150535570315*^9}},ExpressionUUID->"799107f0-60e7-488c-a135-\
a601a46ca6f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateVisualize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateVisualize", "[", 
    RowBox[{"qs_QuantumDiscreteState", ",", " ", "fmt_"}], "]"}], " ", ":=", 
   " ", "\n", "\t", 
   RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
    RowBox[{
    "QuantumDiscreteState", ",", "\n", "\t\t", "qs", ",", "\n", "\t\t", 
     RowBox[{"stateArrayVisualize", "[", "qs", "]"}], ",", "\n", "\t\t", 
     RowBox[{"stateBaseVisual", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
     RowBox[{"stateExpandedVisual", "[", "qs", "]"}], ",", " ", "\n", "\t\t", 
     "fmt"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723150598369565*^9, 3.7231505991529083`*^9}, {
  3.7231506645465*^9, 3.723150887544394*^9}, {3.723151053204322*^9, 
  3.7231510573320293`*^9}, {3.723151970383168*^9, 3.723151984923749*^9}, {
  3.723152127403122*^9, 3.723152132771455*^9}, {3.7231522380981607`*^9, 
  3.723152247343449*^9}},ExpressionUUID->"ee141eb9-4bc2-4212-891b-\
233cab813890"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateArrayVisualize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"stateArrayVisualize", "[", "qs_", "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"vecQ", "[", "qs", "]"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", 
        RowBox[{"qs", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", "8"}]}], ",", " ", "\n",
     "\t", 
    RowBox[{"MatrixForm", " ", "@", " ", 
     RowBox[{"Normal", " ", "@", " ", 
      RowBox[{"qs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}]}], ",", 
    "\n", "\t", 
    RowBox[{"vecQ", "[", "qs", "]"}], ",", " ", "\n", "\t", 
    RowBox[{"qs", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], ",", "\n", 
    "\t", "True", ",", "\n", "\t", 
    RowBox[{"qs", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}]}], 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.723150896424534*^9, 3.7231509563586483`*^9}, {
  3.7231522586611643`*^9, 3.723152260805985*^9}, {3.723162591732456*^9, 
  3.7231626117294197`*^9}},ExpressionUUID->"9495349c-6d3c-4895-8342-\
cd8663b79a3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "stateBaseVisual", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"stateObjsVisualize", ",", " ", "stateDimVisualize"}], "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateBaseVisual", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"stateObjsVisualize", "[", "qs", "]"}], ",", " ", 
      RowBox[{"stateDimVisualize", "[", "qs", "]"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateObjsVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Quantum Objects: \>\"", ",", 
         RowBox[{"qs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuantumObjects\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n", "\t\t "}], "\n", 
 RowBox[{
  RowBox[{"stateDimVisualize", "[", "qs_", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"dim", " ", "=", " ", 
      RowBox[{"qs", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dim", " ", "\[NotEqual]", " ", "2"}], ",", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Dimension: \>\"", ",", " ", "dim"}], "}"}], ",", "\n", 
         "\t\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", "}"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.723151008126754*^9, 3.723151033335444*^9}, {
  3.723151089883815*^9, 3.723151238874939*^9}, {3.7231512806297407`*^9, 
  3.7231514074006*^9}, {3.723152255425496*^9, 3.723152268972375*^9}, {
  3.723161266735626*^9, 3.7231612692191067`*^9}, {3.723162670807762*^9, 
  3.723162674379208*^9}},ExpressionUUID->"95c6804a-b726-4b0e-b1e1-\
a5c7dce6b0d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateExpandedVisual", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateExpandedVisual", "[", "qs_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"purityVisualize", "[", "qs", "]"}], ",", "\n", "\t", 
      RowBox[{"entropyVisualize", "[", "qs", "]"}], ",", "\n", "\t", 
      RowBox[{"blochVisualize", "[", "qs", "]"}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"purityVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Quantum Purity: \>\"", ",", 
         RowBox[{"qs", "[", "\"\<Purity\>\"", "]"}]}], "}"}], ",", "\n", 
       "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"entropyVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Von Neumann Entropy: \>\"", ",", 
         RowBox[{"qs", "[", "\"\<VonNeumannEntropy\>\"", "]"}]}], "}"}], ",", 
       "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"blochVisualize", "[", "qs_", "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"singleQubitStateQ", "[", "qs", "]"}], ",", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Bloch Coordinates: \>\"", ",", " ", 
         RowBox[{"blochSphericalCoords", "[", "qs", "]"}]}], "}"}], ",", "\n",
        "\t\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.723151437653801*^9, 3.723151553440189*^9}, {
   3.723151587166884*^9, 3.723151721917244*^9}, {3.7231522799003963`*^9, 
   3.723152280788365*^9}, {3.7231615467721643`*^9, 3.723161613404113*^9}, 
   3.7231617072273083`*^9, 3.723162832608046*^9, {3.723163678166975*^9, 
   3.7231637219377823`*^9}},ExpressionUUID->"f8ccf5db-11c1-4dd1-8adf-\
ce4a3c16f313"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building Quantum State", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.723080236894109*^9, 
  3.723080249301784*^9}},ExpressionUUID->"9a2a0e04-d01e-4e96-a98b-\
8847cd36fd91"],

Cell[CellGroupData[{

Cell["States from Input Specifications", "Subsection",
 CellChangeTimes->{{3.7230565192927713`*^9, 
  3.7230565386997623`*^9}},ExpressionUUID->"81ede80a-6c80-4844-977f-\
e3442e060e6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "buildStateFromGround", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildStateFromGround", "[", 
    RowBox[{"objects_List", ",", " ", "dim_Integer"}], "]"}], " ", ":=", " ", 
   
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "formattedObjects", ",", " ", "wires", ",", " ", "specs", ",", " ", 
       "subStates"}], "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Check", " ", "that", " ", "all", " ", "inputs", " ", "are", " ", "of",
         " ", "the", " ", "form", " ", "qobs"}], " ", "\[Rule]", " ", 
       "state"}], " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"objects", ",", " ", "groundRuleQ"}], "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Put", " ", "inputs", " ", "in", " ", "normal", " ", "form"}], 
       " ", "*)"}], "\n", "\t", 
      RowBox[{"formattedObjects", " ", "=", " ", "\n", "\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"wiresFormat", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "\[Rule]", " ", 
           RowBox[{"groundStateFormat", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], " ", "&"}], ",", " ", 
         "objects"}], "]"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Make", " ", "sure", " ", "all", " ", "state", " ", "labels", " ", 
        "are", " ", "unique"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"uniqueStateWiresQ", "[", "formattedObjects", "]"}]}], ",", 
        " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "that", " ", "all", " ", "state", " ", "specifications", 
        " ", "are", " ", "valid", " ", "discrete", " ", "states"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"specs", ",", " ", "discreteStateQ"}], "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "that", " ", "dimensions", " ", "agree", " ", "with", 
        " ", "state", " ", "specifications"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{
           RowBox[{"formattedObjects", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
           RowBox[{
            RowBox[{"stateDimQ", "[", 
             RowBox[{"#", ",", " ", "dim"}], "]"}], "&"}]}], "]"}]}], ",", 
        " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Check", " ", "that", " ", "number", " ", "of", " ", "inputs", " ", 
        "agree", " ", "with", " ", "state", " ", "specifications"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"formattedObjects", ",", " ", 
           RowBox[{
            RowBox[{"stateArityQ", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
              RowBox[{"Length", " ", "@", " ", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "dim"}], "]"}], 
            "&"}]}], "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Check", " ", "that", " ", "if", " ", "input", " ", "is", " ", "a", 
         " ", "density", " ", "matrix"}], ",", " ", 
        RowBox[{
        "then", " ", "Hermitian", " ", "and", " ", "Unit", " ", "Trace"}]}], 
       "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"formattedObjects", ",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"notDMQ", "[", 
              RowBox[{"#", ",", " ", "dim"}], "]"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"hermitianQ", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "&&", " ", 
               RowBox[{"traceIsOneQ", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}]}], " ", 
            "&"}]}], "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t\t", 
      "\n", "\t", 
      RowBox[{"subStates", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"generateSubstate", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "dim"}], "]"}], "&"}], 
         ",", " ", "formattedObjects"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"buildProductState", "[", 
       RowBox[{"subStates", ",", " ", "dim"}], "]"}]}]}], "\n", "\t", "]"}]}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.722965484182487*^9, 3.722965495385021*^9}, {
   3.722965556439262*^9, 3.7229655668529453`*^9}, {3.722965650851884*^9, 
   3.722965670253064*^9}, {3.722966126418412*^9, 3.72296613415219*^9}, 
   3.7229661863272676`*^9, {3.722966295603518*^9, 3.7229663103130407`*^9}, {
   3.7229663995488977`*^9, 3.722966407116165*^9}, {3.722966476064345*^9, 
   3.722966481004075*^9}, {3.7229667429162807`*^9, 3.722966760730988*^9}, {
   3.722967366659067*^9, 3.722967368335125*^9}, {3.722967423141263*^9, 
   3.722967511475576*^9}, {3.7229675911380587`*^9, 3.72296763314396*^9}, {
   3.722967678625922*^9, 3.722967685615737*^9}, {3.722967833660343*^9, 
   3.722967874304714*^9}, {3.722968061168233*^9, 3.722968133818143*^9}, {
   3.7229682166124487`*^9, 3.7229682396721563`*^9}, {3.722969175612183*^9, 
   3.722969204524448*^9}, {3.7229786664845247`*^9, 3.722978686087131*^9}, {
   3.722978746381115*^9, 3.722978784932865*^9}, {3.7229789014396877`*^9, 
   3.722978969325046*^9}, {3.722979052167395*^9, 3.72297908746497*^9}, {
   3.7229791749493113`*^9, 3.722979377536021*^9}, {3.722985517888506*^9, 
   3.7229855678561773`*^9}, {3.722998056537919*^9, 3.722998085287696*^9}, {
   3.7229981155281773`*^9, 3.722998160916628*^9}, {3.722998834286894*^9, 
   3.722998919313225*^9}, {3.722999112223345*^9, 3.722999132522835*^9}, {
   3.7229993264501867`*^9, 3.722999331782228*^9}, {3.722999584816412*^9, 
   3.722999658607277*^9}, {3.722999890188044*^9, 3.722999895647955*^9}, {
   3.7230005875393744`*^9, 3.723000591741919*^9}, 3.723000652675837*^9, {
   3.723004319660432*^9, 3.7230043218086023`*^9}, {3.723004909332074*^9, 
   3.723004989560903*^9}, {3.723048403485757*^9, 3.723048425262031*^9}, 
   3.723051273548264*^9, {3.723058186976213*^9, 3.723058217120438*^9}, {
   3.723058753228538*^9, 3.723058846932609*^9}, {3.723059013666402*^9, 
   3.723059013815749*^9}},ExpressionUUID->"ead203ea-50bb-42c0-a32e-\
617439b3e677"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "generateSubstate", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateSubstate", "[", 
    RowBox[{"spec_", ",", " ", "wires_", ",", " ", "dim_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "assoc", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",",
           " ", "\n", "\t\t", 
          RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", 
           RowBox[{"Sort", "[", "wires", "]"}]}]}], "}"}], "|>"}]}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"pureSubstateQ", "[", 
         RowBox[{"spec", ",", " ", 
          RowBox[{"Length", " ", "@", " ", "wires"}], ",", " ", "dim"}], 
         "]"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<StateVector\>\"", "]"}], " ", "=", " ", 
         RowBox[{"generateSubVec", "[", 
          RowBox[{"spec", ",", " ", "wires", ",", " ", "dim"}], "]"}]}], ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<DensityMatrix\>\"", "]"}], " ", "=", " ", 
         
         RowBox[{"generateSubMat", "[", 
          RowBox[{"spec", ",", " ", "wires", ",", " ", "dim"}], "]"}]}]}], 
       "\n", "\t\t", "]"}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteState", "[", "assoc", "]"}]}]}], "\n", "\t", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723000718966082*^9, 3.7230007346094112`*^9}, {
  3.7230008188377666`*^9, 3.723000833413801*^9}, {3.7230008888285847`*^9, 
  3.723000958258939*^9}, {3.723001123993966*^9, 3.7230011729390287`*^9}, {
  3.7230012428361263`*^9, 3.723001337025859*^9}, {3.723051210839341*^9, 
  3.7230512141663322`*^9}, {3.723052496039352*^9, 
  3.7230524962618523`*^9}},ExpressionUUID->"e87c94f3-9927-40bf-8720-\
05ef1e41113b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "generateSubVec", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateSubVec", "[", 
    RowBox[{"spec_", ",", " ", "wires_", ",", " ", "d_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "vec", ",", " ", "shape", ",", " ", "tpLevels"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"subVecHelper", "[", 
        RowBox[{"spec", ",", " ", "n", ",", " ", "d"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"vec", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"vec", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Ordering", " ", "@", " ", "wires"}], "]"}]}], ";", "\n", 
      "\t", 
      StyleBox[
       RowBox[{"vec", " ", "=", " ", 
        RowBox[{"Normalize", " ", "@", " ", "\n", "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{"vec", ",", " ", "tpLevels"}], "]"}], "]"}], "]"}]}]}], 
       "Code"], 
      StyleBox[";", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t", "Code"], 
      StyleBox["vec", "Code"]}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723001009390931*^9, 3.723001019488371*^9}, 
   3.723004219800194*^9, {3.723004333768134*^9, 3.723004351756097*^9}, {
   3.723004393236335*^9, 3.7230044483692627`*^9}, {3.7230045031690617`*^9, 
   3.723004513847913*^9}, {3.723004551961668*^9, 3.7230045820395193`*^9}, {
   3.7230046323187532`*^9, 3.723004641077656*^9}, {3.723004714568321*^9, 
   3.7230047745751047`*^9}},ExpressionUUID->"632fdad9-ab0c-486c-91e5-\
de6297963676"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "subVecHelper", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Computational", " ", "Basis", " ", "States"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], ",", " ", 
      "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"basisState", "[", 
     RowBox[{"bases", ",", " ", "d"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Registers", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{
    "\"\<Register\>\"", ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"register", "[", 
    RowBox[{"0", ",", " ", "n", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Register\>\"", ",", " ", "num_"}], "}"}], ",", " ", 
      "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"register", "[", 
     RowBox[{"num", ",", " ", "n", ",", " ", "d"}], "]"}]}], ";"}], "\n", 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"States", " ", "from", " ", "Input", " ", "Arrays"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{"arr_List", ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", "arr"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"/", 
      RowBox[{"-", " ", "Basis"}]}]}], " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<Plus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "plus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{"\"\<Minus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "minus"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"R", "/", "L"}], " ", "Basis", " ", "States"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<Right\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "right"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{"\"\<Left\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "left"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Bell", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<PsiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "psiPlus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<PsiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "psiMinus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<PhiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "phiPlus"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{"\"\<PhiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "phiMinus"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Entangled", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer", ",", " ", "2"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"ghzState", "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{"\"\<W\>\"", ",", " ", "n_Integer", ",", " ", "2"}], "]"}], " ", 
    ":=", " ", 
    RowBox[{"wState", "[", "n", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Random", " ", "Pure", " ", "States"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subVecHelper", "[", 
     RowBox[{
     "\"\<RandomPure\>\"", ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"randPure", "[", 
     RowBox[{"n", ",", " ", "d"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Pure", " ", "Uniform", " ", "Superposition"}], " ", "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subVecHelper", "[", 
    RowBox[{
    "\"\<PureUniformSuperposition\>\"", ",", " ", "n_Integer", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"pureSuperpos", "[", 
    RowBox[{"n", ",", " ", "d"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7230015783611507`*^9, 3.7230015910565243`*^9}, {
  3.7230016668360043`*^9, 3.723001771828264*^9}, {3.72300182165724*^9, 
  3.723002068590564*^9}, {3.723002864612225*^9, 3.7230029033125563`*^9}, {
  3.7230041382988377`*^9, 3.72300419412075*^9}, {3.723258459309476*^9, 
  3.723258519734583*^9}, {3.72325867137814*^9, 
  3.723258676964222*^9}},ExpressionUUID->"0ded6da7-65dd-4079-aab6-\
9ee3e4472c07"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "generateSubMat", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"generateSubMat", "[", 
    RowBox[{"spec_", ",", " ", "wires_", ",", " ", "d_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", " ", "mat", ",", " ", "shape", ",", " ", "ord", ",", " ", 
       "tpLevels"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"subMatHelper", "[", 
        RowBox[{"spec", ",", " ", "n", ",", " ", "d"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"d", ",", " ", 
         RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"mat", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"ord", " ", "=", " ", 
       RowBox[{"Ordering", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"ord", ",", " ", 
          RowBox[{"ord", " ", "+", " ", "n"}]}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      StyleBox[
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"mat", ",", " ", "tpLevels"}], "]"}], "]"}]}], "Code"], 
      StyleBox[";", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t", "Code"], 
      StyleBox[
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"SparseArray", " ", "@", " ", 
         RowBox[{"ArrayReshape", "[", 
          RowBox[{"mat", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"d", "^", "n"}], ",", " ", 
             RowBox[{"d", "^", "n"}]}], "}"}]}], "]"}]}]}], "Code"], 
      StyleBox[";", "Code"], 
      StyleBox["\n", "Code"], 
      StyleBox["\t", "Code"], 
      StyleBox["mat", "Code"]}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723001009390931*^9, 3.723001019488371*^9}, 
   3.723004219800194*^9, {3.723004333768134*^9, 3.723004351756097*^9}, {
   3.723004393236335*^9, 3.7230044483692627`*^9}, {3.7230045031690617`*^9, 
   3.723004513847913*^9}, {3.723004551961668*^9, 3.7230045820395193`*^9}, {
   3.7230046323187532`*^9, 3.723004641077656*^9}, {3.723004714568321*^9, 
   3.7230047745751047`*^9}, {3.723253888453314*^9, 
   3.723254095338475*^9}},ExpressionUUID->"da509056-6b0d-4729-aaa2-\
c150e47322fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "subMatHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subMatHelper", "[", 
    RowBox[{"arr_List", ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}],
    " ", ":=", " ", "arr"}], ";"}]}], "Code",
 CellChangeTimes->{{3.72325410262601*^9, 
  3.723254127034025*^9}},ExpressionUUID->"a5ac29f7-0167-403f-8483-\
c2e7903d4bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "groundStateFormat", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"groundStateFormat", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BasisState\>\"", ",", " ", "n_Integer"}], "}"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<BasisState\>\"", ",", " ", 
      RowBox[{"{", "n", "}"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{"\"\<+\>\"", "|", "\"\<plus\>\"", "|", "\"\<PLUS\>\""}], "]"}], 
   " ", ":=", " ", "\"\<Plus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{"\"\<-\>\"", "|", "\"\<minus\>\"", "|", "\"\<MINUS\>\""}], "]"}], 
   " ", ":=", " ", "\"\<Minus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{
    "\"\<l\>\"", "|", "\"\<L\>\"", "|", "\"\<left\>\"", "|", "\"\<LEFT\>\""}],
     "]"}], " ", ":=", " ", "\"\<Left\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"groundStateFormat", "[", 
     RowBox[{
     "\"\<r\>\"", "|", "\"\<R\>\"", "|", "\"\<right\>\"", "|", 
      "\"\<RIGHT\>\""}], "]"}], " ", ":=", " ", "\"\<Right\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{
    "\"\<\[Psi]+\>\"", "|", "\"\<\[CapitalPsi]+\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(+\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(+\)]\)\>\"", "|", 
     "\"\<psiplus\>\"", "|", "\"\<PSIPLUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PsiPlus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{
    "\"\<\[Phi]+\>\"", "|", "\"\<\[CapitalPhi]+\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(+\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPhi]\), \(+\)]\)\>\"", "|", 
     "\"\<phiplus\>\"", "|", "\"\<PHIPLUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PhiPlus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{
    "\"\<\[Psi]-\>\"", "|", "\"\<\[CapitalPsi]-\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[Psi]\), \(-\)]\)\>\"", "|", 
     "\"\<\!\(\*SubscriptBox[\(\[CapitalPsi]\), \(-\)]\)\>\"", "|", 
     "\"\<psiminus\>\"", "|", "\"\<PSIMINUS\>\""}], "]"}], " ", ":=", " ", 
   "\"\<PsiMinus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"groundStateFormat", "[", 
     RowBox[{
     "\"\<\[Phi]-\>\"", "|", "\"\<\[CapitalPhi]-\>\"", "|", 
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(-\)]\)\>\"", "|", 
      "\"\<\!\(\*SubscriptBox[\(\[CapitalPhi]\), \(-\)]\)\>\"", "|", 
      "\"\<phiminus\>\"", "|", "\"\<PHIMINUS\>\""}], "]"}], " ", ":=", " ", 
    "\"\<PhiMinus\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", 
    RowBox[{"\"\<Ghz\>\"", "|", "\"\<ghz\>\""}], "]"}], " ", ":=", " ", 
   "\"\<GHZ\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"groundStateFormat", "[", "\"\<w\>\"", "]"}], " ", ":=", " ", 
    "\"\<W\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundStateFormat", "[", "expr___", "]"}], " ", ":=", " ", 
   "expr"}], ";"}]}], "Code",
 CellChangeTimes->{{3.722969227647739*^9, 3.722969270369508*^9}, {
  3.722978161964911*^9, 3.722978490902872*^9}, {3.7229785768782187`*^9, 
  3.722978600991201*^9}, {3.722978637469202*^9, 3.7229786482700157`*^9}, {
  3.7229788060859013`*^9, 
  3.7229788211002407`*^9}},ExpressionUUID->"5c1300c7-2753-4d3f-9121-\
37e6b09ff182"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "basisState", ",", " ", "plus", ",", " ", "minus", ",", " ", "right", ",", 
    " ", "left"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "phiMinus", ",", " ", "phiPlus", ",", " ", "psiMinus", ",", " ", 
    "psiPlus"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ghzState", ",", " ", "wState"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"randPure", ",", " ", "pureSuperpos"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"plus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"minus", " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"right", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"left", " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"psiMinus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"psiPlus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"phiMinus", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1", ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"phiPlus", " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "1", ",", "1", ",", "0"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"basisState", "[", 
     RowBox[{"bases_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"pos", " ", "=", " ", 
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{"bases", ",", " ", "d"}], "]"}], " ", "+", " ", "1"}]}], 
        ",", "\n", "\t", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"Length", " ", "@", " ", "bases"}]}]}], "}"}], ",", "\n", 
      "\t", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pos", "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"d", "^", "n"}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ghzState", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "1", "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", "^", "n"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"2", "^", "n"}], "}"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"wState", "[", "n_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", "i_", "}"}], "/;", 
        RowBox[{"IntegerQ", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "\[Rule]", " ", "1"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Power", "[", 
        RowBox[{"2", ",", " ", "n"}], "]"}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randPure", "[", 
     RowBox[{"n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"RandomComplex", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], " ", "-", " ", "\[ImaginaryI]"}], ",", " ", 
        RowBox[{"1", " ", "+", " ", "\[ImaginaryI]"}]}], "}"}], ",", " ", 
      RowBox[{"d", "^", "n"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pureSuperpos", "[", 
     RowBox[{"n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"d", "^", "n"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"register", "[", 
    RowBox[{"num_", ",", " ", "n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"num", "+", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"d", "^", "n"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7230020799848537`*^9, 3.723002222991687*^9}, {
  3.723002467084055*^9, 3.723002522448888*^9}, {3.7230025697788143`*^9, 
  3.723002570359659*^9}, {3.723002657266377*^9, 3.723002764110524*^9}, {
  3.723003024512351*^9, 3.7230030469464903`*^9}, {3.7230038604225397`*^9, 
  3.723004016296105*^9}, {3.723004053644249*^9, 3.723004117008348*^9}, {
  3.723258562662857*^9, 3.7232585736989307`*^9}, {3.723258606278504*^9, 
  3.723258632986841*^9}, {3.723259175464635*^9, 
  3.723259179099633*^9}},ExpressionUUID->"cbc47f88-e72d-4293-84d7-\
2b300a0e50b5"],

Cell[CellGroupData[{

Cell["Input Spec Queries", "Subsubsection",
 CellChangeTimes->{{3.7230565719640903`*^9, 
  3.7230565761797323`*^9}},ExpressionUUID->"9fa216bf-1dae-40aa-9ae9-\
17fd2a41244f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "groundRuleQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundRuleQ", "[", "expr_Rule", "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundRuleQ", "[", "expr___", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteState", "::", "rules"}], ",", "expr"}], "]"}], 
     ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7229657463190737`*^9, 3.722965846169362*^9}, {
   3.7229658896098146`*^9, 3.722965935709611*^9}, {3.7229662566217813`*^9, 
   3.722966272945623*^9}, {3.722966304496353*^9, 3.722966387705755*^9}, {
   3.722966454218587*^9, 3.722966459751255*^9}, {3.722966785492551*^9, 
   3.722966786083251*^9}, {3.7229672331606607`*^9, 3.722967276269528*^9}, 
   3.723052604222681*^9},ExpressionUUID->"2e1acbac-ce48-4bb3-b42e-\
da0f90a8ff8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "uniqueStateWiresQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"uniqueStateWiresQ", "[", "objs_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"DuplicateFreeQ", "[", 
      RowBox[{"Flatten", " ", "@", " ", 
       RowBox[{"objs", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "]"}], ",", " ", 
     "\n", "\t\t", "True", ",", " ", "\n", "\t\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"QuantumDiscreteState", "::", "duplicateWires"}], "]"}], ";", 
       "False"}], ")"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722998942863902*^9, 3.7229990506792994`*^9}, 
   3.722999099365251*^9},ExpressionUUID->"296eda63-6707-4a01-9148-\
641939e96e33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "pureSubstateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pureSubstateQ", "[", 
     RowBox[{
      RowBox[{"arr_", "?", "stateInputArrayQ"}], ",", " ", "n_Integer", ",", 
      " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"size", " ", "=", " ", 
        RowBox[{"d", "^", "n"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "arr", "]"}], " ", "===", " ", 
         RowBox[{"{", 
          RowBox[{"size", ",", " ", "size"}], "}"}]}], ",", " ", "False", ",",
         " ", "True"}], "]"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pureSubstateQ", "[", "expr___", "]"}], " ", ":=", " ", "True"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7229993690944138`*^9, 3.72299939414958*^9}, {
  3.722999441203511*^9, 3.722999540610375*^9}, {3.72300090583165*^9, 
  3.723000912169879*^9}},ExpressionUUID->"29f2a5bb-feb6-425c-86d1-\
03b55d0169d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "discreteStateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"IntegerQ", "[", "bases", "]"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ListQ", "[", "bases", "]"}], "&&", " ", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"bases", ",", "IntegerQ"}], "]"}]}], ")"}]}], ",", " ", 
      "True", ",", " ", "False"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<Register\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Register\>\"", ",", " ", "num_Integer"}], "}"}], "]"}], 
    " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<Plus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<Minus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<Left\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", "\"\<Right\>\"", "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<PhiPlus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<PhiMinus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<PsiPlus\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", "\"\<PsiMinus\>\"", "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<GHZ\>\"", "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", "\"\<W\>\"", "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<RandomPure\>\"", "]"}], " ", ":=", " ",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"discreteStateQ", "[", "\"\<RandomMixed\>\"", "]"}], " ", ":=", 
    " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "\"\<PureUniformSuperposition\>\"", "]"}], 
   " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", 
    RowBox[{"arr_", "?", "stateInputArrayQ"}], "]"}], " ", ":=", " ", 
   "True"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteState", "::", "spec"}], ",", "expr"}], "]"}], 
     ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722962901855303*^9, 3.7229629022886553`*^9}, {
  3.722962945313487*^9, 3.722963172883979*^9}, {3.7229633119844847`*^9, 
  3.722963327423129*^9}, {3.722968164657302*^9, 3.722968169581337*^9}, {
  3.7229683909382467`*^9, 3.7229684644201307`*^9}, {3.7229684960090017`*^9, 
  3.7229685504865637`*^9}, {3.722979418913876*^9, 3.722979421031005*^9}, {
  3.7230526182826757`*^9, 3.723052631695257*^9}, {3.7232588372868643`*^9, 
  3.7232588719889812`*^9}},ExpressionUUID->"796a1d31-9972-4e12-8b01-\
8465429f70f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateDimQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], ",", " ", 
      "dim_Integer"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", "bases", "]"}], "+", "1"}], " ", "\[LessEqual]", 
       " ", "dim"}], ",", " ", "\n", "\t\t", "True", ",", " ", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteState", "::", "BaseDim"}], ",", "bases", 
          ",", 
          RowBox[{"(", 
           RowBox[{"dim", "-", "1"}], ")"}]}], "]"}], ";", "False"}], ")"}]}],
      "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<Register\>\"", ",", " ", "dim_Integer"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Register\>\"", ",", " ", "num_Integer"}], "}"}], ",", " ",
       "dim_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<Plus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<Minus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<Left\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{"\"\<Right\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<PhiPlus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<PhiMinus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<PsiPlus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{"\"\<PsiMinus\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{"\"\<W\>\"", ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<RandomPure\>\"", ",", " ", "dim_Integer"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateDimQ", "[", 
     RowBox[{"\"\<RandomMixed\>\"", ",", " ", "dim_Integer"}], "]"}], " ", ":=",
     " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"\"\<PureUniformSuperposition\>\"", ",", " ", "dim_Integer"}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{
     RowBox[{"arr_", "?", "stateInputArrayQ"}], ",", " ", "dim_Integer"}], 
    "]"}], " ", ":=", " ", "True"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateDimQ", "[", 
    RowBox[{"expr_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteState", "::", "dimension"}], ",", "expr", ",", 
       "dim"}], "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722962901855303*^9, 3.7229629022886553`*^9}, {
  3.722962945313487*^9, 3.722963172883979*^9}, {3.7229633119844847`*^9, 
  3.722963327423129*^9}, {3.722968164657302*^9, 3.722968169581337*^9}, {
  3.7229683447329807`*^9, 3.722968367206208*^9}, {3.722968570541532*^9, 
  3.722968575396583*^9}, {3.7229689590266447`*^9, 3.72296908451283*^9}, {
  3.722979669832292*^9, 3.722979697694366*^9}, {3.72298466619337*^9, 
  3.72298470123461*^9}, {3.722984793613771*^9, 3.722984796068874*^9}, {
  3.723052647363098*^9, 3.723052667289486*^9}, {3.7232588882659197`*^9, 
  3.723258931454426*^9}},ExpressionUUID->"d23dfdc3-34db-4fbf-a544-\
99ef7d24d901"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "notDMQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"notDMQ", "[", 
    RowBox[{"spec_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"state", " ", "=", " ", 
        RowBox[{"spec", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"nObjs", " ", "=", " ", 
        RowBox[{"Length", " ", "@", " ", 
         RowBox[{"spec", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"If", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "[", "state", "]"}]}], " ", "||", " ", "\n", "\t\t", 
        RowBox[{"!", 
         RowBox[{"stateInputArrayQ", "[", "state", "]"}]}], " ", "||", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"Dimensions", " ", "@", " ", "state"}], " ", "\[NotEqual]", 
         "  ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", " ", "^", " ", "nObjs"}], ",", " ", 
           RowBox[{"dim", " ", "^", " ", "nObjs"}]}], "}"}]}]}], ",", "\n", 
       "\t\t", "True", ",", "\n", "\t\t", "False"}], "\n", "\t\t", "]"}]}], 
    "\n", "\t\t", "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723058865748704*^9, 3.7230589303446302`*^9}, {
  3.7230590665280313`*^9, 
  3.723059125634758*^9}},ExpressionUUID->"555b5415-d28a-4cc0-9be2-\
826b69c17549"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hermitianQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"hermitianQ", "[", "arr_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"HermitianMatrixQ", "[", "arr", "]"}], ",", "\n", "\t\t", "True", 
    ",", "\n", "\t\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"QuantumDiscreteState", "::", "herm"}], ",", "arr"}], "]"}], 
      ";", "False"}], ")"}]}], "\n", "\t\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.722998193638255*^9, 3.722998277392407*^9}, {
  3.7230530143355722`*^9, 3.723053015598934*^9}, {3.723058232710079*^9, 
  3.723058246509878*^9}, {3.723058384738858*^9, 3.723058647462542*^9}, {
  3.723058679358687*^9, 3.723058716224578*^9}, {3.723058936018821*^9, 
  3.7230589864305897`*^9}},ExpressionUUID->"69e469c8-52f0-4c0a-904e-\
2da2117b64b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "traceIsOneQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traceIsOneQ", "[", "arr_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Tr", "[", "arr", "]"}], " ", "===", " ", "1"}], ",", "\n", 
      "\t\t", "True", ",", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteState", "::", "tr"}], ",", "arr"}], "]"}], 
        ";", "False"}], ")"}]}], "]"}]}], ";"}], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"traceIsOneQ", "[", "expr___", "]"}], " ", ":=", " ", "True"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723052945739071*^9, 3.723053021828586*^9}, 
   3.723058990968432*^9},ExpressionUUID->"21769f78-fcdb-461c-b911-\
50d3ee779582"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stateArityQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<BasisState\>\"", ",", " ", "bases_"}], "}"}], ",", " ", 
      "n_", ",", " ", "dim_Integer"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", " ", "@", " ", "bases"}], " ", "===", " ", "n"}], 
      ",", " ", "\n", "\t\t", "True", ",", " ", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteState", "::", "BaseArity"}], ",", "bases", 
          ",", "n"}], "]"}], ";", "False"}], ")"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{
    "\"\<Register\>\"", ",", " ", "n_Integer", ",", " ", "dim_Integer"}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Register\>\"", ",", " ", "num_Integer"}], "}"}], ",", " ",
       "n_Integer", ",", " ", "dim_Integer"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<Plus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<Minus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<Left\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{"\"\<Right\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<PhiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<PhiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<PsiPlus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{"\"\<PsiMinus\>\"", ",", " ", "2", ",", " ", "2"}], "]"}], " ", ":=",
     " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"\"\<GHZ\>\"", ",", " ", "n_Integer", ",", " ", "2"}], "]"}], " ",
    ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{"\"\<W\>\"", ",", " ", "n_Integer", ",", " ", "2"}], "]"}], " ", 
    ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{
    "\"\<RandomPure\>\"", ",", " ", "n_Integer", ",", " ", "dim_Integer"}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{
     "\"\<RandomMixed\>\"", ",", " ", "n_Integer", ",", " ", "dim_Integer"}], 
     "]"}], " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{
     "\"\<PureUniformSuperposition\>\"", ",", " ", "n_Integer", ",", " ", 
      "dim_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stateArityQ", "[", 
     RowBox[{
      RowBox[{"arr_", "?", "stateInputArrayQ"}], ",", " ", "n_Integer", ",", 
      " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t ", 
       RowBox[{
        RowBox[{"size", " ", "=", " ", 
         RowBox[{"d", "^", "n"}]}], ",", "\n", "\t ", 
        RowBox[{"dims", " ", "=", " ", 
         RowBox[{"Dimensions", "[", "arr", "]"}]}]}], "\n", "\t ", "}"}], ",",
       "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"dims", " ", "===", " ", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"d", ",", " ", "n"}], "]"}]}], " ", "||", " ", 
         RowBox[{"dims", " ", "===", " ", 
          RowBox[{"{", 
           RowBox[{"size", ",", " ", "size"}], "}"}]}]}], ",", " ", "\n", 
        "\t\t", "True", ",", "\n", "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumDiscreteState", "::", "arrayDimensions"}], ",", 
            "arr", ",", "d", ",", "n"}], "]"}], ";", "False"}], ")"}]}], 
       "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stateArityQ", "[", 
    RowBox[{"expr_", ",", " ", "n_", ",", " ", "dim_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteState", "::", "arity"}], ",", "expr", ",", 
       "n"}], "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722962901855303*^9, 3.7229629022886553`*^9}, {
   3.722962945313487*^9, 3.722963172883979*^9}, {3.7229633119844847`*^9, 
   3.722963327423129*^9}, {3.722968164657302*^9, 3.722968169581337*^9}, {
   3.7229683447329807`*^9, 3.722968367206208*^9}, {3.722968570541532*^9, 
   3.722968575396583*^9}, {3.7229689590266447`*^9, 3.72296908451283*^9}, {
   3.722979567867948*^9, 3.7229796341848087`*^9}, {3.72297970565627*^9, 
   3.722979885315372*^9}, {3.722979920646749*^9, 3.722980062954318*^9}, {
   3.7229801185375443`*^9, 3.722980204744544*^9}, {3.7229802518538857`*^9, 
   3.722980259036212*^9}, {3.722980389022523*^9, 3.72298039746391*^9}, {
   3.722980438418795*^9, 3.7229805027271214`*^9}, 3.722984198484126*^9, {
   3.72298465678643*^9, 3.7229846593933163`*^9}, {3.722985287608478*^9, 
   3.722985296175095*^9}, {3.722985418400249*^9, 3.72298542233885*^9}, {
   3.722999183245475*^9, 3.722999187635211*^9}, {3.7230526782903223`*^9, 
   3.723052691705304*^9}, {3.723258949136909*^9, 
   3.723258974258747*^9}},ExpressionUUID->"340b17e7-1c1f-4e15-82b7-\
edabdc3941a1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mixed States", "Subsection",
 CellChangeTimes->{{3.723056463150495*^9, 
  3.723056465412697*^9}},ExpressionUUID->"82e53755-7585-4936-a5ed-\
89b5ea80d255"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "buildMixedState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildMixedState", "[", 
    RowBox[{"specs_", ",", " ", "dim_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "pairs", "}"}], ",", "\n", "\t", "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Check", " ", "that", " ", "input", " ", "is", " ", "an", " ", 
       "association", " ", "with"}], " ", "*)"}], "\n", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"state", " ", "keys", " ", "and", " ", "prob", " ", "values"}], 
      " ", "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"mixtureInputQ", "[", "specs", "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Make", " ", "sure", " ", "association", " ", 
        RowBox[{"isn", "'"}], "t", " ", "empty"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"emptyMixtureQ", "[", "specs", "]"}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "If", " ", "only", " ", "single", " ", "component", " ", "in", " ", 
         "mixture"}], ",", " ", 
        RowBox[{"return", " ", "that", " ", "component"}]}], " ", "*)"}], 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "specs"}], " ", "===", " ", "1"}], 
        ",", " ", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Keys", "[", "specs", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Make", " ", "sure", " ", "all", " ", "input", " ", "states", " ", 
        "describe", " ", "same", " ", "quantum", " ", "objects"}], " ", 
       "*)"}], "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"sameObjectsQ", "[", "specs", "]"}]}], ",", " ", 
        RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"mixture", "[", 
       RowBox[{"specs", ",", " ", "dim"}], "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7230538854777317`*^9, 3.723053895455434*^9}, {
  3.723053983421165*^9, 3.72305400348304*^9}, {3.7230549395679893`*^9, 
  3.723055165708713*^9}, {3.7230557501830807`*^9, 3.723055759264289*^9}, {
  3.723055996882181*^9, 
  3.7230560081207438`*^9}},ExpressionUUID->"6adbe5c4-7593-4d68-8a99-\
fc9e34176592"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "mixture", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mixture", "[", 
    RowBox[{"specs_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "states", ",", " ", "probs", ",", " ", "ws", ",", " ", "reps", ",", " ",
        "dm", ",", " ", "assoc"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"states", " ", "=", " ", 
       RowBox[{"Keys", "[", "specs", "]"}]}], ";", "\n", "\t", 
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"l1Normalize", " ", "@", " ", 
        RowBox[{"Values", "[", "specs", "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"ws", " ", "=", " ", 
       RowBox[{
        RowBox[{"states", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "[", 
        "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"reps", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vecQ", "[", "#", "]"}], ",", " ", "\n", "\t\t", 
            RowBox[{"vecToMat", " ", "@", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], ",",
             "\n", "\t\t", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], 
             "]"}]}], "]"}], "&"}], ",", " ", "states"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"dm", " ", "=", " ", 
       RowBox[{"Total", " ", "@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"{", 
           RowBox[{"reps", ",", " ", "probs"}], "}"}]}], "]"}]}]}], ";", "\n",
       "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",",
           "\n", "\t\t", 
          RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", "ws"}]}], 
         "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tr", "[", 
          RowBox[{"dm", ".", "dm"}], "]"}], " ", "===", " ", "1"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<StateVector\>\"", "]"}], " ", "=", " ", 
         RowBox[{"matToVec", "[", "dm", "]"}]}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<DensityMatrix\>\"", "]"}], " ", "=", " ", 
         "dm"}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteState", "[", "assoc", "]"}]}]}], "\n", "\t", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7230560229565907`*^9, 3.723056046247078*^9}, {
  3.7230560811214857`*^9, 3.7230561583194513`*^9}, {3.723056210160059*^9, 
  3.7230562466861477`*^9}, {3.723056291535461*^9, 3.723056414568769*^9}, {
  3.7231752025466967`*^9, 
  3.723175207831382*^9}},ExpressionUUID->"bca50b24-aeab-4f58-8aa3-\
03f69df82004"],

Cell[CellGroupData[{

Cell["Mixture Queries", "Subsubsection",
 CellChangeTimes->{{3.723056450269788*^9, 
  3.7230564545336847`*^9}},ExpressionUUID->"235484e7-e1d2-4287-9b46-\
37f2e810a397"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "mixtureInputQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mixtureInputQ", "[", "specs_", "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"AssociationQ", "[", "specs", "]"}]}], ",", "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumDiscreteState", "::", "mixtureAssoc"}], ",", 
         "specs"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"validDiscreteStateListQ", "[", 
         RowBox[{"Keys", "[", "specs", "]"}], "]"}]}], ",", "\n", "\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantumDiscreteState", "::", "mixtureKeys"}], ",", 
           "specs"}], "]"}], ";", "False"}], ")"}], ","}], "*)"}], "\n", "\t", 
     RowBox[{"!", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"Values", "[", "specs", "]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", "Symbol"}], " ", 
          "||", " ", 
          RowBox[{"NumericQ", "[", "#", "]"}]}], " ", "&"}]}], "]"}]}], ",", 
     "\n", "\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumDiscreteState", "::", "mixtureVals"}], ",", 
         "specs"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", "True", 
     ",", "\n", "\t", "True"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7230541947422028`*^9, 3.723054229014059*^9}, {
   3.723054263067792*^9, 3.723054349614766*^9}, {3.723054383991692*^9, 
   3.723054469167286*^9}, 
   3.7231748503405533`*^9},ExpressionUUID->"7101cf33-ac4c-4865-88f0-\
0d92d4029113"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "emptyMixtureQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"emptyMixtureQ", "[", "assoc_", "]"}], " ", ":=", " ", "\n", "\t", 
   
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", " ", "@", " ", "assoc"}], " ", "===", " ", "0"}], ",",
      "\n", "\t\t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"QuantumDiscreteState", "::", "emptyMixture"}], ",", 
         "assoc"}], "]"}], ";", "True"}], ")"}], ",", "\n", "\t\t", "False"}],
     "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.72305484507121*^9, 
  3.723054923247698*^9}},ExpressionUUID->"23039ac2-4e18-42f9-8724-\
f96c90f98325"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sameObjectsQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sameObjectsQ", "[", "assoc_Association", "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t", 
     RowBox[{"qobs", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Keys", "[", "assoc", "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "1", ",", " ", "\"\<QuantumObjects\>\""}], 
        "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"AllTrue", "[", 
       RowBox[{"qobs", ",", " ", 
        RowBox[{
         RowBox[{"#", " ", "===", " ", 
          RowBox[{"qobs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "&"}]}], "]"}], ",", "\n", 
      "\t\t", "True", ",", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteState", "::", "qobjs"}], ",", "assoc"}], 
         "]"}], ";", "False"}], ")"}]}], "]"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.723054030255224*^9, 3.7230540817496862`*^9}, {
  3.723054481719191*^9, 3.7230545740384893`*^9}, {3.723054720889474*^9, 
  3.723054780669923*^9}, {3.723055534658777*^9, 
  3.723055535303565*^9}},ExpressionUUID->"da31325a-c523-4df8-bec0-\
12e88cd4c325"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product States", "Subsection",
 CellChangeTimes->{{3.723056678386595*^9, 
  3.723056680938205*^9}},ExpressionUUID->"138efa00-ec9d-4001-bdba-\
a1100ceae21c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"productStatesObjectOverlap", ",", " ", "productStateDims"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"productStatesObjectOverlap", "[", "states_", "]"}], " ", ":=", 
    " ", 
    RowBox[{"With", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"objs", " ", "=", " ", 
        RowBox[{"Flatten", " ", "@", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", "\"\<QuantumObjects\>\"", "]"}], "&"}], ",", 
           " ", "states"}], "]"}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"DuplicateFreeQ", "[", "objs", "]"}], ",", " ", "True", ",", 
        "\n", "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumDiscreteState", "::", "prodObjs"}], ",", 
            "states"}], "]"}], ";", "False"}], ")"}]}], "\n", "\t\t", "]"}]}],
      "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"productStateDims", "[", "states_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dims", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<QuditDimension\>\"", "]"}], "&"}], ",", " ", 
         "states"}], "]"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dims", " ", "===", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"dims", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"Length", "@", "states"}]}], "]"}]}], ",", " ", "True", ",",
        "\n", "\t\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantumDiscreteState", "::", "prodDims"}], ",", 
           "states"}], "]"}], ";", "False"}], ")"}]}], "\n", "\t\t", "]"}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723250820415365*^9, 3.723250996577796*^9}, {
  3.7232511467332687`*^9, 
  3.723251252111828*^9}},ExpressionUUID->"8ef9601f-427e-4732-b61d-\
b72839ce3a4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "buildProductState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"buildProductState", "[", 
    RowBox[{"subStates_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Which", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"productStatesObjectOverlap", "[", "subStates", "]"}]}], ",", 
     "\n", "\t", "$Failed", ",", "\n", "\t", 
     RowBox[{"!", 
      RowBox[{"productStateDims", "[", "subStates", "]"}]}], ",", "\n", "\t", 
     "$Failed", ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Length", " ", "@", " ", "subStates"}], " ", "===", " ", "1"}], 
     ",", " ", 
     RowBox[{"subStates", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t", 
     RowBox[{"AllTrue", "[", 
      RowBox[{"subStates", ",", " ", "vecQ"}], "]"}], ",", " ", 
     RowBox[{"tensorPure", "[", 
      RowBox[{"subStates", ",", " ", "dim"}], "]"}], ",", "\n", "\t", "True", 
     ",", " ", 
     RowBox[{"tensorMixed", "[", 
      RowBox[{"subStates", ",", " ", "dim"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7230484993350286`*^9, 3.72304859499667*^9}, {
  3.723048631279961*^9, 3.723048642295863*^9}, {3.7230491248450947`*^9, 
  3.7230491862805*^9}, {3.723251291492199*^9, 
  3.72325133875264*^9}},ExpressionUUID->"d79badac-952e-45fb-8b3b-\
37b246190266"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "tensorPure", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tensorPure", "[", 
    RowBox[{"subStates_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rep", ",", " ", "wires", ",", " ", "shape", ",", " ", "tpLevels", ",", 
       " ", "assoc"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"KroneckerProduct", " ", "@@", " ", 
        RowBox[{"subStates", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1", ",", " ", "\"\<StateVector\>\""}], 
          "]"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"wires", " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"subStates", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1", ",", " ", "\"\<QuantumObjects\>\""}], 
          "]"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"Length", " ", "@", " ", "wires"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Ordering", " ", "@", " ", "wires"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"rep", ",", " ", "tpLevels"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<StateVector\>\"", " ", "\[Rule]", " ", 
           RowBox[{"SparseArray", "[", "rep", "]"}]}], ",", "\n", "\t\t", 
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",",
           "\n", "\t\t", 
          RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", 
           RowBox[{"Sort", "[", "wires", "]"}]}]}], "\n", "\t\t", "}"}], 
        "|>"}]}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteState", "[", "assoc", "]"}]}]}], "\n", "\t", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723049065340328*^9, 3.723049083531708*^9}, {
  3.7230492089636393`*^9, 3.723049214112664*^9}, {3.723049271848063*^9, 
  3.723049361528919*^9}, {3.7230494384676933`*^9, 3.723049485956193*^9}, {
  3.723049594196835*^9, 3.7230496039383087`*^9}, {3.723049654987857*^9, 
  3.723049887081962*^9}, {3.7230499298294067`*^9, 3.723049973135797*^9}, {
  3.7230500240598707`*^9, 3.723050079716729*^9}, {3.723050111736565*^9, 
  3.723050306235622*^9}, {3.723051153674296*^9, 3.723051158488943*^9}, {
  3.723052517064993*^9, 3.7230525172859697`*^9}, {3.723084687011629*^9, 
  3.723084688232407*^9}},ExpressionUUID->"1f6021b0-ea7f-4f09-adde-\
37f7954fc18d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "tensorMixed", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tensorMixed", "[", 
    RowBox[{"subStates_", ",", " ", "dim_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nObjs", ",", " ", "mats", ",", " ", "rep", ",", " ", "wires", ",", " ",
        "shape", ",", " ", "order", ",", " ", "tpLevels", ",", " ", "assoc"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"mats", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vecQ", "[", "#", "]"}], ",", " ", "\n", "\t\t", 
            RowBox[{"vecToMat", " ", "@", " ", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}]}], ",",
             "\n", "\t\t", 
            RowBox[{"#", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", " ", "\"\<DensityMatrix\>\""}], "]"}], 
             "]"}]}], "]"}], "&"}], ",", " ", "subStates"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"KroneckerProduct", " ", "@@", " ", "mats"}]}], ";", "\n", 
      "\t", 
      RowBox[{"wires", " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"subStates", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1", ",", " ", "\"\<QuantumObjects\>\""}], 
          "]"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"nObjs", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"2", " ", "*", " ", "nObjs"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"order", " ", "=", " ", 
       RowBox[{"Ordering", " ", "@", " ", "wires"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"order", ",", " ", 
          RowBox[{"order", " ", "+", " ", "nObjs"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"rep", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "rep"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", "^", "nObjs"}], ",", " ", 
           RowBox[{"dim", "^", "nObjs"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"\"\<DensityMatrix\>\"", " ", "\[Rule]", " ", 
           RowBox[{"SparseArray", "[", "rep", "]"}]}], ",", "\n", "\t\t", 
          RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",",
           "\n", "\t\t", 
          RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", 
           RowBox[{"Sort", "[", "wires", "]"}]}]}], "\n", "\t\t", "}"}], 
        "|>"}]}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteState", "[", "assoc", "]"}]}]}], "\n", "\t", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.72305130968386*^9, 3.723051331290975*^9}, {
  3.723051388839217*^9, 3.72305139496616*^9}, {3.723051430085792*^9, 
  3.72305152043503*^9}, {3.723051969003759*^9, 3.723052001662705*^9}, {
  3.723052055653277*^9, 3.723052184234818*^9}, {3.723052226056396*^9, 
  3.7230522567311583`*^9}, {3.723052310588635*^9, 3.723052429492399*^9}, {
  3.723084698781069*^9, 
  3.723084700199153*^9}},ExpressionUUID->"0475a0bc-4100-4114-92d8-\
25b371a0271e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trace Out Quantum Objects from State", "Subsection",
 CellChangeTimes->{{3.7230765180009527`*^9, 
  3.723076545376678*^9}},ExpressionUUID->"881b74df-d453-4ac7-bfc8-\
26b7859f9f39"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "traceOutFromState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"traceOutFromState", "[", "specs_", "]"}], " ", ":=", " ", "\n", 
  "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"ListQ", "[", "specs", "]"}]}], " ", "||", " ", 
     RowBox[{
      RowBox[{"Length", "[", "specs", "]"}], " ", "\[NotEqual]", " ", "2"}]}],
     ",", "\n", "\t\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"QuantumDiscreteState", "::", "traceInputs"}], ",", "specs"}],
        "]"}], ";", 
      RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}], ",", "\n", "\t\t", 
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{
      RowBox[{"specs", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"specs", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.723076721177084*^9, 3.72307676501589*^9}, {
  3.7230768387959557`*^9, 3.7230768668280907`*^9}, {3.72307693685644*^9, 
  3.7230769378018417`*^9}, {3.7230769720849533`*^9, 
  3.723077020113607*^9}},ExpressionUUID->"e5e061ce-976e-423a-a12c-\
6b3fd35a84bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumPartialTr", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumPartialTr", "[", 
     RowBox[{"state_", ",", " ", "wires_"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"ws", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ListQ", "[", "wires", "]"}], ",", " ", "wires", ",", " ", 
          RowBox[{"{", "wires", "}"}]}], "]"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{"!", 
         RowBox[{"validDiscreteStateQ", "[", "state", "]"}]}], "*)"}], "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"QuantumDiscreteStateQ", "[", "state", "]"}]}], ",", "\n", 
        "\t\t", "$Failed", ",", "\n", "\t\t", 
        RowBox[{"!", 
         RowBox[{"AllTrue", "[", 
          RowBox[{"ws", ",", " ", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"state", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", " ", "\"\<QuantumObjects\>\""}], "]"}], 
               "]"}], ",", " ", "#"}], "]"}], "&"}]}], "]"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumDiscreteState", "::", "traceWires"}], ",", "ws", 
            ",", "state"}], "]"}], ";", "$Failed"}], ")"}], ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Length", " ", "@", " ", 
          RowBox[{"state", "[", "\"\<QuantumObjects\>\"", "]"}]}], " ", "===",
          " ", 
         RowBox[{"Length", " ", "@", " ", "wires"}]}], ",", "\n", "\t\t", "1",
         ",", "\n", "\t\t", "True", ",", "\n", "\t\t", 
        RowBox[{"traceHelper", "[", 
         RowBox[{"state", ",", " ", "ws"}], "]"}]}], "\n", "\t\t", "]"}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumPartialTr", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7230772918003187`*^9, 3.723077324664955*^9}, {
  3.7230773671024237`*^9, 3.723077555937542*^9}, {3.723077786755735*^9, 
  3.723077892614678*^9}, {3.72307792725581*^9, 3.723077965464644*^9}, {
  3.723078002999365*^9, 3.723078006357877*^9}, {3.723078206033967*^9, 
  3.723078215797505*^9}, {3.7230782815243397`*^9, 3.723078385415207*^9}, {
  3.723078740188349*^9, 3.7230787708944063`*^9}, {3.7232211442009497`*^9, 
  3.723221161376732*^9}, {3.723249106889673*^9, 
  3.723249107200042*^9}},ExpressionUUID->"12ce7e65-d8b8-4bad-b9ee-\
44937507a097"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "traceHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traceHelper", "[", 
     RowBox[{"state_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", "state"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"traceHelper", "[", 
   RowBox[{"state_", ",", " ", "ws_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newState", ",", " ", "dm", ",", " ", "dim", ",", " ", "wContract", ",", 
      " ", "stateWs", ",", " ", "pos", ",", " ", "n", ",", " ", "tpLevels", 
      ",", " ", "assoc"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"state", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"dim", " ", "=", " ", 
      RowBox[{"state", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"wContract", " ", "=", " ", 
      RowBox[{"ws", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"stateWs", " ", "=", " ", 
      RowBox[{"state", "[", "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"Length", " ", "@", " ", "stateWs"}]}], ";", "\n", "\t", "\n", 
     "\t", 
     RowBox[{"pos", " ", "=", " ", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"stateWs", ",", " ", "wContract"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"dm", ",", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"dim", ",", " ", 
          RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"tpLevels", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Range", "[", "n", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", "n", "]"}], " ", "+", " ", "n"}]}], "]"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"dm", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"TensorContract", "[", 
       RowBox[{"dm", ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"pos", ",", " ", 
           RowBox[{"pos", " ", "+", " ", "n"}]}], "}"}], "}"}]}], "]"}]}], 
     ";", "\n", "\t", 
     RowBox[{"tpLevels", " ", "=", " ", 
      RowBox[{"InversePermutation", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"n", " ", "-", " ", "1"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"n", " ", "-", " ", "1"}], "]"}], " ", "+", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}]}], "]"}]}]}], ";", "\n",
      "\t", 
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"dm", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"dm", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", " ", "@", " ", "dm"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dim", "^", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], ",", " ", 
          RowBox[{"dim", "^", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}]}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"assoc", " ", "=", " ", 
      RowBox[{"<|", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<QuantumObjects\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Complement", "[", 
           RowBox[{"stateWs", ",", " ", 
            RowBox[{"{", "wContract", "}"}]}], "]"}]}], ",", "\n", "\t\t", 
         RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}]}], 
        "\n", "\t\t", "}"}], "|>"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"dm", ".", "dm"}], "]"}], " ", "\[Equal]", " ", "1"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<StateVector\>\"", "]"}], " ", "=", " ", 
        RowBox[{"matToVec", "[", "dm", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"assoc", "[", "\"\<DensityMatrix\>\"", "]"}], " ", "=", " ", 
        "dm"}]}], "]"}], ";", "\n", "\t", 
     RowBox[{"newState", " ", "=", " ", 
      RowBox[{"QuantumDiscreteState", "[", "assoc", "]"}]}], ";", "\n", "\t", 
     
     RowBox[{"traceHelper", "[", 
      RowBox[{"newState", ",", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"ws", ",", " ", "1"}], "]"}]}], "]"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQXfc1Idl072vHp87MeSC6iWdqJYiWmNxXBaKX9f6v
B9Ebuc41g+gjwoX9IPoDTyeYzhHbvgxET7IKWwOi437s2wyimbhNdoH5vfYH
QHR+id9hEO0gwnweREuuZbgEoud1nr4KousYX94C0SzlGx+B6J4I4RcgmmeO
/FsQnXCL6SOI5udd9xVER2xtYzMD0m8uKvOD6C7WTVIgOuHX4VILIK338AaY
Fp7Dtr4DSAss894Eol//f38IRNtsyTkKot0eT/sLor96XgDTG3MkxTpB+oIT
wfSbS3+UQXQmw2N1EB1yw9MfRD/oeQCmPwUKJoFo1TuSGSC6SKkgB0TPOxdb
AKIBUJa6ug==
  "],ExpressionUUID->"2257c55c-d0ba-4370-9f7e-e0ff1ed48d50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumStateDistance ", "Subsection",
 CellChangeTimes->{{3.723217644558773*^9, 
  3.7232176602845993`*^9}},ExpressionUUID->"2d291374-8a4e-48ad-b542-\
94381e8547cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumStateDistance", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "inputs"}], "=", 
   RowBox[{
   "\"\<Inputs to QuantumStateDistance must be two \>\"", "<>", "\n", "\t", 
    "\"\<quantum discrete states\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "distMeasure"}], "=", 
   RowBox[{
   "\"\<Method `1` is not a valid option for \>\"", "<>", "\n", "\t", 
    "\"\<calculating the distance between two states\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "qubit"}], "=", 
   RowBox[{
   "\"\<Argument `1` must be a single qubit state for \>\"", "<>", "\n", 
    "\t", "\"\< Euclidean distance method\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "::", "dims"}], "=", 
   RowBox[{
   "\"\<Arguments `1` at position 1 and `2` at position 2 \>\"", "<>", "\n", 
    "\t", "\"\<must have the same qudit dimension\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "::", "numObjs"}], "=", 
    RowBox[{
    "\"\<Arguments `1` at position 1 and `2` at position 2 \>\"", "<>", "\n", 
     "\t", "\"\<must describe the same number of quantum objects\>\""}]}], 
   ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumStateDistance", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Method\>\"", " ", "\[Rule]", " ", "\"\<Fidelity\>\""}], 
     "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumStateDistance", "[", 
     RowBox[{
     "qs1_QuantumDiscreteState", ",", " ", "qs2_QuantumDiscreteState", ",", 
      " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"sameSizeStatesQ", "[", 
        RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ",", " ", "$Failed", ",", 
      "\n", "\t", 
      RowBox[{"qdistHelper", "[", 
       RowBox[{"qs1", ",", " ", "qs2", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}]}], "]"}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumStateDistance", "[", "expr___", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"QuantumStateDistance", "::", "inputs"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.72321766257332*^9, 3.723217720450388*^9}, {
  3.723217770681522*^9, 3.7232177972318974`*^9}, {3.723217874648583*^9, 
  3.723217972158352*^9}, {3.723218023245501*^9, 3.723218071963575*^9}, {
  3.723218338085889*^9, 3.7232184017182407`*^9}, {3.723220264038382*^9, 
  3.723220325570417*^9}, {3.723220388669196*^9, 3.723220471742654*^9}, {
  3.7232206293636923`*^9, 
  3.7232206973722467`*^9}},ExpressionUUID->"316a143f-b208-4383-94eb-\
f0a82f4d2a86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sameSizeStatesQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sameSizeStatesQ", "[", 
   RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Which", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"qs1", "[", "\"\<QuditDimension\>\"", "]"}], " ", "\[NotEqual]", 
     " ", 
     RowBox[{"qs2", "[", "\"\<QuditDimension\>\"", "]"}]}], ",", "\n", "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"QuantumStateDistance", "::", "dims"}], ",", "qs1", ",", 
        "qs2"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Length", " ", "@", " ", 
      RowBox[{"qs1", "[", "\"\<QuantumObjects\>\"", "]"}]}], " ", 
     "\[NotEqual]", " ", 
     RowBox[{"Length", " ", "@", " ", 
      RowBox[{"qs2", "[", "\"\<QuantumObjects\>\"", "]"}]}]}], ",", "\n", 
    "\t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"QuantumStateDistance", "::", "numObjs"}], ",", "qs1", ",", 
        "qs2"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", "True", ",", 
    "\n", "\t", "True"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.7232204750236607`*^9, 
  3.72322062081631*^9}},ExpressionUUID->"60b00cc7-c359-4d95-985e-\
1c8a0ade59f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qdistHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Fidelity\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"fidelityDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Trace\>\""}], "]"}], " ",
    ":=", " ", 
   RowBox[{"traceDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<BuresAngle\>\""}], "]"}],
    " ", ":=", " ", 
   RowBox[{"buresAngleDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<HilbertSchmidt\>\""}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"hilbertSchmidtDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "\"\<Euclidean\>\""}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"blochDist", "[", 
    RowBox[{"qs1", ",", " ", "qs2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qdistHelper", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_", ",", " ", "method_"}], "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"QuantumStateDistance", "::", "distMeasure"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7232181099888477`*^9, 
  3.723218353737438*^9}},ExpressionUUID->"022ad3d0-5806-4f59-96fd-\
6f94fd8cc7d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "fidelityDist", ",", " ", "traceDist", ",", " ", "buresAngleDist", ",", 
     " ", "hilbertSchmidtDist", ",", " ", "blochDist"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fidelityDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"dm1", " ", "=", " ", 
         RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"rootDM2", " ", "=", " ", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}], ",", " ", 
           RowBox[{"1", "/", "2"}]}], "]"}]}]}], "}"}], ",", "\n", "\t", 
      RowBox[{"Re", " ", "@", " ", 
       RowBox[{"Chop", "[", 
        RowBox[{
         RowBox[{"1", " ", "-", " ", 
          RowBox[{"Tr", "[", 
           RowBox[{"MatrixPower", "[", 
            RowBox[{
             RowBox[{"rootDM2", ".", " ", "dm1", ".", " ", "rootDM2"}], ",", 
             RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "6"}], ")"}]}]}], "]"}]}]}], "\n", "\t", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"traceDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", " ", "\[Sigma]", ",", " ", "eigs"}], "}"}], ",",
       "\n", "\t", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "=", " ", 
        RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"\[Sigma]", " ", "=", " ", 
        RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"eigs", " ", "=", " ", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{"\[Rho]", " ", "-", " ", "\[Sigma]"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{
        RowBox[{"Re", " ", "@", " ", 
         RowBox[{"Total", " ", "@", " ", 
          RowBox[{"(", 
           RowBox[{"Abs", " ", "/@", " ", "eigs"}], ")"}]}]}], "/", "2"}]}]}],
      "\n", "\t", "]"}]}], ";"}], "\n", "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Bures", " ", "Angle"}], " ", "-", " ", 
    RowBox[{"Statistical", " ", "Distance"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buresAngleDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"Re", " ", "@", " ", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"fidelityDist", "[", 
        RowBox[{"qs1", ",", " ", "qs2"}], "]"}], "]"}], "]"}]}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hilbertSchmidtDist", "[", 
     RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Rho]", ",", " ", "\[Sigma]"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"\[Rho]", " ", "=", " ", 
        RowBox[{"qs1", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"\[Sigma]", " ", "=", " ", 
        RowBox[{"qs2", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", "\t", 
       RowBox[{"Re", " ", "@", " ", 
        RowBox[{"Sqrt", " ", "@", " ", 
         RowBox[{"Tr", " ", "@", " ", 
          RowBox[{"MatrixPower", "[", 
           RowBox[{
            RowBox[{"\[Rho]", " ", "-", " ", "\[Sigma]"}], ",", " ", "2"}], 
           "]"}]}]}]}]}]}], "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blochDist", "[", 
    RowBox[{"qs1_", ",", " ", "qs2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vec1", ",", " ", "vec2"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"singleQubitStateQ", "[", "qs1", "]"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumStateDistance", "::", "qubit"}], ",", "qs1"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"singleQubitStateQ", "[", "qs2", "]"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"QuantumStateDistance", "::", "qubit"}], ",", "qs2"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", 
      "\n", "\t", 
      RowBox[{"vec1", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"qs1", "[", "\"\<BlochCartesianCoordinates\>\"", "]"}], 
         ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"vec2", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"qs2", "[", "\"\<BlochCartesianCoordinates\>\"", "]"}], 
         ")"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Re", " ", "@", " ", 
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"vec1", ",", " ", "vec2"}], "]"}]}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723219536932276*^9, 3.723219571313818*^9}, {
  3.723219671419796*^9, 3.723219781358946*^9}, {3.723219876938011*^9, 
  3.723220053295765*^9}, {3.723220141734687*^9, 3.723220248676962*^9}, {
  3.723434680897161*^9, 3.723434700598037*^9}, {3.7234347779198236`*^9, 
  3.7234347950197687`*^9}, {3.7234348314103317`*^9, 
  3.723434839217231*^9}},ExpressionUUID->"04cb6428-b8b1-4f0f-a1eb-\
efffcbc1ac5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumEntangledObjectsQ", "Subsection",
 CellChangeTimes->{{3.723215005894731*^9, 
  3.7232150159726257`*^9}},ExpressionUUID->"39dbb0aa-bc9d-4db7-8ee6-\
61425039a98f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumEntangledObjectsQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "inputs"}], "=", 
   RowBox[{
   "\"\<Arguments to QuantumEntangledObjectsQ must be \>\"", "<>", "\n", 
    "\t", "\"\<a pure quantum discrete state qstate and a bipartition of the \
quantum objects \>\"", "<>", "\n", "\t", "\"\<in qstate\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "qstate"}], "=", 
   "\"\<Argument `1` at position 1 is not a quantum discrete state\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "pureState"}], "=", 
   "\"\<Argument `1` at position 1 must be pure\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "splitList"}], "=", 
   "\"\<Argument `1` at position 2 must be a list\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "splitLength"}], "=", 
   "\"\<Argument `1` at position 2 must have length 2\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], "=", 
   RowBox[{
   "\"\<All elements of argument `2` at position `3` in `4` \>\"", "<>", "\n",
     "\t", "\"\<must be quantum objects in `1`\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "::", "unique"}], "=", 
   "\"\<All elements of Flatten @ `1` at position 2 must be unique\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "::", "bipartition"}], "=", 
    RowBox[{
    "\"\<Argument `2` at position 2 must form a \>\"", "<>", "\n", "\t", 
     "\"\<valid bipartition of the quantum objects in `1`\>\""}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumEntangledObjectsQ", "[", 
     RowBox[{"qs_", ",", " ", "split_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "redState", ",", " ", "tracedObjects", ",", " ", "redDM", ",", " ", 
        "concurrence"}], "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"validEntangledStateQ", "[", "qs", "]"}]}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"validBipartitionQ", "[", 
           RowBox[{"qs", ",", " ", "split"}], "]"}]}], ",", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\n", 
       "\t", 
       RowBox[{"tracedObjects", " ", "=", " ", 
        RowBox[{"split", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"redState", " ", "=", " ", 
        RowBox[{"QuantumPartialTr", "[", 
         RowBox[{"qs", ",", " ", "tracedObjects"}], "]"}]}], ";", "\n", "\t", 
       
       RowBox[{"redDM", " ", "=", " ", 
        RowBox[{"redState", "[", "\"\<DensityMatrix\>\"", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"concurrence", " ", "=", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Tr", "[", 
             RowBox[{"redDM", ".", "redDM"}], "]"}]}], ")"}]}], "]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"concurrence", " ", ">", " ", "0"}], ",", " ", "True", ",", 
         " ", "False"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumEntangledObjectsQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{"QuantumEntangledObjectsQ", "::", "inputs"}], "]"}], ";", 
     "$Failed"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7232150356981907`*^9, 3.7232151110275793`*^9}, {
  3.723215669726712*^9, 3.723215710327383*^9}, {3.72321620687922*^9, 
  3.7232163758705187`*^9}, {3.723216453726006*^9, 3.723216578318243*^9}, {
  3.723216666686944*^9, 3.723217095185898*^9}, {3.723217135136756*^9, 
  3.723217201457869*^9}, {3.72321723262122*^9, 
  3.723217386243476*^9}},ExpressionUUID->"457a0ad1-c46d-4dff-a923-\
ad5edab83cf3"],

Cell[CellGroupData[{

Cell["Entangled Object Queries", "Subsubsection",
 CellChangeTimes->{{3.72321511826432*^9, 
  3.723215123215686*^9}},ExpressionUUID->"579aa29f-e2ba-4997-8b8a-\
fa824142b1d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validEntangledStateQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validEntangledStateQ", "[", "qs_QuantumDiscreteState", "]"}], 
    " ", ":=", " ", 
    RowBox[{"If", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"qs", "[", "\"\<PureStateQ\>\"", "]"}], ",", "\n", "\t", "True",
       ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "pureState"}], ",", 
          "qs"}], "]"}], ";", "False"}], ")"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validEntangledStateQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumEntangledObjectsQ", "::", "qstate"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723215150960474*^9, 3.723215200420401*^9}, {
  3.723215231981779*^9, 
  3.7232153659492273`*^9}},ExpressionUUID->"96ea95a4-161f-4228-bee7-\
17e0da54af86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validBipartitionQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validBipartitionQ", "[", 
     RowBox[{"qs_", ",", " ", "split_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "split", "]"}], " ", "\[NotEqual]", " ", "2"}], 
      ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "splitLength"}], ",", 
          "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"split", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}], ",", " ", 
            "#"}], "]"}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], ",", "qs", ",", 
          RowBox[{"split", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", "split"}], "]"}], 
        ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"split", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}], ",", " ", 
            "#"}], "]"}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "qObjs"}], ",", "qs", ",", 
          RowBox[{"split", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "2", ",", "split"}], "]"}], 
        ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"DuplicateFreeQ", "[", 
        RowBox[{"Flatten", " ", "@", " ", "split"}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "unique"}], ",", 
          "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"qs", "[", "\"\<QuantumObjects\>\"", "]"}], ",", " ", 
          RowBox[{"Flatten", "@", "split"}]}], "]"}], " ", "===", " ", 
        RowBox[{"{", "}"}]}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumEntangledObjectsQ", "::", "bipartition"}], ",", 
          "qs", ",", "split"}], "]"}], ";", "False"}], ")"}], ",", "\n", "\t",
       "True", ",", "\n", "\t", "True"}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validBipartitionQ", "[", 
    RowBox[{"qs_", ",", " ", "split_"}], "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumEntangledObjectsQ", "::", "splitList"}], ",", 
       "split"}], "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723215405758374*^9, 3.723215530442092*^9}, {
  3.723215571255094*^9, 3.723215582663516*^9}, {3.723215614281765*^9, 
  3.723215657222724*^9}, {3.7232157625265923`*^9, 3.723215774836975*^9}, {
  3.72321581261728*^9, 3.723215981823173*^9}, {3.723216022887929*^9, 
  3.7232161685573893`*^9}, {3.7232166184193287`*^9, 3.723216653940261*^9}, {
  3.7234335550172033`*^9, 
  3.723433574119585*^9}},ExpressionUUID->"8f6659e9-e389-41ae-b5ee-\
c9ababcda2d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumDiscreteOperation", "Chapter",
 CellChangeTimes->{{3.722906908762578*^9, 
  3.7229069164918413`*^9}},ExpressionUUID->"1c82c676-f279-4aac-a397-\
dd402b6c22b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumDiscreteOperation", "]"}], ";"}], 
  "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "op"}], "=", 
    "\"\<Argument `1` at position 1 is not a valid specification\>\""}], 
   ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "arity"}], "=", 
    "\"\<Number of wires not equal to number of gate inputs for `1`\>\""}], 
   ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "wires"}], "=", 
    "\"\<Dimensions of argument `1` at position 1 are not compatible with the \
specified operations.\>\""}], ";"}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "power"}], "=", 
    "\"\<Not an accepted power for applying operator at position 1.\>\""}], 
   ";"}], "Code"], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "opType"}], "=", 
   StyleBox["\"\<Argument `1` is not a valid type of quantum operation\>\"", 
    "Code"]}], 
  StyleBox[";", "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "unitary"}], "=", 
   StyleBox["\"\<Argument `1` is not a unitary matrix\>\"", "Code"]}], 
  StyleBox[";", "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "unitarySpec"}], "=", 
   StyleBox[
    "\"\<Argument `1` is not a valid specification for a unitary \
operation\>\"", "Code"]}], 
  StyleBox[";", "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "listDims"}], "=", 
    "\"\<All elements of list must act on qudits of the same dimension\>\""}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", "::", "opWiresNotInState"}], "=", 
   RowBox[{
   "\"\<Input quantum objects `1` to operation must be \>\"", "<>", "\n", 
    "\t", "\"\<elements of state `2`\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumDiscreteOperation", "::", "opStateDims"}], "=", 
    "\"\<Dimension of state qudits `2 and of operation qudits `1` must be \
equal\>\""}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantumDiscreteOperation", "]"}], " ", "=", " ", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "2"}], ",", " ", 
      
      RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
  "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Extract", " ", "Properties", " ", "of", " ", "the", " ", "Operation"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "qop_QuantumDiscreteOperation", "?", "QuantumDiscreteOperationQ"}], "[", 
     
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop", ",", " ", "prop"}], "]"}]}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Transform", " ", "input", " ", "into", " ", "a", " ", "normal", " ", 
     "form"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{
      RowBox[{"type_", " ", "\[Rule]", " ", "specs_List"}], ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"qopHelper", "[", 
     RowBox[{"type", ",", " ", "specs", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<Power\>\"", "]"}]}], "]"}]}], ";"}], 
  "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"QuantumDiscreteOperation", "[", 
     RowBox[{"specs_List", ",", " ", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", " ", "\n", 
    "\t", 
    RowBox[{"qopHelper", "[", 
     RowBox[{"\"\<Unitary\>\"", ",", " ", "specs", ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<QuditDimension\>\"", "]"}], ",", " ", 
      RowBox[{"OptionValue", "[", "\"\<Power\>\"", "]"}]}], "]"}]}], ";"}], 
  "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Exponentiation", " ", "of", " ", "Unitary", " ", "Operations"}], 
    " ", "*)"}], "Code"], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"qop", ":", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"specs_Association", ",", " ", 
           RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "?", 
       "unitaryQ"}], ")"}], " ", "^", " ", "k_Integer"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"unitaryPowerK", "[", 
     RowBox[{"qop", ",", " ", "k"}], "]"}]}], ";"}], "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Composition", " ", "of", " ", "Unitary", " ", "Operations"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qop1", ":", 
        RowBox[{"QuantumDiscreteOperation", "[", 
         RowBox[{"specs1_Association", ",", " ", 
          RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "?", 
      "unitaryQ"}], ")"}], "*", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qop2", ":", 
        RowBox[{"QuantumDiscreteOperation", "[", 
         RowBox[{"specs2_Association", ",", " ", 
          RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "?", 
      "unitaryQ"}], ")"}]}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"unitaryComposition", "[", 
    RowBox[{"qop1", ",", " ", "qop2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"qop1", ":", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"specs1_Association", ",", " ", 
           RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "?", 
       "unitaryQ"}], ")"}], "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"qop2", ":", 
         RowBox[{"QuantumDiscreteOperation", "[", 
          RowBox[{"specs2_Association", ",", " ", 
           RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "?", 
       "unitaryQ"}], ")"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"unitaryComposition", "[", 
     RowBox[{"qop1", ",", " ", "qop2"}], "]"}]}], ";"}], 
  StyleBox["\n", "Code"], "\t", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Symbolic", " ", "Replacement", " ", "for", " ", "Quantum", " ", 
    "Operations"}], " ", "*)"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{"qop", ":", 
       RowBox[{"QuantumDiscreteOperation", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "subs_"}],
      "]"}], ":=", "\n", "\t", 
    RowBox[{"operationReplaceAll", "[", 
     RowBox[{"qop", ",", " ", "subs"}], "]"}]}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Formatting", " ", "Front", " ", "End"}], " ", "*)"}], 
   "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperation", " ", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qop", ":", 
       RowBox[{"QuantumDiscreteOperation", "[", 
        RowBox[{"specs_Association", ",", " ", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ",", " ", "fmt_"}], 
     "]"}], ":=", "\n", "\t", 
    RowBox[{"operationVisualize", "[", 
     RowBox[{"qop", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\t\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Action", " ", "of", " ", "Quantum", " ", "Operation", " ", "on", " ", 
     "Quantum", " ", "State"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"qop", ":", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"specs_Association", ",", " ", 
        RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], ")"}], "[", 
    "qstate_QuantumDiscreteState", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"qopAction", "[", 
    RowBox[{"qop", ",", " ", "qstate"}], "]"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.722889232104254*^9, 3.722889252422862*^9}, {
   3.7228893793024387`*^9, 3.7228894152248297`*^9}, {3.722889513695092*^9, 
   3.722889550021627*^9}, {3.722889763896701*^9, 3.722889768271468*^9}, {
   3.722889811952976*^9, 3.722889868581768*^9}, {3.722890416051405*^9, 
   3.722890447689148*^9}, {3.72289047789433*^9, 3.7228904966313*^9}, {
   3.722890809150782*^9, 3.7228908922772923`*^9}, {3.722890924060218*^9, 
   3.722890924509006*^9}, {3.722895472776308*^9, 3.72289554352045*^9}, {
   3.7228956472923603`*^9, 3.7228956734826803`*^9}, {3.722902071313095*^9, 
   3.722902110047998*^9}, {3.722902171412797*^9, 3.722902175045579*^9}, {
   3.7229023505086117`*^9, 3.7229023715049477`*^9}, {3.7229029786694403`*^9, 
   3.722902985387323*^9}, {3.7229038160469933`*^9, 3.722903886711224*^9}, {
   3.722905952225604*^9, 3.72290595541282*^9}, {3.722906831351266*^9, 
   3.722906832397655*^9}, {3.722909211080229*^9, 3.7229092117569323`*^9}, {
   3.722909248177434*^9, 3.722909272197424*^9}, {3.7229093032657003`*^9, 
   3.72290937042008*^9}, {3.722912514140133*^9, 3.722912540010021*^9}, {
   3.722912878011689*^9, 3.722913031622037*^9}, {3.722913319127482*^9, 
   3.7229133220597563`*^9}, {3.722913412549697*^9, 3.722913417122493*^9}, {
   3.722913533568697*^9, 3.7229136154142723`*^9}, {3.722913660932171*^9, 
   3.7229136731292048`*^9}, {3.7229619955036583`*^9, 3.722962066464262*^9}, 
   3.7229621371894417`*^9, {3.722962180163389*^9, 3.722962201266389*^9}, {
   3.722962256023147*^9, 3.722962256651908*^9}, {3.7231526741490192`*^9, 
   3.7231526924079523`*^9}, {3.7231527808645144`*^9, 3.723152802200664*^9}, {
   3.723155510208706*^9, 3.7231555339858503`*^9}, {3.723158433479124*^9, 
   3.723158449444335*^9}, {3.723158490481998*^9, 3.723158535881775*^9}, {
   3.72316021805051*^9, 3.723160239368278*^9}, {3.723160452334112*^9, 
   3.72316045408029*^9}, {3.723163603091254*^9, 3.723163608320541*^9}, {
   3.7232521195966873`*^9, 3.723252142150015*^9}, {3.723259567251533*^9, 
   3.723259603062324*^9}, {3.723353566911615*^9, 
   3.723353725951468*^9}},ExpressionUUID->"3a0399e7-60cd-4a9f-93c2-\
cfe707e522bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qopAction", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopAction", "[", 
    RowBox[{"qop_", ",", " ", "qstate_"}], "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<OperationType\>\"", "]"}]}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitaryAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionAction", "[", 
        RowBox[{"qop", ",", " ", "qstate"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7229622634409657`*^9, 3.72296235108292*^9}, {
  3.723157204681525*^9, 3.723157207116004*^9}, {3.7233553883720284`*^9, 
  3.72335539570823*^9}, {3.7233554981130123`*^9, 3.723355505034149*^9}, {
  3.723356869656213*^9, 
  3.723356871457836*^9}},ExpressionUUID->"5f533609-e719-4f62-976a-\
b6df180177be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "QuantumDiscreteOperationQ", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumDiscreteOperationQ", "[", "expr_", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "expr", "]"}], " ", "===", " ", 
      "QuantumDiscreteOperation"}], ",", " ", "True", ",", " ", "False"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722889256871593*^9, 3.722889316804421*^9}, {
  3.7231643166635733`*^9, 
  3.723164316841474*^9}},ExpressionUUID->"54caad77-5027-4e69-84ba-\
ede1ff462355"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qopHelper", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Allowed", " ", "types", " ", "of", " ", "quantum", " ", "discrete", " ", 
    "operations"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<Unitary\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", 
     "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"unitaryHelper", "[", 
    RowBox[{
     RowBox[{"spec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"spec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "dim", ",", " ", "pow"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<Oracle\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", "pow_"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"oracleHelper", "[", 
    RowBox[{
     RowBox[{"spec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"spec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "dim"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<BooleanFunction\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", 
     "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"boolFunHelper", "[", 
    RowBox[{
     RowBox[{"spec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"spec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "dim"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<Projection\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", 
     "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"projectionHelper", "[", 
    RowBox[{
     RowBox[{"spec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"spec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "dim"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<POVM\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", "pow_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"povmHelper", "[", 
    RowBox[{
     RowBox[{"spec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"spec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", "dim"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{
    "\"\<Conditional\>\"", ",", " ", "spec_", ",", " ", "dim_", ",", " ", 
     "pow_"}], "]"}], " ", ":=", " ", 
   RowBox[{"conditionHelper", "[", "spec", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopHelper", "[", 
    RowBox[{"type_", ",", " ", "spec_", ",", " ", "dim_", ",", " ", "pow_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "opType"}], ",", "type"}], 
      "]"}], ";", "$Failed"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722889978544629*^9, 3.722890102988431*^9}, {
  3.72289014083678*^9, 3.7228902452176657`*^9}, {3.7228903242627707`*^9, 
  3.722890375343668*^9}, {3.7228905033155527`*^9, 3.72289061317201*^9}, {
  3.722890653954245*^9, 3.722890799564938*^9}, {3.7228909167965612`*^9, 
  3.7228909182846613`*^9}, {3.722891338663422*^9, 3.7228913566844883`*^9}, {
  3.722909222162999*^9, 
  3.722909222811599*^9}},ExpressionUUID->"6ca3ea2c-fa8d-4af5-8d7a-\
cfb216f13ffc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"opKeys", ",", " ", "discreteOperationKeysQ"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opKeys", " ", ":=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
     "\"\<Operation\>\"", ",", "\n", "\t", "\"\<OperationType\>\"", ",", "\n",
       "\t", "\"\<Inputs\>\"", ",", "\n", "\t", "\"\<QuditDimension\>\"", ",",
       "\n", "\t", "\"\<Power\>\""}], "\n", "\t", "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteOperationKeysQ", "[", "assoc_", "]"}], " ", ":=", " ", 
   "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Keys", "[", "assoc", "]"}], ",", " ", "opKeys"}], "]"}], " ",
       "===", " ", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t\t", "True", ",", " ", "False"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045690071863*^9, 3.72304577864074*^9}, 
   3.723045880039966*^9, {3.723057429054289*^9, 3.7230574906188297`*^9}, {
   3.723057575063951*^9, 3.7230576020854053`*^9}, {3.723057667242813*^9, 
   3.723057701176552*^9}, 3.723159672937353*^9, {3.7231598949914293`*^9, 
   3.723160005763074*^9}, {3.7231600599190397`*^9, 3.7231601028406363`*^9}, {
   3.72335052306285*^9, 
   3.7233505316631927`*^9}},ExpressionUUID->"c064de5a-d063-4501-8fa5-\
4cb31b275a27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validDiscreteOperationQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validDiscreteOperationQ", "[", 
     RowBox[{"qop_QuantumDiscreteOperation", "[", 
      RowBox[{"assoc_Association", ",", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"discreteOperationKeysQ", "[", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "True", ",", " ", 
      "False"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validDiscreteOperationQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045426832735*^9, 3.7230454481602087`*^9}, {
   3.7230455245911694`*^9, 3.7230455381351233`*^9}, {3.723045593524185*^9, 
   3.723045619934106*^9}, {3.723045936236136*^9, 3.723045964826318*^9}, {
   3.723046805006936*^9, 3.723046812230378*^9}, 3.7230469947733803`*^9, {
   3.723047282778314*^9, 3.7230472917025414`*^9}, {3.723047334320068*^9, 
   3.7230473466660957`*^9}, {3.723047550545642*^9, 3.7230475606659307`*^9}, {
   3.723159678440866*^9, 3.723159701537922*^9}, {3.723160033937531*^9, 
   3.7231600396325502`*^9}, {3.723160117560286*^9, 3.72316013598127*^9}, {
   3.723163624925638*^9, 
   3.723163627968658*^9}},ExpressionUUID->"745665bb-33c0-4259-bf5a-\
165143d09a94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validDiscreteOperationListQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validDiscreteOperationListQ", "[", "ops_List", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Which", "[", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AllTrue", "[", 
         RowBox[{"ops", ",", " ", "validDiscreteOperationQ"}], "]"}]}], ","}],
       "*)"}], " ", "\n", "\t", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{"ops", ",", " ", "QuantumDiscreteOperationQ"}], "]"}]}], ",", 
      "\n", "\t", "False", ",", "\n", "\t", 
      RowBox[{"!", 
       RowBox[{"AllTrue", "[", 
        RowBox[{
         RowBox[{"ops", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "1", ",", " ", "\"\<QuditDimension\>\""}],
            "]"}], "]"}], ",", " ", "\n", "\t\t", 
         RowBox[{
          RowBox[{"#", " ", "===", " ", 
           RowBox[{"ops", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", " ", "1", ",", " ", "\"\<QuditDimension\>\""}],
              "]"}], "]"}]}], "&"}]}], "]"}]}], ",", "\n", "\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"QuantumDiscreteOperation", "::", "listDims"}], "]"}], ";", 
        "False"}], ")"}], ",", "\n", "\t", "True", ",", "\n", "\t", "True"}], 
     "\n", "\t", "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validDiscreteOperationListQ", "[", "expr___", "]"}], " ", ":=", 
   " ", "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.723045426832735*^9, 3.7230454481602087`*^9}, {
   3.7230455245911694`*^9, 3.7230455381351233`*^9}, {3.723045593524185*^9, 
   3.723045619934106*^9}, {3.723045936236136*^9, 3.723045964826318*^9}, {
   3.723046142082382*^9, 3.723046213292479*^9}, {3.723046964640306*^9, 
   3.723046965183105*^9}, {3.723059307864773*^9, 3.723059502477662*^9}, 
   3.7230596621859617`*^9, {3.72316004763666*^9, 3.723160053363893*^9}, {
   3.723160145391365*^9, 3.723160192489867*^9}, {3.723259391597146*^9, 
   3.72325939862431*^9}},ExpressionUUID->"84e94ad4-43ca-4e6d-a86c-\
ad91001033af"],

Cell[CellGroupData[{

Cell["Symbolic Replacement for Quantum Operations", "Section",
 CellChangeTimes->{{3.7231582639531918`*^9, 
  3.72315828060702*^9}},ExpressionUUID->"984857fd-f529-49ed-99be-\
8f1e152a2390"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "operationReplaceAll", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"operationReplaceAll", "[", 
    RowBox[{"qop_", ",", " ", "subs_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", ",", " ", "op", ",", " ", "dim", ",", " ", "assoc"}], 
      "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<OperationType\>\"", "]"}]}], ";", "\n", "\t", 
      
      RowBox[{"op", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Operation\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"op", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], " ", "&&", 
          " ", 
          RowBox[{"sparseQ", "[", "op", "]"}]}], ",", "\n", "\t\t\t", 
         RowBox[{"SparseArray", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ArrayRules", "[", "op", "]"}], "/.", "subs"}], ",", " ", 
           
           RowBox[{"Dimensions", "[", "op", "]"}]}], "]"}], ",", "\n", 
         "\t\t\t", 
         RowBox[{"op", "/.", "subs"}]}], "]"}]}], ";", "\n", "\t\t", "\n", 
      "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Operation\>\"", "]"}], " ", "=", " ", 
       "op"}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"assoc", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}]}], 
       "]"}]}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723158553999506*^9, 3.7231585681994123`*^9}, 
   3.723158599941063*^9, {3.723158634335145*^9, 3.723158635052146*^9}, {
   3.723158750521819*^9, 3.7231587512334223`*^9}, {3.723158849132156*^9, 
   3.723158896431958*^9}, {3.7231589539688587`*^9, 3.723158994613111*^9}, {
   3.7231590335233917`*^9, 3.7231590815094433`*^9}, {3.7231591968987303`*^9, 
   3.7231592631559057`*^9}},ExpressionUUID->"960d58e3-9149-4cd1-8c75-\
2704e3892e4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operation Properties", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.723080236894109*^9, 3.723080249301784*^9}, {3.7231505243953857`*^9, 
  3.723150535570315*^9}, {3.723152496744141*^9, 
  3.7231525009113073`*^9}},ExpressionUUID->"258833c2-30ce-4673-8643-\
58ed764c9f3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "extractQopProperty", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Ordered", " ", "Input", " ", "Quantum", " ", "Objects"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<Inputs\>\""}], "]"}], " ", ":=", "  ", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Inputs\>\""}], "]"}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", "Operation", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<Operation\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Operation\>\""}], "]"}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Operation", " ", "Type"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<OperationType\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}]}], ";"}],
   "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Qudit", " ", "Dimension"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"qop", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Explicit", " ", "Representation"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<Representation\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"qopRepresentation", "[", "qop", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "Hermitian", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<HermitianQ\>\""}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"HermitianMatrixQ", " ", "@", " ", 
     RowBox[{"qopRepresentation", "[", "qop", "]"}]}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "inverse", " ", "and", " ", "conjugate", " ", "transpose"}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<Inverse\>\""}], "]"}], " ", ":=", " ", 
    RowBox[{"qopInverse", "[", "qop", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQopProperty", "[", 
     RowBox[{"qop_", ",", " ", "\"\<ConjugateTranspose\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"qopConjTranspose", "[", "qop", "]"}]}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQopProperty", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.715474461179277*^9, 3.715474467323559*^9}, {
   3.715474503907769*^9, 3.715474562839603*^9}, {3.7154746007984056`*^9, 
   3.715474636095838*^9}, {3.715477638247345*^9, 3.715477820550665*^9}, {
   3.715477857134968*^9, 3.715477879515625*^9}, {3.715478013394927*^9, 
   3.715478136008112*^9}, {3.716872174804722*^9, 3.716872205080433*^9}, {
   3.716902330327292*^9, 3.7169023432069063`*^9}, 3.717897414534379*^9, {
   3.720918541376977*^9, 3.720918614293005*^9}, {3.72091868440427*^9, 
   3.720918735400588*^9}, {3.7209187998025913`*^9, 3.720918810142644*^9}, {
   3.720918847001953*^9, 3.7209189334648943`*^9}, {3.720918966553145*^9, 
   3.72091900506852*^9}, {3.720919062987115*^9, 3.720919063343856*^9}, {
   3.720919597345209*^9, 3.720919670058551*^9}, {3.720919766809174*^9, 
   3.7209197942453012`*^9}, {3.7209198405288973`*^9, 3.720919892120283*^9}, {
   3.720919979998437*^9, 3.720920042071988*^9}, {3.7209200827040567`*^9, 
   3.7209200919444237`*^9}, {3.7209201404781723`*^9, 3.72092018279664*^9}, {
   3.72092021803139*^9, 3.7209202649256973`*^9}, {3.7209203207121077`*^9, 
   3.720920332156496*^9}, {3.7209205282042437`*^9, 3.720920570560512*^9}, {
   3.7209206452894287`*^9, 3.72092064733961*^9}, {3.7209213241035557`*^9, 
   3.7209213651781387`*^9}, {3.720921403343536*^9, 3.720921436808054*^9}, {
   3.720921549802326*^9, 3.720921689030733*^9}, {3.720921793953081*^9, 
   3.7209218303158073`*^9}, {3.7209218652369537`*^9, 3.720921965887124*^9}, {
   3.7209348312346163`*^9, 3.720934850327717*^9}, {3.720934880978115*^9, 
   3.720934928775963*^9}, {3.720936933927826*^9, 3.720936968355892*^9}, {
   3.7213264474632053`*^9, 3.7213264683954077`*^9}, {3.7213313346502132`*^9, 
   3.7213313362378387`*^9}, {3.7213313862075167`*^9, 3.721331389885343*^9}, {
   3.7213581055676327`*^9, 3.721358117844105*^9}, {3.721358148054504*^9, 
   3.721358148452504*^9}, {3.721358612028811*^9, 3.721358614910829*^9}, {
   3.721360474580282*^9, 3.721360482334405*^9}, {3.722525872405754*^9, 
   3.722525878127303*^9}, {3.722532466675021*^9, 3.7225325863307877`*^9}, {
   3.7225326470118628`*^9, 3.72253276835959*^9}, {3.722533862538329*^9, 
   3.722533866301803*^9}, {3.722789635780733*^9, 3.722789666560832*^9}, {
   3.722903953543886*^9, 3.722903974866537*^9}, {3.722904239517868*^9, 
   3.722904250542677*^9}, {3.722905415282283*^9, 3.722905417471039*^9}, {
   3.72290560568498*^9, 3.7229056079134903`*^9}, {3.7231532909690037`*^9, 
   3.723153322791918*^9}, {3.723153363109799*^9, 3.723153413727256*^9}, {
   3.723153446472082*^9, 3.723153510727324*^9}, {3.723155433572935*^9, 
   3.7231554344330397`*^9}, {3.723156936406713*^9, 3.7231569459324837`*^9}, {
   3.723348413481758*^9, 3.7233484862848988`*^9}, {3.7233525416221247`*^9, 
   3.723352542128747*^9}},ExpressionUUID->"440a6144-7a86-4100-9499-\
cc26f1ff8317"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qopRepresentation", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopRepresentation", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitaryRepresentation", "[", "qop", "]"}], ",", "\n", "\t\t", 
       
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleRepresentation", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolRepresentation", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionRepresentation", "[", "qop", "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmRepresentation", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionRepresentation", "[", "qop", "]"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722904286556926*^9, 3.722904407387631*^9}, {
  3.722905613274159*^9, 3.7229056142263117`*^9}, {3.7231606153359632`*^9, 
  3.723160629642393*^9}, {3.723163734000585*^9, 3.7231637358649273`*^9}, {
  3.7231641961751213`*^9, 
  3.723164198882522*^9}},ExpressionUUID->"9f02e5cc-e2c5-46d0-bc63-\
d1210b5bff30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qopInverse", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopInverse", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitaryInverse", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleInverse", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolInverse", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionInverse", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmInverse", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionInverse", "[", "qop", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722904286556926*^9, 3.722904407387631*^9}, {
   3.722905613274159*^9, 3.7229056142263117`*^9}, {3.7231606153359632`*^9, 
   3.723160629642393*^9}, {3.723163734000585*^9, 3.7231637358649273`*^9}, {
   3.7231641961751213`*^9, 3.723164198882522*^9}, {3.72335137117087*^9, 
   3.723351406515171*^9}, 
   3.723351999095127*^9},ExpressionUUID->"5ea54101-bda2-46b9-8e6e-\
a0bf47ca8594"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qopConjTranspose", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qopConjTranspose", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitaryConjugateTranspose", "[", "qop", "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleConjugateTranspose", "[", "qop", "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolConjugateTranspose", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionConjugateTranspose", "[", "qop", "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmConjugateTranspose", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionConjugateTranspose", "[", "qop", "]"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722904286556926*^9, 3.722904407387631*^9}, {
  3.722905613274159*^9, 3.7229056142263117`*^9}, {3.7231606153359632`*^9, 
  3.723160629642393*^9}, {3.723163734000585*^9, 3.7231637358649273`*^9}, {
  3.7231641961751213`*^9, 3.723164198882522*^9}, {3.72335137117087*^9, 
  3.723351406515171*^9}, {3.723351999095127*^9, 
  3.7233520400423393`*^9}},ExpressionUUID->"5a873583-5d44-4ae4-86e7-\
c7475ec3f3a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operation Front End Formatting", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.723080236894109*^9, 3.723080249301784*^9}, {3.7231505243953857`*^9, 
  3.723150535570315*^9}, {3.7231524658223658`*^9, 
  3.723152469109076*^9}},ExpressionUUID->"5c2b1aaf-9196-413c-b269-\
8785d85ad2a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "operationVisualize", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"operationVisualize", "[", 
    RowBox[{"qop_QuantumDiscreteOperation", ",", " ", "fmt_"}], "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
    RowBox[{
    "QuantumDiscreteOperation", ",", "\n", "\t\t", "qop", ",", "\n", "\t\t", 
     RowBox[{"operationSpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
     RowBox[{"operationBaseVisual", "[", "qop", "]"}], ",", " ", "\n", "\t\t", 
     RowBox[{"operationExpandedVisual", "[", "qop", "]"}], ",", " ", "\n", 
     "\t\t", "fmt"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723150598369565*^9, 3.7231505991529083`*^9}, {
   3.7231506645465*^9, 3.723150887544394*^9}, {3.723151053204322*^9, 
   3.7231510573320293`*^9}, {3.723151970383168*^9, 3.723151984923749*^9}, {
   3.723152127403122*^9, 3.723152132771455*^9}, {3.7231522380981607`*^9, 
   3.723152247343449*^9}, {3.723152858374505*^9, 3.723152905286997*^9}, {
   3.723152943734112*^9, 3.723152958819827*^9}, {3.723154273271226*^9, 
   3.723154285896802*^9}, {3.723160665629877*^9, 3.7231607114168243`*^9}, 
   3.723164797971047*^9, 3.723165379141885*^9, {3.72316541135824*^9, 
   3.723165421299285*^9}},ExpressionUUID->"49bc0755-57a5-4dae-8794-\
8209bca4bc33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "operationBaseVisual", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\n", "\t", 
    RowBox[{
    "operationTypeVisualize", ",", " ", "\n", "\t", "operationDimVisualize", 
     ",", "\n", "\t", "operationInputsVisualize"}], "\n", "\t", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"operationBaseVisual", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"operationTypeVisualize", "[", "qop", "]"}], ",", " ", "\n", 
      "\t", 
      RowBox[{"operationDimVisualize", "[", "qop", "]"}], ",", "\n", "\t", 
      RowBox[{"operationInputsVisualize", "[", "qop", "]"}]}], "\n", "\t", 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"operationTypeVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Operation Type: \>\"", ",", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}],
        ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"operationDimVisualize", "[", "qop_", "]"}], " ", ":=", " ", "\n",
     "\t", 
    RowBox[{"{", 
     RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Qudit Dimension: \>\"", ",", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
        "}"}], ",", "\n", "\t\t ", "StandardForm"}], "]"}], "}"}]}], ";"}], 
  "\n", "\t\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"operationInputsVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
      "\[NotEqual]", " ", "\"\<Conditional\>\""}], ",", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Inputs: \>\"", ",", 
          RowBox[{"qop", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<Inputs\>\""}], "]"}], "]"}]}], "}"}], ",", 
        "\n", "\t\t ", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t", 
     RowBox[{"{", "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722446729008717*^9, 3.722446754408906*^9}, {
  3.722446798385902*^9, 3.722446814309123*^9}, {3.7224469955004873`*^9, 
  3.722447025011174*^9}, {3.7225299621468773`*^9, 3.7225300028854*^9}, {
  3.7229024602063303`*^9, 3.7229024642236557`*^9}, {3.722902527866425*^9, 
  3.722902546928236*^9}, {3.722902588397833*^9, 3.722902605588584*^9}, {
  3.7229026455900173`*^9, 3.722902946376176*^9}, {3.722905985337075*^9, 
  3.722906001973578*^9}, {3.723153025437859*^9, 3.723153061658002*^9}, {
  3.7231531256225357`*^9, 3.723153199258648*^9}, {3.723153575624743*^9, 
  3.723153654712064*^9}, {3.723153731443853*^9, 3.7231538616069393`*^9}, {
  3.723160739402767*^9, 3.723160785683123*^9}, {3.723163760693581*^9, 
  3.7231637803368797`*^9}, {3.723164835005402*^9, 3.723164838458968*^9}, {
  3.723165089461548*^9, 3.7231650918739433`*^9}, {3.723165125174254*^9, 
  3.7231651359840508`*^9}},ExpressionUUID->"e03e951d-210e-4b49-b1a1-\
26e5d3bb2e5f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "operationSpecVisual", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"operationSpecVisual", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitarySpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleSpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolSpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionSpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmSpecVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionSpecVisual", "[", "qop", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722449386505892*^9, 3.7224495215567503`*^9}, {
  3.722449661601303*^9, 3.722449745995307*^9}, {3.722449988461125*^9, 
  3.722449992390929*^9}, {3.72245014269802*^9, 3.722450146877142*^9}, {
  3.7225322517718763`*^9, 3.722532358609918*^9}, {3.7225334846853027`*^9, 
  3.722533542190792*^9}, {3.722533682828342*^9, 3.722533687440531*^9}, {
  3.7225339965585737`*^9, 3.722533998030573*^9}, {3.7229030035370703`*^9, 
  3.7229030446231203`*^9}, {3.7229031346380033`*^9, 3.7229031706750107`*^9}, {
  3.7229033285605*^9, 3.72290350353279*^9}, {3.7229060122326307`*^9, 
  3.722906080371756*^9}, {3.722906138727788*^9, 3.7229061498964443`*^9}, {
  3.723153949642817*^9, 3.723153985379723*^9}, {3.723154318127281*^9, 
  3.723154349683362*^9}, {3.723156754658802*^9, 3.723156784769342*^9}, {
  3.7231569920626907`*^9, 
  3.723156994577758*^9}},ExpressionUUID->"461b5b08-e569-40c4-bebd-\
8cebbc961554"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "operationExpandedVisual", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"operationExpandedVisual", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"type", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<OperationType\>\""}], "]"}], "]"}]}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{"Which", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"type", " ", "===", " ", "\"\<Unitary\>\""}], ",", " ", 
       RowBox[{"unitaryExpandedVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       
       RowBox[{"type", " ", "===", " ", "\"\<Oracle\>\""}], ",", " ", 
       RowBox[{"oracleExpandedVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", 
       RowBox[{"boolExpandedVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Projection\>\""}], ",", " ", 
       RowBox[{"projectionExpandedVisual", "[", "qop", "]"}], ",", "\n", 
       "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<POVM\>\""}], ",", " ", 
       RowBox[{"povmExpandedVisual", "[", "qop", "]"}], ",", "\n", "\t\t", 
       RowBox[{"type", " ", "===", " ", "\"\<Conditional\>\""}], ",", " ", 
       RowBox[{"conditionExpandedVisual", "[", "qop", "]"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722449386505892*^9, 3.7224495215567503`*^9}, {
  3.722449661601303*^9, 3.722449745995307*^9}, {3.722449988461125*^9, 
  3.722449992390929*^9}, {3.72245014269802*^9, 3.722450146877142*^9}, {
  3.7225322517718763`*^9, 3.722532358609918*^9}, {3.7225334846853027`*^9, 
  3.722533542190792*^9}, {3.722533682828342*^9, 3.722533687440531*^9}, {
  3.7225339965585737`*^9, 3.722533998030573*^9}, {3.7229030035370703`*^9, 
  3.7229030446231203`*^9}, {3.7229031346380033`*^9, 3.7229031706750107`*^9}, {
  3.7229033285605*^9, 3.72290350353279*^9}, {3.7229060122326307`*^9, 
  3.722906080371756*^9}, {3.722906138727788*^9, 3.7229061498964443`*^9}, {
  3.723153949642817*^9, 3.723153985379723*^9}, {3.723164864347958*^9, 
  3.72316486749198*^9}},ExpressionUUID->"a24cfa61-6695-4a41-8326-\
9c569895d0a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unitary Operations", "Subchapter",
 CellChangeTimes->{{3.722906930632697*^9, 
  3.7229069339126787`*^9}},ExpressionUUID->"bcd39c17-81d0-4bab-831c-\
bd8a913db9f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "paulix", ",", " ", "pauliy", ",", " ", "pauliz", ",", " ", "rootNot", ",",
     " ", "hadamard", ",", " ", "Rx", ",", " ", "Ry", ",", " ", "Rz", ",", 
    " ", "identity", ",", " ", "fourier"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"sigmap", ",", " ", "sigmam"}], "]"}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"sigmap", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigmam", " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pauliy", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"-", "\[ImaginaryI]"}]}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
       "\[ImaginaryI]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"not", " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rootNot", " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"not", ",", " ", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hadamard", " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}]}]}], "}"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rz", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "]"}]}]}], "}"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Rx", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"\[ImaginaryI]", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "*", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ry", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "/", "2"}], "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"paulix", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "/;", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", "d", ",", "1"}], "]"}], "\[Equal]",
            "j"}]}], ")"}], "\[Rule]", "  ", "1"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", "d"}], "}"}]}], "]"}], ",", " ", "k"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pauliz", "[", 
    RowBox[{"d_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"j_", ",", "j_"}], "}"}], "\[RuleDelayed]", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
          RowBox[{"j", "/", "d"}]}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d", ",", "d"}], "}"}]}], "]"}], ",", " ", "k"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"identity", "[", "dim_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", " ", "1"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fourier", "[", 
    RowBox[{"dim_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{
        RowBox[{"Exp", "[", " ", 
         RowBox[{"2", " ", "Pi", " ", "\[ImaginaryI]", " ", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "*", "k"}], ",", "dim"}], 
            "]"}], "/", "dim"}]}], "]"}], "/", 
        RowBox[{"Sqrt", "[", "dim", "]"}]}]}], ")"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"dim", ",", "dim"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7116278430435266`*^9, 3.711627843289535*^9}, {
   3.711893168613676*^9, 3.7118931866224337`*^9}, {3.7119159245301533`*^9, 
   3.7119160251274548`*^9}, {3.711916062221611*^9, 3.7119160945398073`*^9}, 
   3.712360789053784*^9, {3.7129693987790956`*^9, 3.71296945703728*^9}, 
   3.715994773745091*^9, {3.716862193366439*^9, 3.716862213738224*^9}, {
   3.7168664389598703`*^9, 3.71686650264631*^9}, {3.7168734315615883`*^9, 
   3.716873432929658*^9}, {3.7169047520803623`*^9, 3.716904752966516*^9}, {
   3.7169064639636717`*^9, 3.7169064642718*^9}, {3.7225262852084703`*^9, 
   3.7225263768078203`*^9}, {3.7228131094970417`*^9, 
   3.722813127674857*^9}},ExpressionUUID->"049015f5-35fa-4cec-94e4-\
31bc94b2c230"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "sum", ",", " ", "swap", ",", " ", "rootSwap", ",", " ", "control", ",", 
     " ", "cnot", ",", " ", "cphase", ",", " ", "toffoli", ",", " ", 
     "fredkin", ",", " ", "deutsch", ",", " ", "randUn"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sum", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"in_", ",", " ", "out_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       
       RowBox[{"With", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"i1", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"in", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"j1", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"in", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"i2", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"out", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t ", 
           RowBox[{"j2", " ", "=", " ", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"out", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "\t ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i1", " ", "\[Equal]", " ", "i2"}], " ", "&&", " ", 
            RowBox[{"j2", " ", "\[Equal]", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i1", " ", "+", " ", "j1"}], ",", " ", "d"}], 
              "]"}]}]}], ",", " ", "1", ",", " ", "0"}], "]"}]}], "]"}]}], 
      ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"swap", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", " ", "j_"}], "}"}], "/;", " ", 
         RowBox[{
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", "2"}],
            "]"}], " ", "\n", "\t", "\[Equal]", " ", 
          RowBox[{"Reverse", " ", "@", " ", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
             "2"}], "]"}]}]}]}], ")"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rootSwap", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{
      RowBox[{"swap", "[", "d", "]"}], ",", " ", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"randUn", "[", "dim_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rr", ",", " ", "rc"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"rr", " ", ":=", " ", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"rc", " ", ":=", " ", 
        RowBox[{"rr", " ", "+", " ", 
         RowBox[{"\[ImaginaryI]", " ", "rr"}]}]}], ";", "\n", "\t", 
       RowBox[{"Orthogonalize", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"rc", ",", " ", "dim", ",", " ", "dim"}], "]"}], "]"}]}]}], 
     "\n", "\t", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"control", "[", 
     RowBox[{"dim_Integer", ",", " ", "u_"}], "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", "\n", "\t ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "1"}], " ", 
          "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
         ",", "\n", "\t ", 
         RowBox[{"u", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}], ",", " ", 
            
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", "1"}]}], "]"}], 
          "]"}], ",", "\n", "\t ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", "True", ",", " ", "0"}], 
        "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dim", "^", "2"}], ",", " ", 
        RowBox[{"dim", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cnot", "[", "dim_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{
             RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
             "2"}], "]"}], " ", "\[Equal]", " ", "\n", "\t", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"-", " ", 
                RowBox[{"Total", " ", "@", " ", 
                 RowBox[{"IntegerDigits", "[", 
                  RowBox[{
                   RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "dim", ",", 
                   " ", "2"}], "]"}]}]}], ",", " ", "dim"}], "]"}]}], "}"}]}],
           ")"}], ",", "\n", "\t", "1", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dim", "^", "2"}], ",", " ", 
        RowBox[{"dim", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cphase", "[", "d_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
          ")"}], ",", " ", "1", ",", "\n", "\t ", 
         RowBox[{
          RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}], " ", "&&", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{
              RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
              "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">", " ", "0"}]}], ",", " ", 
         
         RowBox[{"Exp", "[", " ", 
          RowBox[{
          "2", " ", "*", " ", "Pi", " ", "*", " ", "\[ImaginaryI]", " ", "*", 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{
               RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
               "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ")"}], "*", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"IntegerDigits", "[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "d", ",", " ", 
                "2"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ")"}], " ", "/", "d"}]}], "]"}],
          ",", "\n", "\t ", "True", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"d", "^", "2"}], ",", " ", 
        RowBox[{"d", "^", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"toffoli", "[", "nQu_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i_", ",", " ", "j_"}], "}"}], " ", "\[RuleDelayed]", " ", 
       "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", "j"}], " ", "&&", " ", 
            RowBox[{"i", " ", "<", " ", 
             RowBox[{
              RowBox[{"2", "^", "nQu"}], " ", "-", " ", "1"}]}]}], ")"}], " ",
           "||", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "nQu"}], " ", "-", " ", "1"}]}], " ", "&&", 
            " ", 
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "nQu"}]}]}], ")"}], "||", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"j", " ", "\[Equal]", " ", 
             RowBox[{
              RowBox[{"2", "^", "nQu"}], " ", "-", " ", "1"}]}], " ", "&&", 
            " ", 
            RowBox[{"i", " ", "\[Equal]", " ", 
             RowBox[{"2", "^", "nQu"}]}]}], ")"}]}], ",", " ", "1", ",", " ", 
         "0"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "^", "nQu"}], ",", 
        RowBox[{"2", "^", "nQu"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fredkin", " ", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", "1"}]}], "}"}],
       ",", " ", 
      RowBox[{"{", 
       RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deutsch", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "4"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "6"}], "}"}], " ", "\[Rule]", " ", "1"}], ",", 
       "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "7"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "8"}], "}"}], " ", "\[Rule]", " ", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.7123604590120497`*^9, 3.712360504549571*^9}, {
   3.71236074376906*^9, 3.7123607876468077`*^9}, {3.712360956876532*^9, 
   3.712361093860203*^9}, {3.712361384531433*^9, 3.71236138541682*^9}, {
   3.712361672069833*^9, 3.712361686657036*^9}, {3.712361718272491*^9, 
   3.712361732431643*^9}, {3.7123618303534393`*^9, 3.712361835334807*^9}, {
   3.712362071278109*^9, 3.712362091335247*^9}, {3.712362124578648*^9, 
   3.712362192184993*^9}, {3.712362275281781*^9, 3.712362304726241*^9}, {
   3.712362410607421*^9, 3.712362432903242*^9}, {3.712362493566148*^9, 
   3.712362594123538*^9}, {3.712362638388043*^9, 3.7123626618617163`*^9}, {
   3.712362725200081*^9, 3.712362730448077*^9}, {3.712362819455179*^9, 
   3.712362830303667*^9}, {3.712362869201971*^9, 3.7123629369592943`*^9}, {
   3.7123630180628643`*^9, 3.7123630880571938`*^9}, {3.712363137612783*^9, 
   3.712363168950859*^9}, {3.712363202886537*^9, 3.7123632038914413`*^9}, {
   3.712363269963624*^9, 3.712363270055517*^9}, {3.712363303227912*^9, 
   3.712363303309057*^9}, {3.712363466751629*^9, 3.712363485139674*^9}, {
   3.712363538772883*^9, 3.712363541624593*^9}, {3.7123636398913393`*^9, 
   3.712363659581258*^9}, {3.712363802697412*^9, 3.712363803485156*^9}, {
   3.712363838284791*^9, 3.712363858753538*^9}, {3.712363960951539*^9, 
   3.7123639715190067`*^9}, {3.712364279294125*^9, 3.712364307521596*^9}, {
   3.712364616356872*^9, 3.712364679186853*^9}, {3.712364741354355*^9, 
   3.712364804716555*^9}, {3.712364844863818*^9, 3.712364847390418*^9}, {
   3.712364886323525*^9, 3.712364948366549*^9}, {3.712364998438534*^9, 
   3.7123650775768127`*^9}, {3.712365114937334*^9, 3.712365244769127*^9}, 
   3.712365279746662*^9, {3.712365403892071*^9, 3.712365460462977*^9}, {
   3.712365521870961*^9, 3.712365568115073*^9}, {3.712365716037512*^9, 
   3.712365732209968*^9}, {3.712365820880282*^9, 3.712365821475018*^9}, {
   3.712365870153413*^9, 3.712365873825449*^9}, {3.7123659084195843`*^9, 
   3.712365908860791*^9}, {3.712365967242805*^9, 3.7123659674675922`*^9}, {
   3.7123660288901987`*^9, 3.712366124046949*^9}, {3.712366161593215*^9, 
   3.712366173546135*^9}, {3.712366222064199*^9, 3.7123662414114437`*^9}, {
   3.712366299656809*^9, 3.7123663099753237`*^9}, {3.7123663598806334`*^9, 
   3.7123663831437187`*^9}, {3.712366420766018*^9, 3.712366426990053*^9}, {
   3.7123664619888887`*^9, 3.712366498671918*^9}, {3.7123670070873528`*^9, 
   3.7123670375770407`*^9}, 3.71236711574851*^9, {3.712367203566156*^9, 
   3.71236722333046*^9}, {3.712368096968631*^9, 3.712368288944454*^9}, {
   3.712368536584958*^9, 3.7123686259636793`*^9}, {3.71236871523526*^9, 
   3.712368717167465*^9}, {3.712411040821576*^9, 3.7124110437544603`*^9}, {
   3.716865868905058*^9, 3.7168659008824797`*^9}, {3.716866036835518*^9, 
   3.716866225036405*^9}, {3.716866294285301*^9, 3.716866294899723*^9}, {
   3.71686633083989*^9, 3.716866348398978*^9}, {3.7168663983055468`*^9, 
   3.716866428861063*^9}, {3.7228111561964397`*^9, 3.7228111588737392`*^9}, {
   3.7228111920611677`*^9, 3.722811208874489*^9}, {3.722811256159677*^9, 
   3.722811383311325*^9}, {3.7228114826619043`*^9, 3.722811488227397*^9}, {
   3.722812057506486*^9, 3.7228120647106647`*^9}, {3.722812155859364*^9, 
   3.72281223064783*^9}, {3.7228130931542273`*^9, 3.722813100279984*^9}, {
   3.722867965549923*^9, 3.722867968481947*^9}, {3.7228690755661297`*^9, 
   3.722869080442451*^9}, {3.722869255162006*^9, 3.722869459001802*^9}, {
   3.722869499260148*^9, 3.7228695096507177`*^9}, {3.722869671560615*^9, 
   3.722869678353012*^9}, {3.722905119193585*^9, 
   3.7229051251234903`*^9}},ExpressionUUID->"fcee3d3c-0dc0-4248-b334-\
ae67f536dca8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "unitaryExpandedVisual", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\n", "\t", 
    RowBox[{"unitaryRepVisualize", ",", "\n", "\t", "hermQVisualize"}], "\n", 
    "\t", "]"}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryExpandedVisual", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"hermQVisualize", "[", "qop", "]"}], ",", "\n", "\t", 
      RowBox[{"unitaryRepVisualize", "[", "qop", "]"}]}], "\n", "\t", "]"}]}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryRepVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{"rep", " ", "=", " ", 
        RowBox[{"unitaryRepresentation", "[", "qop", "]"}]}], "}"}], ",", 
      "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "rep"}], " ", "\[LessEqual]", "  ", 
         "8"}], ",", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Representation: \>\"", ",", "\n", "\t\t\t ", 
             RowBox[{"MatrixForm", "[", 
              RowBox[{"Normal", "[", "rep", "]"}], "]"}]}], "}"}], ",", "\n", 
           "\t\t\t", "StandardForm"}], "]"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"{", "}"}]}], "]"}]}], "\n", "\t", "]"}]}], ";"}], "\n", 
  "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hermQVisualize", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t", 
      RowBox[{"rep", " ", "=", " ", 
       RowBox[{"unitaryRepresentation", "[", "qop", "]"}]}], "}"}], ",", "\n",
      "\t", 
     RowBox[{"{", 
      RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<HermitianQ: \>\"", ",", "\n", "\t\t ", 
          RowBox[{"HermitianMatrixQ", "[", "rep", "]"}]}], "}"}], ",", "\n", 
        "\t\t ", "StandardForm"}], "]"}], "}"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7229035331792927`*^9, 3.722903551101438*^9}, {
  3.722903599616767*^9, 3.722903622510808*^9}, {3.722906208634693*^9, 
  3.72290627719972*^9}, {3.7229063146629353`*^9, 3.722906321804408*^9}, {
  3.722906599110242*^9, 3.722906617938574*^9}, {3.7231545202887383`*^9, 
  3.723154604044846*^9}, {3.723154645101344*^9, 3.723154679307716*^9}, {
  3.723154800461808*^9, 3.7231548924139023`*^9}, {3.7231549229343147`*^9, 
  3.7231551378903418`*^9}, {3.723155192269046*^9, 3.723155201858775*^9}, {
  3.723155441293364*^9, 3.723155455433066*^9}, {3.7231556009384747`*^9, 
  3.7231556064783697`*^9}, {3.723157015478841*^9, 3.723157026394236*^9}, {
  3.7231649336575947`*^9, 3.723164938357538*^9}, {3.723165195349152*^9, 
  3.7231651991938143`*^9}},ExpressionUUID->"97c8b387-ab1b-4b55-99d6-\
c32196cd1b06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryPowerK", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerK", "[", 
    RowBox[{"qop_QuantumDiscreteOperation", ",", " ", "k_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"assoc", ",", " ", "dim", ",", " ", "pow"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"assoc", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"pow", " ", "=", " ", 
       RowBox[{"assoc", "[", "\"\<Power\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"pow", " ", "=", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"pow", " ", "*", " ", "k"}], ",", " ", "dim"}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Power\>\"", "]"}], " ", "=", " ", "pow"}], 
      ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"assoc", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "pow"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722913051205036*^9, 3.722913192883306*^9}, {
  3.723164367488123*^9, 3.7231643706812563`*^9}, {3.723439182563983*^9, 
  3.723439189329102*^9}},ExpressionUUID->"6a8be5a6-399c-4001-bf03-\
919df3bca208"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryRepresentation", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"unitaryRepresentation", "[", "qop_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "specs", ",", " ", "op", ",", " ", "ws", ",", " ", "dim", ",", " ", 
      "pow", ",", " ", "mat", ",", " ", "perm", ",", " ", "shape", ",", " ", 
      "size"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"specs", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"op", " ", "=", " ", 
      RowBox[{"specs", "[", "\"\<Operation\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"ws", " ", "=", " ", 
      RowBox[{"specs", "[", "\"\<Inputs\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"dim", " ", "=", " ", 
      RowBox[{"specs", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"pow", " ", "=", " ", 
      RowBox[{"specs", "[", "\"\<Power\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"unitarySingleQuditOperationQ", "[", 
        RowBox[{"op", "[", "\"\<Base\>\"", "]"}], "]"}], ",", " ", "\n", 
       "\t\t", 
       RowBox[{"Return", "[", 
        RowBox[{"unitarySingleQuditOperation", "[", 
         RowBox[{"op", ",", " ", "pow", ",", " ", "dim"}], "]"}], "]"}]}], 
      "]"}], ";", " ", "\n", "\t", "\n", "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"unitaryMultiQuditOperation", "[", 
       RowBox[{"op", ",", " ", "pow", ",", " ", "dim", ",", " ", 
        RowBox[{"Length", " ", "@", " ", "ws"}]}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"shape", " ", "=", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"dim", ",", " ", 
        RowBox[{"2", " ", "*", " ", 
         RowBox[{"Length", " ", "@", " ", "ws"}]}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{"mat", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"size", " ", "=", " ", 
      RowBox[{"dim", " ", "^", " ", 
       RowBox[{"(", 
        RowBox[{"Length", " ", "@", " ", "ws"}], ")"}]}]}], ";", "\n", "\t", 
     RowBox[{"perm", " ", "=", " ", 
      RowBox[{"InversePermutation", "[", 
       RowBox[{"Ordering", " ", "@", " ", "ws"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"perm", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"perm", ",", " ", 
        RowBox[{"perm", " ", "+", " ", 
         RowBox[{"Length", " ", "@", " ", "perm"}]}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"Transpose", "[", 
       RowBox[{"mat", ",", " ", "perm"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", " ", "@", " ", "mat"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"size", ",", " ", "size"}], "}"}]}], "]"}]}], ";", "\n", 
     "\t", "mat"}]}], "\n", "\t", "]"}]}]}], "Code",
 CellChangeTimes->{{3.722904465702284*^9, 3.722904526126042*^9}, {
   3.7231540636173677`*^9, 3.72315406385457*^9}, {3.723164038145405*^9, 
   3.723164053804015*^9}, {3.7231646749023046`*^9, 3.7231647039960613`*^9}, {
   3.723348767881546*^9, 3.7233488002197437`*^9}, {3.723348864906621*^9, 
   3.723348923282632*^9}, {3.7233489684030123`*^9, 3.723349063444632*^9}, {
   3.723349122798242*^9, 3.723349175950809*^9}, {3.723355240570476*^9, 
   3.7233552426284513`*^9}, {3.723356222234933*^9, 3.723356222490024*^9}, 
   3.723356255769648*^9},ExpressionUUID->"f2c971e3-c2e8-4e41-af4d-\
0be78a385748"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryInverse", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryInverse", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "specs", ",", " ", "op", ",", " ", "invQ", ",", " ", "dim", ",", " ", 
       "pow", ",", " ", "base"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"specs", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"op", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Operation\>\"", "]"}]}], ";", "\n", "\t", 
      "\n", "\t", 
      RowBox[{"base", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<Base\>\"", "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"invQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<InverseQ\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"op", "[", "\"\<InverseQ\>\"", "]"}], " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{"invQ", ",", " ", "False", ",", " ", "True"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{
       RowBox[{"specs", "[", "\"\<Operation\>\"", "]"}], " ", "=", " ", 
       "op"}], ";", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"pow", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Power\>\"", "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"specs", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "pow"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233514467066393`*^9, 3.723351636831421*^9}, 
   3.723351697016725*^9, {3.723351730497937*^9, 3.7233517478076363`*^9}, 
   3.723351804740127*^9, {3.723351844551388*^9, 3.723351856572741*^9}, {
   3.723435720859335*^9, 3.7234357772836933`*^9}, {3.7234358679965563`*^9, 
   3.7234358879464397`*^9}, {3.7234362178987913`*^9, 
   3.7234362292177677`*^9}, {3.723436482829845*^9, 
   3.723436483331366*^9}},ExpressionUUID->"b21c559a-00cf-4225-95b3-\
3ee366f25649"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryConjugateTranspose", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryConjugateTranspose", "[", "qop_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "specs", ",", " ", "op", ",", " ", "conjTranspQ", ",", " ", "dim", ",", 
       " ", "pow"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"specs", " ", "=", " ", 
       RowBox[{"qop", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"op", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Operation\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"conjTranspQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<ConjugateTransposeQ\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"op", "[", "\"\<ConjugateTransposeQ\>\"", "]"}], " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{"conjTranspQ", ",", " ", "False", ",", " ", "True"}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{
       RowBox[{"specs", "[", "\"\<Operation\>\"", "]"}], " ", "=", " ", 
       "op"}], ";", "\n", "\t", 
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"pow", " ", "=", " ", 
       RowBox[{"qop", "[", "\"\<Power\>\"", "]"}]}], ";", "\n", "\t", "\n", 
      "\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"specs", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "pow"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233514467066393`*^9, 3.723351636831421*^9}, 
   3.723351697016725*^9, {3.723351730497937*^9, 3.7233517478076363`*^9}, 
   3.723351804740127*^9, {3.723351844551388*^9, 3.723351856572741*^9}, {
   3.723351891539872*^9, 
   3.723351923634791*^9}},ExpressionUUID->"55b9bfdd-91cf-46d7-8dfd-\
a0ebad31006d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitarySingleQuditOperationQ", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationQ", "[", 
    RowBox[{"\"\<SigmaX\>\"", "|", "\"\<SigmaY\>\"", "|", "\"\<SigmaZ\>\""}], 
    "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitarySingleQuditOperationQ", "[", 
     RowBox[{"\"\<SigmaPlus\>\"", "|", "\"\<SigmaMinus\>\""}], "]"}], " ", ":=",
     " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationQ", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<RotX\>\"", "|", "\"\<RotY\>\"", "|", "\"\<RotZ\>\""}], ",",
       " ", 
      RowBox[{
      "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|", 
       "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], "]"}], " ", ":=",
    " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitarySingleQuditOperationQ", "[", 
     RowBox[{
     "\"\<Hadamard\>\"", "|", "\"\<NOT\>\"", "|", "\"\<RootNOT\>\"", "|", 
      "\"\<S\>\"", "|", "\"\<T\>\""}], "]"}], " ", ":=", " ", "True"}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationQ", "[", "expr___", "]"}], " ", ":=", 
   " ", "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.713448094944687*^9, 3.713448173491867*^9}, {
   3.713448259269668*^9, 3.7134484256412287`*^9}, {3.715308743903879*^9, 
   3.7153087572776833`*^9}, {3.715994698580576*^9, 3.7159947545093813`*^9}, {
   3.716003989482335*^9, 3.71600399230453*^9}, {3.7168712231521463`*^9, 
   3.716871229755295*^9}, {3.716873395209372*^9, 3.716873395537238*^9}, {
   3.71690648137878*^9, 3.716906481774699*^9}, {3.722526506656363*^9, 
   3.7225265696861*^9}, {3.722792068229672*^9, 3.72279207009871*^9}, {
   3.722812332986834*^9, 3.722812339616132*^9}, 3.722812743848096*^9, {
   3.722812986478654*^9, 3.722812986899189*^9}, 3.7228142685155687`*^9, {
   3.7229047476877737`*^9, 3.722904764195122*^9}, {3.723435600185759*^9, 
   3.723435607718923*^9}},ExpressionUUID->"59978eec-b808-4145-8df3-\
c9117b120c27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitarySingleQuditOperation", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperation", "[", 
    RowBox[{"op_Association", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mat", ",", " ", "invQ", ",", " ", "conjTranspQ"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"unitarySingleQuditOperationHelper", "[", 
        RowBox[{
         RowBox[{"op", "[", "\"\<Base\>\"", "]"}], ",", " ", "k", ",", " ", 
         "d"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"invQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<InverseQ\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"conjTranspQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<ConjugateTransposeQ\>\"", "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"invQ", ",", " ", 
        RowBox[{"mat", " ", "=", " ", 
         RowBox[{"Inverse", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"conjTranspQ", ",", " ", 
        RowBox[{"mat", " ", "=", " ", 
         RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}]}], "]"}], ";", 
      "\n", "\t", "mat"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233492256341057`*^9, 
  3.723349443857593*^9}},ExpressionUUID->"18a32efd-4a72-4cf6-8fea-\
a27113fe74f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitarySingleQuditOperationHelper", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<SigmaX\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"paulix", "[", 
    RowBox[{"d", ",", " ", "k"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitarySingleQuditOperationHelper", "[", 
     RowBox[{"\"\<SigmaZ\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer"}],
      "]"}], " ", ":=", " ", 
    RowBox[{"pauliz", "[", 
     RowBox[{"d", ",", " ", "k"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RotX\>\"", ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", "1",
      ",", " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"Rx", "[", "\[Theta]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<RotY\>\"", ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", "1",
      ",", " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"Ry", "[", "\[Theta]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitarySingleQuditOperationHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<RotZ\>\"", ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ",
       "1", ",", " ", "2"}], "]"}], " ", ":=", " ", 
    RowBox[{"Rz", "[", "\[Theta]", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<SigmaY\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "pauliy"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<SigmaPlus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "sigmap"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitarySingleQuditOperationHelper", "[", 
     RowBox[{"\"\<SigmaMinus\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ",
     ":=", " ", "sigmam"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "hadamard"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<NOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", "not"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<RootNOT\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=",
    " ", "rootNot"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<S\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditOperationHelper", "[", 
    RowBox[{"\"\<T\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Rz", "[", 
    RowBox[{"Pi", "/", "4"}], "]"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711627802102491*^9, 3.7116278396895533`*^9}, {
   3.711729601181856*^9, 3.711729617757085*^9}, {3.711916133149301*^9, 
   3.711916198771625*^9}, {3.712334972420026*^9, 3.712335003245472*^9}, {
   3.7129694744165*^9, 3.7129694937377977`*^9}, {3.713448241678858*^9, 
   3.713448247902111*^9}, {3.713448305871522*^9, 3.71344831684617*^9}, {
   3.71349416295219*^9, 3.713494181248212*^9}, {3.715308712209654*^9, 
   3.715308734631833*^9}, {3.715994759944625*^9, 3.71599476389154*^9}, {
   3.716002306118935*^9, 3.716002392462278*^9}, {3.716861505295163*^9, 
   3.716861530930921*^9}, {3.7168657225755243`*^9, 3.716865729189637*^9}, {
   3.7168733883984222`*^9, 3.716873388778406*^9}, {3.7169064711467733`*^9, 
   3.716906474518895*^9}, 3.7170823360060368`*^9, {3.7180828273542147`*^9, 
   3.718082827584771*^9}, {3.72252642724664*^9, 3.722526500570499*^9}, {
   3.722535330954424*^9, 3.722535332713077*^9}, {3.722535372025578*^9, 
   3.72253538827884*^9}, {3.722791853900709*^9, 3.722791883481502*^9}, {
   3.722791986843953*^9, 3.722792037974481*^9}, {3.72281227398818*^9, 
   3.7228123077840223`*^9}, 3.722812707545569*^9, {3.722813331776696*^9, 
   3.722813336588998*^9}, {3.722814258020122*^9, 3.7228142593320217`*^9}, {
   3.722904591554365*^9, 3.72290465707778*^9}, {3.7233494508663*^9, 
   3.7233494694062653`*^9}},ExpressionUUID->"791d9936-687b-4cff-8461-\
941796582d2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryMultiQuditOperationQ", "]"}], ";"}], "\n", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", 
    RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPhase\>\""}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", 
    RowBox[{
    "\"\<SUM\>\"", "|", "\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\"", "|", 
     "\"\<Fredkin\>\"", "|", "\"\<Toffoli\>\""}], "]"}], " ", ":=", " ", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryMultiQuditOperationQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], "]"}], " ", ":=",
     " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", "\"\<RandomUnitary\>\"", "]"}],
    " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", "\"\<Fourier\>\"", "]"}], " ", 
   ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryMultiQuditOperationQ", "[", "\"\<Identity\>\"", "]"}], 
    " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", 
    RowBox[{"mat_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryMultiQuditOperationQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<CU\>\"", ",", " ", 
       RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationQ", "[", "expr___", "]"}], " ", ":=", 
   " ", "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.7134484339862757`*^9, 3.713448591026493*^9}, 
   3.7134552551285133`*^9, {3.716004003823765*^9, 3.716004006382698*^9}, {
   3.716906501195075*^9, 3.716906503181888*^9}, 3.722535408749555*^9, 
   3.722792286338271*^9, {3.722812433891348*^9, 3.722812448657661*^9}, {
   3.7228130641529493`*^9, 3.722813074821475*^9}, 3.722814290589522*^9, {
   3.7229047948461018`*^9, 
   3.722904891368389*^9}},ExpressionUUID->"8a3dbdcc-3b6c-49d4-b4fc-\
3df593b345aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryMultiQuditOperation", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperation", "[", 
    RowBox[{
    "op_Association", ",", " ", "k_Integer", ",", " ", "d_Integer", ",", " ", 
     "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mat", ",", " ", "invQ", ",", " ", "conjTranspQ"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"unitaryMultiQuditOperationHelper", "[", 
        RowBox[{
         RowBox[{"op", "[", "\"\<Base\>\"", "]"}], ",", " ", "k", ",", " ", 
         "d", ",", " ", "n"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"invQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<InverseQ\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"conjTranspQ", " ", "=", " ", 
       RowBox[{"op", "[", "\"\<ConjugateTransposeQ\>\"", "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"invQ", ",", " ", 
        RowBox[{"mat", " ", "=", " ", 
         RowBox[{"Inverse", "[", "mat", "]"}]}]}], "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{"conjTranspQ", ",", " ", 
        RowBox[{"mat", " ", "=", " ", 
         RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}]}], "]"}], ";", 
      "\n", "\t", "mat"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233492256341057`*^9, 3.723349443857593*^9}, {
  3.723349526937832*^9, 
  3.723349557412787*^9}},ExpressionUUID->"ed73ba91-ae90-4b48-b16c-\
0b5e8110c8f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryMultiQuditOperationHelper", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<RandomUnitary\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", 
     "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"randUn", "[", 
    RowBox[{"d", "^", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<Fourier\>\"", ",", " ", "k_Integer", ",", " ", "d_Integer", ",", " ",
      "n_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"fourier", "[", 
    RowBox[{
     RowBox[{"d", "^", "n"}], ",", " ", "k"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryMultiQuditOperationHelper", "[", 
     RowBox[{
     "\"\<Identity\>\"", ",", " ", "1", ",", " ", "dim_Integer", ",", " ", 
      "nQu_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"identity", "[", 
     RowBox[{"dim", "^", "nQu"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<CNOT\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"cnot", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<CPhase\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"cphase", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<SUM\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"sum", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<SWAP\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"swap", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<RootSWAP\>\"", ",", " ", "1", ",", " ", "d_Integer", ",", " ", "2"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"rootSwap", "[", "d", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "1", ",", " ", "2", ",", " ", "3"}], 
    "]"}], " ", ":=", " ", "fredkin"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
    "\"\<Toffoli\>\"", ",", " ", "1", ",", " ", "2", ",", " ", "n_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"toffoli", "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryMultiQuditOperationHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ",
       "1", ",", " ", "2", ",", " ", "3"}], "]"}], " ", ":=", " ", 
    RowBox[{"deutsch", "[", "\[Theta]", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CU\>\"", ",", " ", 
       RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", "1", ",", 
     " ", "d_Integer", ",", " ", "2"}], "]"}], " ", ":=", " ", 
   RowBox[{"control", "[", 
    RowBox[{"d", ",", " ", "u"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditOperationHelper", "[", 
    RowBox[{
     RowBox[{"mat_", "?", "UnitaryMatrixQ"}], ",", " ", "k_Integer", ",", " ",
      "d_Integer", ",", " ", "n_Integer"}], "]"}], " ", ":=", " ", "mat"}], 
  ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711627802102491*^9, 3.7116278396895533`*^9}, {
   3.711729601181856*^9, 3.711729617757085*^9}, {3.711916133149301*^9, 
   3.711916198771625*^9}, {3.712334972420026*^9, 3.712335003245472*^9}, {
   3.712336009664887*^9, 3.71233611284415*^9}, {3.712336701241724*^9, 
   3.712336735841483*^9}, {3.712336830564012*^9, 3.71233683855579*^9}, {
   3.712357921268471*^9, 3.712357991618842*^9}, {3.712358042010742*^9, 
   3.712358048331049*^9}, {3.7123581732189493`*^9, 3.712358252597331*^9}, 
   3.712358722174755*^9, {3.712359668438987*^9, 3.712359726113505*^9}, {
   3.7123597855247593`*^9, 3.712359786088593*^9}, {3.712368434368578*^9, 
   3.712368441182098*^9}, {3.712410983165258*^9, 3.7124110199193783`*^9}, {
   3.712411051535833*^9, 3.71241105588643*^9}, 3.7129684910903893`*^9, {
   3.713448229992814*^9, 3.713448232452343*^9}, {3.713494206992497*^9, 
   3.713494211151392*^9}, {3.716003926987005*^9, 3.716003955372871*^9}, {
   3.716865745693699*^9, 3.716865845935561*^9}, 3.718585922773767*^9, 
   3.718586021802964*^9, 3.722535404281736*^9, 3.722792279130975*^9, {
   3.72281236777956*^9, 3.722812422641131*^9}, {3.72281299793526*^9, 
   3.72281305372753*^9}, 3.722813343639201*^9, 3.722814279779478*^9, {
   3.722814398132814*^9, 3.722814420592458*^9}, {3.722904949041012*^9, 
   3.7229050639806957`*^9}, {3.722905141095253*^9, 3.7229051414285097`*^9}, {
   3.723349570429989*^9, 
   3.7233495891415777`*^9}},ExpressionUUID->"572998c5-33ff-4f33-bfc0-\
3bcf59022cf4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "unitarySpecVisual", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"unitarySpecVisual", "[", "qop_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "base", ",", " ", "invQ", ",", " ", "conjTranspQ", ",", " ", "d", ",", 
      " ", "k", ",", " ", "visual"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"base", " ", "=", " ", 
      RowBox[{"unitaryBaseString", "[", 
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "\"\<Operation\>\""}], "]"}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"d", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], ";", 
     "\n", "\t", 
     RowBox[{"k", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "\"\<Power\>\""}], "]"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"invQ", " ", "=", " ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{
        "1", ",", " ", "\"\<Operation\>\"", ",", " ", "\"\<InverseQ\>\""}], 
        "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"conjTranspQ", " ", "=", "  ", 
      RowBox[{"qop", "[", 
       RowBox[{"[", 
        RowBox[{
        "1", ",", " ", "\"\<Operation\>\"", ",", " ", 
         "\"\<ConjugateTransposeQ\>\""}], "]"}], "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"visual", " ", "=", " ", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"d", " ", ">", " ", "2"}], " ", "&&", " ", 
         RowBox[{"k", " ", ">", " ", "1"}]}], ",", "\n", "\t\t ", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Subsuperscript", "[", 
           RowBox[{"base", ",", " ", "d", ",", " ", "k"}], "]"}], ",", " ", 
          "StandardForm"}], "]"}], ",", "\n", "\t\t ", 
        RowBox[{"d", " ", ">", " ", "2"}], ",", "\n", "\t\t ", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"base", ",", " ", "d"}], "]"}], ",", " ", "StandardForm"}],
          "]"}], ",", "\n", "\t\t ", "True", ",", "\n", "\t\t ", "base"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ListQ", "[", 
        RowBox[{"qop", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "\"\<Operation\>\"", ",", "\"\<Base\>\""}], 
          "]"}], "]"}], "]"}], ",", " ", "\n", "\t\t ", 
       RowBox[{"Return", "[", "visual", "]"}]}], "]"}], ";", "\n", "\t\t ", 
     "\n", "\t", 
     RowBox[{"visual", " ", "=", " ", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"ListQ", "[", 
           RowBox[{"qop", "[", 
            RowBox[{"[", 
             RowBox[{
             "1", ",", " ", "\"\<Operation\>\"", ",", "\"\<Base\>\""}], "]"}],
             "]"}], "]"}], "&&", " ", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<RotX\>\"", ",", " ", "\"\<RotY\>\"", ",", " ", 
              "\"\<RotZ\>\""}], "}"}], ",", " ", 
            RowBox[{"qop", "[", 
             RowBox[{"[", 
              RowBox[{
              "1", ",", " ", "\"\<Operation\>\"", ",", "\"\<Base\>\"", ",", 
               "1"}], "]"}], "]"}]}], "]"}]}], ",", " ", "visual", ","}], 
        "*)"}], "\n", "\t\t", 
       RowBox[{"invQ", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Superscript", "[", 
           RowBox[{"visual", ",", " ", "\"\<(-1)\>\""}], "]"}], ",", " ", 
          "StandardForm"}], "]"}], ",", "\n", "\t\t", "conjTranspQ", ",", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Superscript", "[", 
           RowBox[{"visual", ",", " ", "\[Dagger]"}], "]"}], ",", " ", 
          "StandardForm"}], "]"}], ",", "\n", "\t\t", "True", ",", " ", 
        "visual"}], "]"}]}], ";", "\n", "\t", "\n", "\t", "visual"}]}], "\n", 
   "\t\t ", "]"}]}]}], "Code",
 CellChangeTimes->{{3.722905792025036*^9, 3.722905843345127*^9}, {
  3.722906194707137*^9, 3.7229062007670803`*^9}, {3.722907380912751*^9, 
  3.722907460909275*^9}, {3.722907534090538*^9, 3.722907613607843*^9}, {
  3.723154441791613*^9, 3.723154460762039*^9}, {3.7231639691650743`*^9, 
  3.723163979129973*^9}, {3.723350011686474*^9, 3.7233500140816298`*^9}, {
  3.723350134399046*^9, 3.723350406872424*^9}, {3.7234365469196663`*^9, 
  3.723436608537738*^9}, {3.7234366760611362`*^9, 3.7234367277229433`*^9}, {
  3.7234377647890663`*^9, 3.7234377666986303`*^9}, {3.7234378045770073`*^9, 
  3.723437824495564*^9}, {3.723437888023271*^9, 3.723437927304729*^9}, {
  3.723438527515279*^9, 3.723438547121907*^9}, {3.723438590714737*^9, 
  3.723438600071953*^9}, {3.7234386417241707`*^9, 3.723438682866243*^9}, {
  3.723438717000167*^9, 
  3.723438731515008*^9}},ExpressionUUID->"8c4e81b4-7463-4180-8ff1-\
e5436575a68e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryHelper", "[", 
    RowBox[{"spec_", ",", " ", "wires_", ",", " ", "dim_", ",", " ", "pow_"}],
     "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ws", ",", " ", "specFormatted", ",", " ", "data"}], "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"ws", " ", "=", "  ", 
       RowBox[{"wiresFormat", "[", "wires", "]"}]}], ";", "\n", "\t", 
      RowBox[{"specFormatted", " ", "=", " ", 
       RowBox[{"unitaryFormatHelper", "[", 
        RowBox[{"spec", ",", " ", 
         RowBox[{"Length", " ", "@", " ", "ws"}], ",", " ", "dim"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", 
         RowBox[{
         "\"\<OperationType\>\"", " ", "\[Rule]", " ", "\"\<Unitary\>\""}], 
         "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Inputs\>\"", "]"}], " ", "=", " ", "ws"}], 
      ";", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "[", "\"\<QuditDimension\>\"", "]"}], " ", "=", " ", 
       "dim"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Power\>\"", "]"}], " ", "=", " ", "pow"}], 
      ";", "\n", "\t", 
      RowBox[{
       RowBox[{"data", "[", "\"\<Operation\>\"", "]"}], " ", "=", " ", "\n", 
       "\t\t", 
       RowBox[{"<|", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Base\>\"", " ", "\[Rule]", " ", "specFormatted"}], ",",
           " ", 
          RowBox[{"\"\<InverseQ\>\"", " ", "\[Rule]", " ", "False"}], ",", 
          " ", 
          RowBox[{
          "\"\<ConjugateTransposeQ\>\"", " ", "\[Rule]", " ", "False"}]}], 
         "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{"QuantumDiscreteOperation", "[", 
       RowBox[{"data", ",", " ", 
        RowBox[{"\"\<QuditDimension\>\"", " ", "\[Rule]", " ", "dim"}], ",", 
        " ", 
        RowBox[{"\"\<Power\>\"", " ", "\[Rule]", " ", "pow"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722890982828374*^9, 3.722890987843156*^9}, {
   3.722891045857294*^9, 3.7228910711456833`*^9}, {3.722891293080681*^9, 
   3.722891320054926*^9}, {3.7228913749082813`*^9, 3.722891398219284*^9}, {
   3.7229016093469343`*^9, 3.722901673599289*^9}, {3.722901710132217*^9, 
   3.722901777222033*^9}, {3.722901816794251*^9, 3.722901835265729*^9}, {
   3.722901866984249*^9, 3.7229018832613163`*^9}, {3.722902253484187*^9, 
   3.722902263763031*^9}, 3.723158675910267*^9, {3.723252552409511*^9, 
   3.723252558506523*^9}, {3.7232528883808002`*^9, 3.723252927355625*^9}, {
   3.723253105551672*^9, 3.723253153838421*^9}, {3.723253248396597*^9, 
   3.723253254524468*^9}, {3.7233497292434483`*^9, 
   3.723349778022201*^9}},ExpressionUUID->"b303feaa-df23-4060-a143-\
16536ffb7caf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryFormatHelper", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{
      "\"\<Identity\>\"", "|", "\"\<identity\>\"", "|", "\"\<id\>\"", "|", 
       "\"\<Id\>\""}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], 
    " ", ":=", " ", "\"\<Identity\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<S-\>\"", "|", "\"\<SigmaMinus\>\"", "|", "\"\<sigmaMinus\>\""}], 
     ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<SigmaMinus\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{
      "\"\<S+\>\"", "|", "\"\<SigmaPlus\>\"", "|", "\"\<sigmaPlus\>\""}], ",",
       " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    "\"\<SigmaPlus\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<x\>\"", "|", "\"\<X\>\"", "|", "\"\<Sx\>\"", "|", "\"\<PauliX\>\"", 
      "|", "\"\<SigmaX\>\"", "|", "\"\<pauliX\>\"", "|", "\"\<sigmaX\>\""}], 
     ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<SigmaX\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<y\>\"", "|", "\"\<Y\>\"", "|", "\"\<Sy\>\"", "|", "\"\<PauliY\>\"", 
      "|", "\"\<SigmaY\>\"", "|", "\"\<pauliY\>\"", "|", "\"\<sigmaY\>\""}], 
     ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<SigmaY\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{
      "\"\<z\>\"", "|", "\"\<Z\>\"", "|", "\"\<Sz\>\"", "|", "\"\<PauliZ\>\"",
        "|", "\"\<SigmaZ\>\"", "|", "\"\<pauliZ\>\"", "|", "\"\<sigmaZ\>\""}],
       ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    "\"\<SigmaZ\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Rx\>\"", "|", "\"\<RotX\>\""}], ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", 
     "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RotX\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Ry\>\"", "|", "\"\<RotY\>\""}], ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", 
     "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<RotY\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Rz\>\"", "|", "\"\<RotZ\>\""}], ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ",
       "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<RotZ\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"\"\<H\>\"", "|", "\"\<Hadamard\>\"", "|", "\"\<hadamard\>\""}], 
     ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<Hadamard\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{
      "\"\<Fourier\>\"", "|", "\"\<fourier\>\"", "|", "\"\<qft\>\"", "|", 
       "\"\<QFT\>\""}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}],
     " ", ":=", " ", "\"\<Fourier\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"\"\<RootNOT\>\"", "|", "\"\<RootNot\>\""}], ",", " ", 
     "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<RootNOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"\"\<NOT\>\"", "|", "\"\<Not\>\"", "|", "\"\<not\>\""}], ",", 
     " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<NOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<CNOT\>\"", "|", "\"\<Cnot\>\"", "|", "\"\<CNot\>\"", "|", 
      "\"\<cnot\>\""}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}],
    " ", ":=", " ", "\"\<CNOT\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<CPhase\>\"", "|", "\"\<CPHASE\>\"", "|", "\"\<cphase\>\"", "|", 
      "\"\<Cphase\>\""}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", "\"\<CPHASE\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{"\"\<SUM\>\"", "|", "\"\<sum\>\"", "|", "\"\<Sum\>\""}], ",", 
      " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    "\"\<SUM\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"\"\<RootSWAP\>\"", "|", "\"\<RootSwap\>\""}], ",", " ", 
     "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   "\"\<RootSWAP\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{"\"\<SWAP\>\"", "|", "\"\<swap\>\"", "|", "\"\<Swap\>\""}], ",",
       " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    "\"\<SWAP\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Deutsch\>\"", "|", "\"\<deutsch\>\""}], ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", 
     "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<Deutsch\>\"", ",", " ", "\[Theta]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{
     "\"\<Fredkin\>\"", "|", "\"\<fredkin\>\"", "|", "\"\<CSWAP\>\"", "|", 
      "\"\<CSwap\>\""}], ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", "\"\<Fredkin\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{"\"\<Toffoli\>\"", "|", "\"\<toffoli\>\""}], ",", " ", 
      "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", 
    "\"\<Toffoli\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{"\"\<S\>\"", ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", "\"\<S\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{"\"\<T\>\"", ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
     "]"}], " ", ":=", " ", "\"\<T\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
    "\"\<RandomUnitary\>\"", ",", " ", "n_Integer", ",", " ", "d_Integer"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"randUn", "[", 
    RowBox[{"d", "^", "n"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{
     RowBox[{"u_", "?", "UnitaryMatrixQ"}], ",", " ", "n_Integer", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "u"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryFormatHelper", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\"\<CU\>\"", "|", "\"\<Cu\>\"", "|", "\"\<cu\>\"", "|", 
         "\"\<Control\>\"", "|", "\"\<CONTROL\>\"", "|", "\"\<Controlled\>\"",
          "|", "\"\<CONTROLLED\>\""}], ",", " ", "u_"}], "}"}], ",", " ", 
      "n_Integer", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"UnitaryMatrixQ", "[", "u", "]"}], ",", " ", "\n", "\t\t", 
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", "u"}], "}"}], ",", " ", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"QuantumDiscreteOperation", "::", "unitary"}], ",", "u"}], 
         "]"}], ";", "$Failed"}], ")"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryFormatHelper", "[", 
    RowBox[{"expr_", ",", " ", "n_Integer", ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "unitarySpec"}], ",", 
       "expr"}], "]"}], ";", "$Failed"}], ")"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722891404530181*^9, 3.722891414810479*^9}, {
   3.722891456325707*^9, 3.722891618730925*^9}, {3.72289166344734*^9, 
   3.722891860158792*^9}, {3.722891892815057*^9, 3.7228919180200644`*^9}, {
   3.72289195645922*^9, 3.7228920239183817`*^9}, {3.722895176467182*^9, 
   3.722895296037981*^9}, {3.72289533567039*^9, 3.722895459538817*^9}, {
   3.7228955696825323`*^9, 3.7228956357394857`*^9}, {3.722900803672748*^9, 
   3.722900805893712*^9}, {3.722901101054227*^9, 3.722901154664023*^9}, 
   3.722901236990848*^9, {3.723252571907929*^9, 
   3.723252696243402*^9}},ExpressionUUID->"fc47a6aa-d133-46e7-b366-\
a61bc9e5c6d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryBaseString", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseString", "[", "assoc_", "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ListQ", "[", 
       RowBox[{"assoc", "[", "\"\<Base\>\"", "]"}], "]"}], " ", "&&", "\n", 
      "\t\t", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<RotX\>\"", ",", " ", "\"\<RotY\>\"", ",", " ", "\"\<RotZ\>\""}],
          "}"}], ",", " ", 
        RowBox[{
         RowBox[{"assoc", "[", "\"\<Base\>\"", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"rotBaseString", "[", "assoc", "]"}], ",", "\n", "\t\t", 
     RowBox[{"unitaryBaseStringHelper", "[", 
      RowBox[{"assoc", "[", "\"\<Base\>\"", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723436747791286*^9, 3.723436839355088*^9}, {
  3.7234373687540493`*^9, 3.723437369686763*^9}, {3.723437484943589*^9, 
  3.723437493172512*^9}, {3.7234377048407288`*^9, 3.72343770679692*^9}, {
  3.7234388362464523`*^9, 
  3.723438840963398*^9}},ExpressionUUID->"e2ea4822-dd09-4018-97fc-\
9d11a61fb9ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "rotBaseString", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rotBaseString", "[", "assoc_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "base", ",", " ", "dir", ",", " ", "angle", ",", " ", "invQ", ",", " ", 
       "conjTranspQ", ",", " ", "string"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"invQ", " ", "=", " ", 
       RowBox[{"assoc", "[", "\"\<InverseQ\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"conjTranspQ", " ", "=", " ", 
       RowBox[{"assoc", "[", "\"\<ConjugateTransposeQ\>\"", "]"}]}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"base", " ", "=", " ", 
       RowBox[{"assoc", "[", "\"\<Base\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"dir", " ", "=", " ", 
       RowBox[{"Which", "[", " ", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"base", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<RotX\>\""}], 
         ",", " ", "\"\<x\>\"", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"base", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<RotY\>\""}], 
         ",", " ", "\"\<y\>\"", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"base", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", "\"\<RotZ\>\""}], 
         ",", " ", "\"\<z\>\""}], "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
      "\n", "\t", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"base", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"angle", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Xor", "[", 
          RowBox[{"invQ", ",", " ", "conjTranspQ"}], "]"}], ",", " ", 
         RowBox[{"-", "angle"}], ",", " ", "angle"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"string", " ", "=", " ", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"Subscript", "[", 
           RowBox[{"\"\<R\>\"", ",", "dir"}], "]"}], ",", " ", 
          "StandardForm"}], "]"}], "<>", "\"\<(\>\"", "<>", 
        RowBox[{"ToString", "[", "angle", "]"}], "<>", "\"\<)\>\""}]}], ";", 
      "\n", "\t", "string"}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7234368986806107`*^9, 3.723437193589785*^9}, {
   3.723437273059574*^9, 3.723437337983755*^9}, {3.723437595585308*^9, 
   3.7234375985661917`*^9}, 3.72343763602419*^9, {3.723437697361714*^9, 
   3.723437697758274*^9}},ExpressionUUID->"5da01198-036a-4bab-8ba8-\
7d33fa2236cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryBaseStringHelper", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<Identity\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalI]\[ScriptD]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<SigmaMinus\>\"", "]"}], " ", ":=",
    " ", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(-\)]\)\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<SigmaPlus\>\"", "]"}], " ", ":=",
     " ", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(+\)]\)\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<SigmaX\>\"", "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<SigmaY\>\"", "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalY]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<SigmaZ\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalZ]\>\""}], ";"}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<Hadamard\>\"", "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalH]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<Fourier\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalQ]\[ScriptCapitalF]\[ScriptCapitalT]\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<RootNOT\>\"", "]"}], " ", ":=",
    " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "\"\<\[ScriptCapitalX]\>\"", "]"}], ",", " ", 
     "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<NOT\>\"", "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalX]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<CNOT\>\"", "]"}], " ", ":=", 
   " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalX]\>\""}],
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<CPHASE\>\"", "]"}], " ", ":=",
    " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalZ]\>\""}],
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<SUM\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalS]\[ScriptU]\[ScriptM]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<RootSWAP\>\"", "]"}], " ", ":=",
    " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{
     "Sqrt", "[", 
      "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\"", "]"}], ",", " ", "StandardForm"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<SWAP\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalS]\[ScriptCapitalW]\[ScriptCapitalA]\
\[ScriptCapitalP]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Deutsch\>\"", ",", " ", 
      RowBox[{
      "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|", 
       "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], "]"}], " ", ":=",
    " ", "\n", "\t", 
   RowBox[{"\"\<D(\>\"", "<>", 
    RowBox[{"ToString", "[", "\[Theta]", "]"}], "<>", "\"\<)\>\""}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<Fredkin\>\"", "]"}], " ", ":=",
    " ", "\"\<\[ScriptCapitalF]\[ScriptR]\[ScriptE]\[ScriptD]\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<Toffoli\>\"", "]"}], " ", ":=",
     " ", "\"\<\[ScriptCapitalT]\[ScriptO]\[ScriptF]\[ScriptF]\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", "\"\<S\>\"", "]"}], " ", ":=", 
   " ", "\"\<\[ScriptCapitalS]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryBaseStringHelper", "[", "\"\<T\>\"", "]"}], " ", ":=", 
    " ", "\"\<\[ScriptCapitalT]\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", 
    RowBox[{"u_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", 
   "\"\<\[ScriptCapitalU]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryBaseStringHelper", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CU\>\"", ",", " ", "u_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"\"\<\[ScriptCapitalC]\>\"", ",", "\"\<\[ScriptCapitalU]\>\""}],
       "]"}], ",", " ", "StandardForm"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.722900114036878*^9, 3.722900161269847*^9}, {
   3.722900213480558*^9, 3.7229003154847603`*^9}, {3.722900353521941*^9, 
   3.722900422581218*^9}, {3.7229004592357597`*^9, 3.7229005673375187`*^9}, {
   3.722900610755821*^9, 3.7229007920933867`*^9}, {3.722900835224621*^9, 
   3.722901042286706*^9}, 3.722901085353801*^9, {3.722901177951993*^9, 
   3.7229012477295218`*^9}, {3.7232528243608303`*^9, 
   3.7232528249879932`*^9}, {3.723436845379249*^9, 
   3.7234368963339767`*^9}},ExpressionUUID->"8615808e-9fb8-4edf-aff4-\
cebbb65c1df3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<Unitary\>\""}], ",", " ", "True", ",", " ", "False"}],
      "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 
  3.722909501576662*^9}},ExpressionUUID->"a02d9e31-9b18-4de9-9e25-\
6adeb4dd5254"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validUnitaryOperationQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "validUnitaryOperationQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ",
     ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"baseOp", " ", "=", " ", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<Operation\>\""}], "]"}], "]"}]}], ",", "\n",
         "\t", 
        RowBox[{"pow", " ", "=", " ", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<Power\>\""}], "]"}], "]"}]}], ",", "\n", 
        "\t", 
        RowBox[{"dim", " ", "=", " ", 
         RowBox[{"qop", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], ",", 
        "\n", "\t", 
        RowBox[{"arity", " ", "=", " ", 
         RowBox[{"Length", " ", "@", " ", 
          RowBox[{"qop", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "\"\<Inputs\>\""}], "]"}], "]"}]}]}]}], "}"}], 
      ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"unitaryOpQ", "[", "baseOp", "]"}], " ", "&&", "\n", "\t", 
       RowBox[{"unitaryArityQ", "[", 
        RowBox[{"baseOp", ",", " ", "arity"}], "]"}], " ", "&&", "\n", "\t", 
       RowBox[{"unitaryWiresQ", "[", 
        RowBox[{"baseOp", ",", " ", "dim"}], "]"}], " ", "&&", "\n", "\t", 
       RowBox[{"unitaryPowerQ", "[", 
        RowBox[{"baseOp", ",", " ", "pow", ",", " ", "dim"}], "]"}]}]}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"validUnitaryOperationQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.722901513138097*^9, 3.722901529211334*^9}, {
  3.722907836893385*^9, 3.7229078463623543`*^9}, {3.722907899405164*^9, 
  3.722908038058051*^9}, {3.7229086279168663`*^9, 3.722908776421844*^9}, {
  3.723349847348208*^9, 
  3.723349856893551*^9}},ExpressionUUID->"4c2f8cd7-a4e8-4be7-92cc-\
ecaa483cd2ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryOpQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", "\"\<Identity\>\"", "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", "\"\<RandomUnitary\>\"", "]"}], ":=", "True"}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", 
    RowBox[{"\"\<SigmaX\>\"", "|", "\"\<SigmaY\>\"", "|", "\"\<SigmaZ\>\""}], 
    "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"\"\<SigmaPlus\>\"", "|", "\"\<SigmaMinus\>\""}], "]"}], ":=", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", "\"\<Hadamard\>\"", "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", "\"\<Fourier\>\"", "]"}], ":=", "True"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", 
    RowBox[{"\"\<S\>\"", "|", "\"\<T\>\""}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<RotX\>\"", "|", "\"\<RotY\>\"", "|", "\"\<RotZ\>\""}], 
       ",", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], "]"}], ":=", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", 
    RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPHASE\>\"", "|", "\"\<SUM\>\""}], 
     "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", 
    RowBox[{"\"\<Toffoli\>\"", "|", "\"\<Fredkin\>\""}], "]"}], ":=", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\""}], "]"}], ":=", "True"}],
    ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Deutsch\>\"", ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], "]"}], ":=", 
    "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<CU\>\"", ",", " ", 
      RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryOpQ", "[", 
     RowBox[{"mat_", "?", "UnitaryMatrixQ"}], "]"}], " ", ":=", " ", "True"}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryOpQ", "[", "expr___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "op"}], ",", "expr"}], "]"}],
      ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{{3.711198978902726*^9, 3.711199008205306*^9}, {
   3.711199667452841*^9, 3.711199670222505*^9}, {3.71155259862556*^9, 
   3.711552598705518*^9}, {3.711627450751006*^9, 3.711627450870048*^9}, 
   3.711627744051405*^9, 3.711627962922064*^9, 3.711628034756383*^9, {
   3.71162809049618*^9, 3.711628113397143*^9}, {3.711893203227656*^9, 
   3.711893206603079*^9}, {3.711916226919194*^9, 3.7119162956159163`*^9}, {
   3.711922365809868*^9, 3.711922414422842*^9}, {3.711922483166244*^9, 
   3.7119224997268457`*^9}, {3.711922546379245*^9, 3.7119225624429817`*^9}, 
   3.712328391128015*^9, {3.7123284473560123`*^9, 3.7123284495350313`*^9}, 
   3.7123587358431387`*^9, {3.712359762686832*^9, 3.712359781355592*^9}, {
   3.71236875107937*^9, 3.712368758999258*^9}, {3.712411095669664*^9, 
   3.7124111585578423`*^9}, {3.71297206509552*^9, 3.712972084022666*^9}, {
   3.712972131247923*^9, 3.7129721572208757`*^9}, {3.712972320891046*^9, 
   3.7129723363050623`*^9}, {3.71297242395415*^9, 3.712972438937728*^9}, {
   3.712972579161079*^9, 3.712972582229478*^9}, {3.7132003183932257`*^9, 
   3.713200372030808*^9}, {3.7132004034955072`*^9, 3.713200417244158*^9}, {
   3.713200508494343*^9, 3.713200524170044*^9}, {3.71320095255101*^9, 
   3.7132009570816393`*^9}, {3.713202057359105*^9, 3.71320205936329*^9}, {
   3.713203511589941*^9, 3.7132035208260527`*^9}, {3.7134552665131483`*^9, 
   3.713455273707633*^9}, {3.7144760637946043`*^9, 3.714476073855507*^9}, {
   3.7145350642027273`*^9, 3.714535071466085*^9}, {3.715308792670784*^9, 
   3.715308809605103*^9}, {3.715816710071066*^9, 3.715816793295678*^9}, {
   3.715816847894457*^9, 3.715816857132799*^9}, {3.7158182966564913`*^9, 
   3.7158183089518757`*^9}, {3.715818381400161*^9, 3.715818384582245*^9}, {
   3.715993227226075*^9, 3.715993230512813*^9}, {3.7168713646124268`*^9, 
   3.716871380259962*^9}, 3.71687346838511*^9, {3.71690618338161*^9, 
   3.716906201376052*^9}, {3.716906590909512*^9, 3.716906592552697*^9}, {
   3.72019744195942*^9, 3.720197451198308*^9}, {3.722526780583315*^9, 
   3.722526820284625*^9}, {3.7225354572462807`*^9, 3.722535459076694*^9}, {
   3.722792132270656*^9, 3.7227921359483557`*^9}, {3.7228110299376783`*^9, 
   3.722811034095559*^9}, {3.722814171685569*^9, 3.722814175578021*^9}, {
   3.722871317350903*^9, 3.722871359058813*^9}, {3.722871495067317*^9, 
   3.72287155946507*^9}, {3.722871592625422*^9, 3.722871671973238*^9}, {
   3.722872314840659*^9, 3.7228723349874563`*^9}, {3.722872370289307*^9, 
   3.7228723924389353`*^9}, {3.722872796423119*^9, 3.722872823579699*^9}, {
   3.722872943445084*^9, 3.722873011068242*^9}, {3.722873173800865*^9, 
   3.7228733237598743`*^9}, {3.722873558103457*^9, 3.7228735841961308`*^9}, 
   3.7228761545139723`*^9, {3.722908209482233*^9, 3.722908463119377*^9}, 
   3.7229628056719217`*^9},ExpressionUUID->"cbeb8748-5681-4777-b31d-\
ab992e7981b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryArityQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", 
    RowBox[{"\"\<Identity\>\"", ",", "1"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{
      "\"\<SigmaX\>\"", "|", "\"\<SigmaY\>\"", "|", "\"\<SigmaZ\>\"", "|", 
       "\"\<SigmaPlus\>\"", "|", "\"\<SigmaMinus\>\""}], ",", "1"}], "]"}], ":=",
     "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{"\"\<Hadamard\>\"", "|", "\"\<Fourier\>\""}], ",", "1"}], "]"}],
     ":=", "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", 
    RowBox[{
     RowBox[{"\"\<S\>\"", "|", "\"\<T\>\""}], ",", "1"}], "]"}], ":=", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", 
    RowBox[{
     RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], ",", "1"}], "]"}], ":=",
    "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<RotX\>\"", "|", "\"\<RotY\>\"", "|", "\"\<RotZ\>\""}], 
        ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", 
      "1"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<SUM\>\"", "|", "\"\<CPHASE\>\""}], ",",
      "2"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\""}], ",", "2"}], "]"}], ":=",
     "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{"\"\<Fredkin\>\"", "|", 
       RowBox[{"{", 
        RowBox[{"\"\<Deutsch\>\"", ",", " ", 
         RowBox[{
         "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
          "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}]}], ",", 
      " ", "3"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "n_Integer"}], "]"}], ":=", 
    "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "n_Integer"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"IntegerQ", " ", "@", " ", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Length", " ", "@", " ", "un"}], ",", " ", 
      RowBox[{"1", "/", "n"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryArityQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", "2"}], 
     "]"}], " ", ":=", " ", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryArityQ", "[", "expr__", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "arity"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711627966785308*^9, {3.711893229852388*^9, 3.711893233891757*^9}, {
   3.711916386652781*^9, 3.711916409279182*^9}, 3.712358405535966*^9, 
   3.7123587565396442`*^9, {3.7123598528664227`*^9, 3.71235991648102*^9}, {
   3.7124112318351803`*^9, 3.71241125945887*^9}, {3.7129722199592247`*^9, 
   3.712972225984437*^9}, {3.712972286470264*^9, 3.712972294474381*^9}, {
   3.712972463117008*^9, 3.712972470233869*^9}, {3.712972529313553*^9, 
   3.7129725452115993`*^9}, 3.712972595181594*^9, {3.712973332657415*^9, 
   3.712973408158164*^9}, {3.71447619607191*^9, 3.714476205830765*^9}, {
   3.714476392890403*^9, 3.714476408802706*^9}, {3.714476507655168*^9, 
   3.714476507747018*^9}, {3.715308832539727*^9, 3.715308842725155*^9}, {
   3.715992526680908*^9, 3.715992552718854*^9}, {3.715993193738078*^9, 
   3.715993220136948*^9}, {3.716871272221931*^9, 3.716871290827629*^9}, 
   3.7168734516654873`*^9, {3.716906280118031*^9, 3.716906287690298*^9}, {
   3.716906395983388*^9, 3.7169064211997538`*^9}, {3.7201974920923653`*^9, 
   3.720197501059331*^9}, {3.722526971250246*^9, 3.722527006441903*^9}, {
   3.7225354330285187`*^9, 3.722535438228999*^9}, {3.722908550757481*^9, 
   3.722908614378824*^9}, {3.72290888895331*^9, 3.722908893405446*^9}, {
   3.722909008099279*^9, 
   3.7229090228325367`*^9}},ExpressionUUID->"21152e63-0da9-498c-a2ac-\
c60a21e53824"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryWiresQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<SigmaX\>\"", "|", "\"\<SigmaZ\>\"", "|", "\"\<Identity\>\""}], ",", 
     " ", "d_Integer"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryWiresQ", "[", 
     RowBox[{
      RowBox[{
      "\"\<SigmaY\>\"", "|", "\"\<SigmaPlus\>\"", "|", "\"\<SigmaMinus\>\""}],
       ",", " ", "2"}], "]"}], ":=", "True"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<Hadamard\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<Fourier\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{
     RowBox[{"\"\<NOT\>\"", "|", "\"\<RootNOT\>\""}], ",", " ", "2"}], "]"}], 
   ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<RotX\>\"", "|", "\"\<RotY\>\"", "|", "\"\<RotZ\>\""}], 
       ",", " ", 
       RowBox[{
       "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", "|",
         "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ", 
     "2"}], "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryWiresQ", "[", 
     RowBox[{
      RowBox[{"\"\<S\>\"", "|", "\"\<T\>\""}], ",", " ", "2"}], "]"}], ":=", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPHASE\>\""}], ",", " ", "d_Integer"}],
     "]"}], ":=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<SUM\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<RootSWAP\>\"", ",", " ", "d_Integer"}], "]"}], ":=", 
   "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryWiresQ", "[", 
     RowBox[{"\"\<SWAP\>\"", ",", " ", "d_Integer"}], "]"}], ":=", "True"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<Toffoli\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{"\"\<Fredkin\>\"", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryWiresQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ",
       "2"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "d_Integer"}], "]"}], 
   " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryWiresQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", 
      "d_Integer"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryWiresQ", "[", "expr___", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "wires"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711628096282588*^9, {3.7118932161043577`*^9, 3.711893221591734*^9}, {
   3.711916332063767*^9, 3.711916345297983*^9}, {3.712358260398993*^9, 
   3.7123583615533733`*^9}, 3.712358748608156*^9, {3.712359795558028*^9, 
   3.712359823704911*^9}, {3.712368461176449*^9, 3.712368467500946*^9}, {
   3.7123687842036943`*^9, 3.71236881940063*^9}, {3.712411178311574*^9, 
   3.712411219580862*^9}, {3.712972207133834*^9, 3.712972212761271*^9}, {
   3.7129723041516333`*^9, 3.712972314713561*^9}, {3.712972443333146*^9, 
   3.712972452992194*^9}, 3.7129725907633553`*^9, {3.712973431304184*^9, 
   3.7129734441045227`*^9}, {3.7129734921326237`*^9, 3.712973495291671*^9}, {
   3.712973526320224*^9, 3.712973539226349*^9}, {3.714476115503478*^9, 
   3.714476130908833*^9}, 3.714477167577036*^9, {3.715308813124794*^9, 
   3.715308827366807*^9}, {3.715992255462944*^9, 3.715992266597747*^9}, {
   3.7159923673189983`*^9, 3.715992446275567*^9}, {3.7159932036505404`*^9, 
   3.715993215390847*^9}, {3.7168713039896173`*^9, 3.716871355349173*^9}, 
   3.716873460361434*^9, {3.7169062081645203`*^9, 3.716906260498324*^9}, {
   3.716906600029148*^9, 3.7169066154492483`*^9}, {3.7201974598177567`*^9, 
   3.7201974725501966`*^9}, {3.7225269181406918`*^9, 3.722526961700385*^9}, {
   3.722535448002536*^9, 3.722535451601036*^9}, {3.72290879879788*^9, 
   3.722908850046939*^9}, {3.7229089065819693`*^9, 3.7229089125305853`*^9}, {
   3.722908961162191*^9, 
   3.722908998402351*^9}},ExpressionUUID->"bbe059e8-33bd-4390-b750-\
2dfd99f7b6f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryPowerQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<SigmaX\>\"", "|", "\"\<Fourier\>\"", "|", "\"\<SigmaZ\>\""}], ",", 
     " ", "k_Integer", ",", " ", "d_Integer"}], "]"}], ":=", " ", "True"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<Hadamard\>\"", "|", "\"\<SigmaY\>\"", "|", "\"\<SigmaPlus\>\"", 
      "|", "\"\<SigmaMinus\>\"", "|", "\"\<Identity\>\""}], ",", " ", "1", 
     ",", " ", "2"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{
     "\"\<S\>\"", "|", "\"\<T\>\"", "|", "\"\<NOT\>\"", "|", 
      "\"\<RootNOT\>\""}], ",", " ", "1", ",", " ", "2"}], "]"}], ":=", 
   "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryPowerQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<RotX\>\"", "|", "\"\<RotY\>\"", "|", "\"\<RotZ\>\""}], 
        ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}], ",", " ",
       "1", ",", " ", "2"}], "]"}], ":=", "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{"\"\<CNOT\>\"", "|", "\"\<CPHASE\>\"", "|", "\"\<SUM\>\""}], ",",
      " ", "1", ",", " ", "d_Integer"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{"\"\<SWAP\>\"", "|", "\"\<RootSWAP\>\""}], ",", "1", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{"\"\<Fredkin\>\"", "|", 
      RowBox[{"{", 
       RowBox[{"\"\<Deutsch\>\"", ",", " ", 
        RowBox[{
        "\[Theta]_Number", "|", "\[Theta]_Real", "|", "\[Theta]_Rational", 
         "|", "\[Theta]_Integer", "|", "\[Theta]_Symbol"}]}], "}"}]}], ",", 
     " ", "1", ",", " ", "2"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryPowerQ", "[", 
     RowBox[{"\"\<Toffoli\>\"", ",", " ", "1", ",", " ", "2"}], "]"}], ":=", 
    "True"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", 
    RowBox[{
     RowBox[{"un_", "?", "UnitaryMatrixQ"}], ",", " ", "1", ",", " ", 
     "d_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"unitaryPowerQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<CU\>\"", ",", " ", 
        RowBox[{"u_", "?", "UnitaryMatrixQ"}]}], "}"}], ",", " ", "1", ",", 
      " ", "d_Integer"}], "]"}], " ", ":=", " ", "True"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryPowerQ", "[", "expr__", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"QuantumDiscreteOperation", "::", "power"}], ",", "expr"}], 
      "]"}], ";", "False"}], ")"}]}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711627966785308*^9, {3.711893229852388*^9, 3.711893233891757*^9}, {
   3.711916386652781*^9, 3.711916409279182*^9}, 3.712358405535966*^9, 
   3.7123587565396442`*^9, {3.7123598528664227`*^9, 3.71235991648102*^9}, {
   3.7124112318351803`*^9, 3.71241125945887*^9}, {3.7129722199592247`*^9, 
   3.712972225984437*^9}, {3.712972286470264*^9, 3.712972294474381*^9}, {
   3.712972463117008*^9, 3.712972470233869*^9}, {3.712972529313553*^9, 
   3.7129725452115993`*^9}, 3.712972595181594*^9, {3.712973332657415*^9, 
   3.712973408158164*^9}, {3.71447619607191*^9, 3.714476205830765*^9}, {
   3.714476392890403*^9, 3.714476408802706*^9}, {3.714476507655168*^9, 
   3.714476507747018*^9}, {3.715308832539727*^9, 3.715308842725155*^9}, {
   3.715992526680908*^9, 3.715992552718854*^9}, {3.715992783561956*^9, 
   3.715992784961246*^9}, {3.7159928358988132`*^9, 3.71599285171985*^9}, {
   3.715992891481058*^9, 3.715993048112455*^9}, {3.715993091186911*^9, 
   3.715993183641243*^9}, {3.715993242863654*^9, 3.715993260380096*^9}, 
   3.7159933095200653`*^9, {3.715995601420124*^9, 3.715995609401073*^9}, {
   3.7168636374567223`*^9, 3.716863638071794*^9}, {3.716873440953582*^9, 
   3.716873443001604*^9}, {3.716904723314499*^9, 3.716904797030004*^9}, {
   3.7169064297606573`*^9, 3.7169064544790382`*^9}, {3.716907026724821*^9, 
   3.716907029470969*^9}, {3.720197508846385*^9, 3.7201975193805513`*^9}, {
   3.722527009788205*^9, 3.722527071240758*^9}, {3.722908938675887*^9, 
   3.722908956145372*^9}, {3.7229090301235313`*^9, 
   3.7229090752951736`*^9}},ExpressionUUID->"e3700592-ad68-4ace-b601-\
9f1b1d5e7e8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryAction", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"unitaryAction", "[", 
   RowBox[{"qop_", ",", " ", "qstate_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "opObjs", ",", " ", "stateObjs", ",", " ", "opDim", ",", " ", "stateDim",
       ",", " ", "pow", ",", " ", "op", ",", " ", "mat"}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"opObjs", " ", "=", " ", 
      RowBox[{"qop", "[", "\"\<Inputs\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"stateObjs", " ", "=", " ", 
      RowBox[{"qstate", "[", "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", 
     "\t", "\n", "\t", 
     RowBox[{"opDim", " ", "=", " ", 
      RowBox[{"qop", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", "\t", 
     
     RowBox[{"stateDim", " ", "=", " ", 
      RowBox[{"qstate", "[", "\"\<QuditDimension\>\"", "]"}]}], ";", "\n", 
     "\t", "\n", "\t", 
     RowBox[{"pow", " ", "=", " ", 
      RowBox[{"qop", "[", "\"\<Power\>\"", "]"}]}], ";", "\n", "\t", 
     RowBox[{"op", " ", "=", " ", 
      RowBox[{"qop", "[", "\"\<Operation\>\"", "]"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AllTrue", "[", 
         RowBox[{"opObjs", ",", " ", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"stateObjs", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}], 
       ",", "\n", "\t\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantumDiscreteOperation", "::", "opWiresNotInState"}], 
           ",", "opObjs", ",", "qop", ",", "qstate"}], "]"}], ";", "\n", 
         "\t\t", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", "\n",
      "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"opDim", " ", "\[NotEqual]", " ", "stateDim"}], ",", "\n", 
       "\t\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantumDiscreteOperation", "::", "opStateDims"}], ",", 
           "opDim", ",", "stateDim"}], "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], "]"}], ";", "\n",
      "\t\t", "\n", "\t", 
     RowBox[{"mat", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "opObjs"}], " ", "===", " ", "1"}], 
        ",", "\n", "\t\t", 
        RowBox[{"unitarySingleQuditMatrix", "[", 
         RowBox[{"qop", ",", " ", 
          RowBox[{"opObjs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", "pow", ",", " ", "opDim",
           ",", " ", "qstate"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"unitaryMultiQuditMatrix", "[", 
         RowBox[{
         "qop", ",", " ", "opObjs", ",", " ", "pow", ",", " ", "opDim", ",", 
          " ", "qstate"}], "]"}]}], "\n", "\t\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"applyMatToState", "[", 
      RowBox[{"mat", ",", " ", "qstate"}], "]"}]}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.723352697435664*^9, 3.723352743362008*^9}, {
   3.723352818454967*^9, 3.723352845534462*^9}, {3.723352891339409*^9, 
   3.723352934169512*^9}, {3.7233529831004753`*^9, 3.723353142267091*^9}, {
   3.7233531928879013`*^9, 3.7233535203137503`*^9}, {3.723354237781917*^9, 
   3.7233542402407722`*^9}, {3.723355697895248*^9, 3.7233557032321787`*^9}, 
   3.723356439124261*^9, {3.723356877136692*^9, 
   3.723356877547068*^9}},ExpressionUUID->"189f760d-f260-4701-9380-\
cae615bfcf2c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitarySingleQuditMatrix", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitarySingleQuditMatrix", "[", 
    RowBox[{
    "qop_", ",", " ", "obj_", ",", " ", "pow_", ",", " ", "dim_", ",", " ", 
     "qstate_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"stateObjs", ",", " ", "opMats", ",", " ", "pos"}], "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"stateObjs", " ", "=", " ", 
       RowBox[{"qstate", "[", "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"opMats", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"identity", "[", "dim", "]"}], ",", " ", 
         RowBox[{"Length", " ", "@", " ", "stateObjs"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"pos", " ", "=", " ", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"stateObjs", ",", " ", "obj"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"opMats", "[", 
        RowBox[{"[", "pos", "]"}], "]"}], " ", "=", " ", 
       RowBox[{"qopRepresentation", "[", "qop", "]"}]}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", " ", "@", " ", "opMats"}], " ", "\[Equal]", " ", 
         "1"}], ",", " ", 
        RowBox[{"opMats", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"KroneckerProduct", " ", "@@", " ", "opMats"}]}], "]"}]}]}], 
    "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233539416156597`*^9, 3.723354130467711*^9}, {
  3.723354217262329*^9, 
  3.7233542826078978`*^9}},ExpressionUUID->"1d4a3807-264b-4501-bde3-\
d8e4b60e930e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "unitaryMultiQuditMatrix", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitaryMultiQuditMatrix", "[", 
    RowBox[{
    "qop_", ",", " ", "objs_", ",", " ", "pow_", ",", " ", "dim_", ",", " ", 
     "qstate_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "stateWs", ",", " ", "n", ",", " ", "passiveWs", ",", " ", "order", ",",
        " ", "restOfRep", ",", " ", "shape", ",", " ", "opMat", ",", " ", 
       "tpLevels"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"stateWs", " ", "=", " ", 
       RowBox[{"qstate", "[", "\"\<QuantumObjects\>\"", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", " ", "@", " ", "stateWs"}]}], ";", "\n", "\t", 
      RowBox[{"passiveWs", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"stateWs", ",", " ", "objs"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"order", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"objs", ",", " ", "passiveWs"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"restOfRep", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"identity", "[", "dim", "]"}], ",", " ", 
         RowBox[{"Length", " ", "@", " ", "passiveWs"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"shape", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"dim", ",", " ", 
         RowBox[{"2", " ", "*", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", " ", "@", " ", "objs"}], " ", "===", " ", "n"}], 
         ",", "\n", "\t\t", 
         RowBox[{"qopRepresentation", "[", "qop", "]"}], ",", "\n", "\t\t", 
         RowBox[{"KroneckerProduct", " ", "@@", " ", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"qopRepresentation", "[", "qop", "]"}], "}"}], ",", " ", 
            "restOfRep"}], "]"}]}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"opMat", ",", " ", "shape"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"InversePermutation", "[", 
        RowBox[{"Ordering", " ", "@", " ", "order"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"tpLevels", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tpLevels", ",", " ", 
         RowBox[{"tpLevels", " ", "+", " ", "n"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"opMat", ",", " ", "tpLevels"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"opMat", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Flatten", " ", "@", " ", "opMat"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dim", "^", "n"}], ",", " ", 
           RowBox[{"dim", "^", "n"}]}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      "opMat"}]}], "\n", "\t", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7233544313725*^9, 3.723354634745536*^9}, {
  3.723354675877689*^9, 
  3.723354940875909*^9}},ExpressionUUID->"687fc839-9cd6-413f-ac70-\
84adb9756850"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "applyMatToState", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"applyMatToState", "[", 
   RowBox[{"mat_", ",", " ", "state_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "newState", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"newState", " ", "=", " ", "state"}], ";", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vecQ", "[", "state", "]"}], ",", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<StateVector\>\""}], "]"}], "]"}], " ", "=", 
        " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"mat", ".", 
          RowBox[{"state", "[", "\"\<StateVector\>\"", "]"}]}], "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"newState", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<DensityMatrix\>\""}], "]"}], "]"}], " ", "=",
         " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"mat", ".", 
          RowBox[{"state", "[", "\"\<DensityMatrix\>\"", "]"}], ".", 
          RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}], "]"}]}]}], "\n", 
      "\t\t", "]"}], ";", "\n", "\t", "newState"}]}], "\n", "\t", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.715997208192526*^9, 3.715997211679542*^9}, {
  3.715998382705456*^9, 3.715998393463386*^9}, {3.716003183012261*^9, 
  3.7160031856283627`*^9}, {3.71687236731427*^9, 3.716872380794446*^9}, {
  3.718113988199182*^9, 3.7181139926313047`*^9}, {3.7181142513255463`*^9, 
  3.718114251547942*^9}, {3.7226271017561693`*^9, 
  3.722627108424761*^9}},ExpressionUUID->"6db7244b-34f9-486c-8dad-\
b54183deec34"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Oracles", "Subchapter",
 CellChangeTimes->{{3.7229096859380617`*^9, 
  3.722909687281341*^9}},ExpressionUUID->"7ffdd0bd-3618-4271-a7e6-\
0c1627a99b44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "oracleQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"oracleQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<Oracle\>\""}], ",", " ", "True", ",", " ", "False"}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"oracleQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 
  3.722909532695805*^9}},ExpressionUUID->"473a961e-3f16-47f2-b187-\
dc49aa7b3323"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "booleanFunctionQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"booleanFunctionQ", "[", "qop_QuantumDiscreteOperation", "]"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<BooleanFunction\>\""}], ",", " ", "True", ",", " ", 
      "False"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"booleanFunctionQ", "[", "expr___", "]"}], " ", ":=", " ", 
   "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 3.722909532695805*^9}, {
  3.722909599724579*^9, 
  3.7229096132753763`*^9}},ExpressionUUID->"3068a4d7-783c-435e-9cc5-\
e488a25bdc67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "projectionQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"projectionQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<Projection\>\""}], ",", " ", "True", ",", " ", 
      "False"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"projectionQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 3.722909532695805*^9}, {
  3.722909599724579*^9, 
  3.72290963329429*^9}},ExpressionUUID->"f3902d1f-fe70-4adf-8b99-\
e88a97ccd427"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "povmQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"povmQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<POVM\>\""}], ",", " ", "True", ",", " ", "False"}], 
     "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"povmQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 3.722909532695805*^9}, {
  3.722909599724579*^9, 
  3.72290965266597*^9}},ExpressionUUID->"6b4d0919-4211-4135-b955-\
541f22639db4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "conditionalQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"conditionalQ", "[", "qop_QuantumDiscreteOperation", "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"qop", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "\"\<OperationType\>\""}], "]"}], "]"}], " ", 
       "===", " ", "\"\<Conditional\>\""}], ",", " ", "True", ",", " ", 
      "False"}], "]"}]}], ";"}], "\n", "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"conditionalQ", "[", "expr___", "]"}], " ", ":=", " ", "False"}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.722909443107853*^9, 3.722909532695805*^9}, {
  3.722909599724579*^9, 
  3.722909675169529*^9}},ExpressionUUID->"1d5f91b0-179c-4837-b4ee-\
8fdf6e348dfe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumCircuit", "Chapter",
 CellChangeTimes->{{3.722906908762578*^9, 3.7229069164918413`*^9}, {
  3.7231593924333143`*^9, 
  3.723159393265655*^9}},ExpressionUUID->"e67f5b11-3102-427f-b2de-\
8849ef0cbe77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantumCircuit", "]"}], ";"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", "Options", " ", "*)"}], "Code"], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "QuantumCircuit", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Simplify\>\"", " ", "\[Rule]", " ", "False"}], "}"}]}], 
    ";"}], "*)"}], "\n", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Extract", " ", "Properties", " ", "of", " ", "the", " ", "Circuit"}], 
    " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qcirc_QuantumCircuit", "[", 
     RowBox[{"prop_String", "?", "StringQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc", ",", " ", "prop"}], "]"}]}], ";"}], 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Transform", " ", "input", " ", "into", " ", "a", " ", "normal", " ", 
     "form"}], " ", "*)"}], "Code"], 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"From", " ", "Operations"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{"ops_", "?", "validDiscreteOperationListQ"}], "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"qcircFromOps", "[", "ops", "]"}]}], ";"}], "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"From", " ", "Circuit"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"QuantumCircuit", "[", "circ_QuantumCircuit", "]"}], " ", ":=", 
    " ", "\n", "\t", 
    RowBox[{"qcircFromCircs", "[", 
     RowBox[{"{", "circ", "}"}], "]"}]}], ";"}], 
  StyleBox["\n", "Code"], "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"From", " ", "Multiple", " ", "Circuits"}], " ", "*)"}], 
   "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"QuantumCircuit", "[", 
     RowBox[{"circs_", "?", "circListQ"}], "]"}], " ", ":=", " ", "\n", "\t", 
    
    RowBox[{"qcircFromCircs", "[", "circs", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"circ1_QuantumCircuit", " ", "+", " ", "circ2_QuantumCircuit"}], 
    " ", ":=", " ", "\n", "\t", 
    RowBox[{"qcircFromCircs", "[", 
     RowBox[{"{", 
      RowBox[{"circ1", ",", " ", "circ2"}], "}"}], "]"}]}], ";"}], "\n", "\t", 
  StyleBox["\n", "Code"], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Circuit", " ", "Exponentiation"}], " ", "*)"}], "Code"]}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{
     RowBox[{"circ_QuantumCircuit", "?", "validCircQ"}], " ", "^", 
     "n_Integer"}], " ", ":=", "\n", "\t", 
    RowBox[{"qcircFromCircs", "[", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"circ", ",", " ", "n"}], "]"}], "]"}]}], ";"}], 
  StyleBox["\n", "Code"], "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Symbolic", " ", "Replacement", " ", "in", " ", "Circuit"}], " ", 
    "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{"circ_QuantumCircuit", "?", "validCircQ"}], ",", " ", "subs_"}],
      "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"qcircReplaceAll", "[", 
     RowBox[{"circ", ",", " ", "subs"}], "]"}]}], ";"}], "\n", "\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Formatting", " ", "Front", " ", "End"}], " ", "*)"}], 
   "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuit", " ", "/:", " ", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"qcirc_QuantumCircuit", "?", "validCircQ"}], ",", " ", "fmt_"}],
      "]"}], ":=", "\n", "\t", 
    RowBox[{"circVisualize", "[", 
     RowBox[{"qcirc", ",", " ", "fmt"}], "]"}]}], ";"}], "\n", "\t\t", "\n", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Action", " ", "of", " ", "Quantum", " ", "Circuit", " ", "on", " ", 
     "Quantum", " ", "State"}], " ", "*)"}], "Code"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"qcirc", ":", 
      RowBox[{"qcirc_QuantumCircuit", "?", "validCircQ"}]}], ")"}], "[", 
    "qstate_QuantumDiscreteState", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"qcircAction", "[", 
    RowBox[{"qcirc", ",", " ", "qstate"}], "]"}]}], ";"}], "\n", 
 RowBox[{"\t"}]}], "Code",
 CellChangeTimes->{{3.722889232104254*^9, 3.722889252422862*^9}, {
   3.7228893793024387`*^9, 3.7228894152248297`*^9}, {3.722889513695092*^9, 
   3.722889550021627*^9}, {3.722889763896701*^9, 3.722889768271468*^9}, {
   3.722889811952976*^9, 3.722889868581768*^9}, {3.722890416051405*^9, 
   3.722890447689148*^9}, {3.72289047789433*^9, 3.7228904966313*^9}, {
   3.722890809150782*^9, 3.7228908922772923`*^9}, {3.722890924060218*^9, 
   3.722890924509006*^9}, {3.722895472776308*^9, 3.72289554352045*^9}, {
   3.7228956472923603`*^9, 3.7228956734826803`*^9}, {3.722902071313095*^9, 
   3.722902110047998*^9}, {3.722902171412797*^9, 3.722902175045579*^9}, {
   3.7229023505086117`*^9, 3.7229023715049477`*^9}, {3.7229029786694403`*^9, 
   3.722902985387323*^9}, {3.7229038160469933`*^9, 3.722903886711224*^9}, {
   3.722905952225604*^9, 3.72290595541282*^9}, {3.722906831351266*^9, 
   3.722906832397655*^9}, {3.722909211080229*^9, 3.7229092117569323`*^9}, {
   3.722909248177434*^9, 3.722909272197424*^9}, {3.7229093032657003`*^9, 
   3.72290937042008*^9}, {3.722912514140133*^9, 3.722912540010021*^9}, {
   3.722912878011689*^9, 3.722913031622037*^9}, {3.722913319127482*^9, 
   3.7229133220597563`*^9}, {3.722913412549697*^9, 3.722913417122493*^9}, {
   3.722913533568697*^9, 3.7229136154142723`*^9}, {3.722913660932171*^9, 
   3.7229136731292048`*^9}, {3.7229619955036583`*^9, 3.722962066464262*^9}, 
   3.7229621371894417`*^9, {3.722962180163389*^9, 3.722962201266389*^9}, {
   3.722962256023147*^9, 3.722962256651908*^9}, {3.7231526741490192`*^9, 
   3.7231526924079523`*^9}, {3.7231527808645144`*^9, 3.723152802200664*^9}, {
   3.723155510208706*^9, 3.7231555339858503`*^9}, {3.723158433479124*^9, 
   3.723158449444335*^9}, {3.723158490481998*^9, 3.723158535881775*^9}, {
   3.7231594738905897`*^9, 3.723159486911894*^9}, {3.7231604429802*^9, 
   3.7231604441113253`*^9}, {3.723163817517344*^9, 3.72316382121904*^9}, {
   3.7232596268571987`*^9, 3.7232596604122972`*^9}, {3.7232597187042217`*^9, 
   3.723259797399335*^9}, {3.723302655947044*^9, 3.7233026619596443`*^9}, {
   3.72330302235917*^9, 3.7233030997762737`*^9}, {3.723303131056159*^9, 
   3.723303246385524*^9}, {3.723303329441835*^9, 3.723303377117219*^9}, {
   3.723303443423603*^9, 3.723303459532847*^9}, {3.723303498469438*^9, 
   3.723303556863645*^9}, {3.7233037179456663`*^9, 3.7233038528803463`*^9}, {
   3.723303919407578*^9, 3.723303927221589*^9}, {3.723304287515903*^9, 
   3.7233042885157537`*^9}, {3.723304364023531*^9, 3.723304374387739*^9}, {
   3.72330444832817*^9, 3.723304520153267*^9}, {3.7233047614448233`*^9, 
   3.723304761796373*^9}, {3.723305526490144*^9, 3.7233055500288143`*^9}, {
   3.723305773167149*^9, 3.7233057820327883`*^9}, {3.7233058300600557`*^9, 
   3.723305836658842*^9}, {3.723305868938827*^9, 3.723305882097767*^9}, {
   3.723305938753969*^9, 3.7233059471342583`*^9}, {3.723305981377241*^9, 
   3.723306060688311*^9}, {3.723306373831367*^9, 3.723306458614183*^9}, {
   3.723347807902911*^9, 
   3.723347871435528*^9}},ExpressionUUID->"f8297f08-0db6-4728-908a-\
ad520522f199"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qcircFromOps", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qcircFromOps", "[", 
    RowBox[{"ops_", ",", " ", "simp_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "assoc", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<NumberOfOperations\>\"", "]"}], " ", "=", 
       " ", 
       RowBox[{"Length", " ", "@", " ", "ops"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Operations\>\"", "]"}], " ", "=", " ", 
       "ops"}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Wires\>\"", "]"}], " ", "=", " ", 
       RowBox[{"Sort", " ", "@", " ", 
        RowBox[{"Union", "[", 
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<Inputs\>\"", "]"}], "&"}], ",", " ", 
            "ops"}], "]"}]}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"QuantumCircuit", "[", "assoc", "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7233040654664297`*^9, 3.7233041876892014`*^9}, {
  3.7233045941049147`*^9, 3.723304701611512*^9}, {3.723304947379698*^9, 
  3.723304948865293*^9}},ExpressionUUID->"052d1be9-d19f-4900-91bb-\
4d37e0351c20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qcircFromCircs", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qcircFromCircs", "[", "circs_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "assoc", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"<|", 
        RowBox[{"{", "}"}], "|>"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<NumberOfOperations\>\"", "]"}], " ", "=", 
       " ", 
       RowBox[{"Total", " ", "@", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<NumberOfOperations\>\"", "]"}], "&"}], ",", 
          " ", "circs"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Operations\>\"", "]"}], " ", "=", " ", 
       RowBox[{"Flatten", " ", "@", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", "\"\<Operations\>\"", "]"}], "&"}], ",", " ", 
          "circs"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Wires\>\"", "]"}], " ", "=", " ", 
       RowBox[{"Sort", " ", "@", " ", 
        RowBox[{"Union", " ", "@", " ", 
         RowBox[{"Flatten", " ", "@", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\"\<Wires\>\"", "]"}], "&"}], ",", " ", 
            "circs"}], "]"}]}]}]}]}], ";", "\n", "\t", 
      RowBox[{"QuantumCircuit", "[", "assoc", "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723304525660749*^9, 3.7233045477897787`*^9}, {
  3.7233047263201027`*^9, 3.723304846610485*^9}, {3.7233055858273478`*^9, 
  3.723305703589396*^9}, {3.723305845066145*^9, 3.7233058564573307`*^9}, {
  3.723305890021188*^9, 3.723305890998705*^9}, {3.723347881610901*^9, 
  3.7233478824741707`*^9}},ExpressionUUID->"94f0f1e7-aeb6-40eb-be2c-\
523c71e795c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "validCircQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"validCircQ", "[", "circ_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "circ", "]"}], " ", "===", " ", 
        "QuantumCircuit"}], " ", "&&", "\n", "\t\t", 
       RowBox[{"AssociationQ", " ", "@", " ", 
        RowBox[{"circ", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\n", "\t\t", "True", ",", 
      " ", "False"}], "]"}]}], ";"}], " "}]}], "Code",
 CellChangeTimes->{{3.723304298896769*^9, 
  3.7233043512429657`*^9}},ExpressionUUID->"9ac0acc2-8b2d-4be6-83b7-\
afc4be220cb2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "circListQ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"circListQ", "[", "circs_", "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"AllTrue", "[", 
      RowBox[{"circs", ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", "#", "]"}], " ", "===", " ", "QuantumCircuit"}],
         " ", "&"}]}], "]"}], ",", "\n", "\t\t", "True", ",", " ", "False"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.723303281364086*^9, 
  3.723303325281351*^9}},ExpressionUUID->"a25f4e4b-72f7-4310-a806-\
42ead46606ad"],

Cell[CellGroupData[{

Cell["Circuit Properties", "Section",
 CellChangeTimes->{{3.7230799794872*^9, 3.723079988814993*^9}, {
  3.723080236894109*^9, 3.723080249301784*^9}, {3.7231505243953857`*^9, 
  3.723150535570315*^9}, {3.723152496744141*^9, 3.7231525009113073`*^9}, {
  3.7233049084589653`*^9, 
  3.723304909456901*^9}},ExpressionUUID->"1f565ab5-69c3-43f5-8ed1-\
1807892c1d3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "extractQcircProperty", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Qudit", " ", "Dimension"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc_", ",", " ", "\"\<QuditDimension\>\""}], "]"}], " ", ":=",
     "  ", 
    RowBox[{"qcirc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<QuditDimension\>\""}], "]"}], "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Circuit", " ", "Wires"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc_", ",", " ", "\"\<Wires\>\""}], "]"}], " ", ":=", "  ", 
    RowBox[{"qcirc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Wires\>\""}], "]"}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", "Operations", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc_", ",", " ", "\"\<Operations\>\""}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"qcirc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<Operations\>\""}], "]"}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Number", " ", "of", " ", "Operations"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"extractQcircProperty", "[", 
     RowBox[{"qcirc_", ",", " ", "\"\<NumberOfOperations\>\""}], "]"}], " ", ":=",
     " ", 
    RowBox[{"qcirc", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", " ", "\"\<NumberOfOperations\>\""}], "]"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extractQopProperty", "[", "expr___", "]"}], " ", ":=", " ", 
   "$Failed"}], ";"}]}], "Code",
 CellChangeTimes->{{3.715474461179277*^9, 3.715474467323559*^9}, {
   3.715474503907769*^9, 3.715474562839603*^9}, {3.7154746007984056`*^9, 
   3.715474636095838*^9}, {3.715477638247345*^9, 3.715477820550665*^9}, {
   3.715477857134968*^9, 3.715477879515625*^9}, {3.715478013394927*^9, 
   3.715478136008112*^9}, {3.716872174804722*^9, 3.716872205080433*^9}, {
   3.716902330327292*^9, 3.7169023432069063`*^9}, 3.717897414534379*^9, {
   3.720918541376977*^9, 3.720918614293005*^9}, {3.72091868440427*^9, 
   3.720918735400588*^9}, {3.7209187998025913`*^9, 3.720918810142644*^9}, {
   3.720918847001953*^9, 3.7209189334648943`*^9}, {3.720918966553145*^9, 
   3.72091900506852*^9}, {3.720919062987115*^9, 3.720919063343856*^9}, {
   3.720919597345209*^9, 3.720919670058551*^9}, {3.720919766809174*^9, 
   3.7209197942453012`*^9}, {3.7209198405288973`*^9, 3.720919892120283*^9}, {
   3.720919979998437*^9, 3.720920042071988*^9}, {3.7209200827040567`*^9, 
   3.7209200919444237`*^9}, {3.7209201404781723`*^9, 3.72092018279664*^9}, {
   3.72092021803139*^9, 3.7209202649256973`*^9}, {3.7209203207121077`*^9, 
   3.720920332156496*^9}, {3.7209205282042437`*^9, 3.720920570560512*^9}, {
   3.7209206452894287`*^9, 3.72092064733961*^9}, {3.7209213241035557`*^9, 
   3.7209213651781387`*^9}, {3.720921403343536*^9, 3.720921436808054*^9}, {
   3.720921549802326*^9, 3.720921689030733*^9}, {3.720921793953081*^9, 
   3.7209218303158073`*^9}, {3.7209218652369537`*^9, 3.720921965887124*^9}, {
   3.7209348312346163`*^9, 3.720934850327717*^9}, {3.720934880978115*^9, 
   3.720934928775963*^9}, {3.720936933927826*^9, 3.720936968355892*^9}, {
   3.7213264474632053`*^9, 3.7213264683954077`*^9}, {3.7213313346502132`*^9, 
   3.7213313362378387`*^9}, {3.7213313862075167`*^9, 3.721331389885343*^9}, {
   3.7213581055676327`*^9, 3.721358117844105*^9}, {3.721358148054504*^9, 
   3.721358148452504*^9}, {3.721358612028811*^9, 3.721358614910829*^9}, {
   3.721360474580282*^9, 3.721360482334405*^9}, {3.722525872405754*^9, 
   3.722525878127303*^9}, {3.722532466675021*^9, 3.7225325863307877`*^9}, {
   3.7225326470118628`*^9, 3.72253276835959*^9}, {3.722533862538329*^9, 
   3.722533866301803*^9}, {3.722789635780733*^9, 3.722789666560832*^9}, {
   3.722903953543886*^9, 3.722903974866537*^9}, {3.722904239517868*^9, 
   3.722904250542677*^9}, {3.722905415282283*^9, 3.722905417471039*^9}, {
   3.72290560568498*^9, 3.7229056079134903`*^9}, {3.7231532909690037`*^9, 
   3.723153322791918*^9}, {3.723153363109799*^9, 3.723153413727256*^9}, {
   3.723153446472082*^9, 3.723153510727324*^9}, {3.723155433572935*^9, 
   3.7231554344330397`*^9}, {3.723156936406713*^9, 3.7231569459324837`*^9}, {
   3.723304912011135*^9, 3.723305033005249*^9}, {3.7233522392148046`*^9, 
   3.723352257113269*^9}},ExpressionUUID->"6e01bccc-71e4-4e17-998f-\
c06ac8745ed8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic Replacement for Quantum Circuits", "Section",
 CellChangeTimes->{{3.7231582639531918`*^9, 3.72315828060702*^9}, {
  3.723306087713522*^9, 
  3.723306088686681*^9}},ExpressionUUID->"1a18309e-240e-450d-a7a0-\
53994c8cd6ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "qcircReplaceAll", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qcircReplaceAll", "[", 
    RowBox[{"circ_", ",", " ", "subs_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"assoc", ",", " ", "ops"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"assoc", " ", "=", " ", 
       RowBox[{"circ", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"ops", " ", "=", " ", 
       RowBox[{"circ", "[", "\"\<Operations\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"ops", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"operationReplaceAll", "[", 
           RowBox[{"#", ",", " ", "subs"}], "]"}], "&"}], ",", " ", "ops"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"assoc", "[", "\"\<Operations\>\"", "]"}], " ", "=", " ", 
       "ops"}], ";", "\n", "\t", 
      RowBox[{"QuantumCircuit", "[", "assoc", "]"}]}]}], "\n", "\t", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.723158553999506*^9, 3.7231585681994123`*^9}, 
   3.723158599941063*^9, {3.723158634335145*^9, 3.723158635052146*^9}, {
   3.723158750521819*^9, 3.7231587512334223`*^9}, {3.723158849132156*^9, 
   3.723158896431958*^9}, {3.7231589539688587`*^9, 3.723158994613111*^9}, {
   3.7231590335233917`*^9, 3.7231590815094433`*^9}, {3.7231591968987303`*^9, 
   3.7231592631559057`*^9}, {3.723306091481626*^9, 
   3.723306187814589*^9}},ExpressionUUID->"57982471-5f73-4900-8a13-\
6e38cf6310ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code",
 CellDingbat->None,
 CellChangeTimes->{
  3.711200134959556*^9},ExpressionUUID->"26d82410-5125-4fe2-874a-\
23501b1ab259"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.723304338604673*^9, 
  3.723304340826458*^9}},ExpressionUUID->"1a05cdf2-7651-46eb-a1a4-\
c8beb21cd9ad"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{689, 692},
WindowMargins->{{57, Automatic}, {Automatic, 6}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 92, "Title", "ExpressionUUID" -> \
"f4fb4979-eaf9-4fc4-8a08-e700c1f1650b"],
Cell[753, 27, 507, 11, 96, "Input", "ExpressionUUID" -> \
"9c4f3ea5-edc0-4597-a7a6-315a51a98e42"],
Cell[1263, 40, 2999, 44, 52, "Code", "ExpressionUUID" -> \
"f81b1b90-f2c2-4311-8abc-758992b79c70"],
Cell[CellGroupData[{
Cell[4287, 88, 159, 3, 64, "Section", "ExpressionUUID" -> \
"814976a6-7606-434c-a35d-c82abeb9cd33"],
Cell[4449, 93, 11237, 259, 1328, "Code", "ExpressionUUID" -> \
"ea37a549-9593-4726-8127-98ced9613055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15723, 357, 167, 3, 65, "Chapter", "ExpressionUUID" -> \
"07f79fb7-3952-492a-9609-16b5aedcfd5f"],
Cell[15893, 362, 336, 7, 52, "Code", "ExpressionUUID" -> \
"0f1e3b16-0eba-44d3-b293-04761fc51406"],
Cell[CellGroupData[{
Cell[16254, 373, 217, 4, 63, "Subchapter", "ExpressionUUID" -> \
"66b45100-e9b2-48a8-9253-40d8c6f5185f"],
Cell[16474, 379, 9554, 238, 1212, "Code", "ExpressionUUID" -> \
"ad445a4c-3ab1-4b22-8dae-24e59e7befe6"],
Cell[26031, 619, 2235, 54, 224, "Code", "ExpressionUUID" -> \
"011cdfa7-5ada-4a47-83dc-168dccb71954"],
Cell[28269, 675, 1720, 46, 243, "Code", "ExpressionUUID" -> \
"d45d6580-96b3-4f2e-bb2e-0cf387091bb0"],
Cell[29992, 723, 1351, 30, 148, "Code", "ExpressionUUID" -> \
"932d9231-8189-492b-af85-85126e51f382"],
Cell[31346, 755, 1897, 46, 281, "Code", "ExpressionUUID" -> \
"4cceffd2-4495-4106-9cd7-56650c81a9a6"],
Cell[33246, 803, 578, 15, 72, "Code", "ExpressionUUID" -> \
"63eecde6-06a6-45ee-9b47-677998bc3034"],
Cell[33827, 820, 645, 19, 110, "Code", "ExpressionUUID" -> \
"6abcbb2e-9c70-4f65-b1a3-7e202a83aadc"],
Cell[34475, 841, 565, 16, 110, "Code", "ExpressionUUID" -> \
"ee733edc-64cd-4985-ba48-190161cbd2d5"],
Cell[35043, 859, 540, 15, 91, "Code", "ExpressionUUID" -> \
"73c7ad27-5db5-407f-b4be-e4a99ccf0b7f"],
Cell[35586, 876, 801, 22, 91, "Code", "ExpressionUUID" -> \
"d934f8eb-7349-4989-9bc0-57a1cadad171"],
Cell[36390, 900, 2557, 54, 205, "Code", "ExpressionUUID" -> \
"8883c0d5-3ab1-4708-870a-151b1f887ee8"],
Cell[38950, 956, 513, 15, 91, "Code", "ExpressionUUID" -> \
"e8d680e4-2eb9-4ef3-8bc5-84dcdd2eff7a"],
Cell[39466, 973, 478, 12, 72, "Code", "ExpressionUUID" -> \
"36991201-ab2a-46ac-ab3d-e1167fe462fa"],
Cell[39947, 987, 929, 22, 110, "Code", "ExpressionUUID" -> \
"78cb3823-1c4c-4ba8-ba1f-076b1cd6bf66"],
Cell[40879, 1011, 941, 26, 205, "Code", "ExpressionUUID" -> \
"22c94e9b-a12b-43fd-bcbd-16b887abb005"],
Cell[41823, 1039, 482, 13, 72, "Code", "ExpressionUUID" -> \
"6f957f26-d7e0-4984-8aa6-8ca142266cd9"],
Cell[CellGroupData[{
Cell[42330, 1056, 234, 4, 64, "Section", "ExpressionUUID" -> \
"bc62035e-ce7f-4f1e-9916-0e5de3e7e1dd"],
Cell[42567, 1062, 2323, 55, 395, "Code", "ExpressionUUID" -> \
"5d5319ff-a7f0-47bc-8907-66d585259428"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44927, 1122, 170, 3, 64, "Section", "ExpressionUUID" -> \
"63edc90a-9a47-4057-8249-690d65cc6236"],
Cell[45100, 1127, 4651, 120, 585, "Code", "ExpressionUUID" -> \
"057d0452-19a3-4e88-b75d-57ad4578f5cb"],
Cell[CellGroupData[{
Cell[49776, 1251, 161, 3, 44, "Subsection", "ExpressionUUID" -> \
"373e8441-1134-48e4-8f21-f0b8d4cd3f91"],
Cell[49940, 1256, 1199, 35, 205, "Code", "ExpressionUUID" -> \
"7a8c8ae8-b584-4ff1-b45b-c36d00b7f8a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51176, 1296, 181, 3, 44, "Subsection", "ExpressionUUID" -> \
"93020568-2980-4f58-b1fd-5dc025c2754f"],
Cell[51360, 1301, 1443, 42, 167, "Code", "ExpressionUUID" -> \
"65152b7a-106b-43a3-b0df-9c8c0869c43c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52840, 1348, 180, 3, 44, "Subsection", "ExpressionUUID" -> \
"7b9be72f-22d8-4afe-9ffe-1b2dcec556e5"],
Cell[53023, 1353, 1924, 48, 262, "Code", "ExpressionUUID" -> \
"9c43ef53-3694-460f-89ff-741855ad1430"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54984, 1406, 219, 4, 44, "Subsection", "ExpressionUUID" -> \
"08295bc0-2817-4083-ae3c-89231313b942"],
Cell[55206, 1412, 2237, 62, 281, "Code", "ExpressionUUID" -> \
"e266771f-5556-450a-b030-f1d6e146c628"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57480, 1479, 164, 3, 44, "Subsection", "ExpressionUUID" -> \
"9465d979-f67f-4e3f-8710-88f5c08c3967"],
Cell[CellGroupData[{
Cell[57669, 1486, 219, 4, 35, "Subsubsection", "ExpressionUUID" -> \
"7b529701-aa09-485b-8f74-ba67f1c6501c"],
Cell[57891, 1492, 8300, 213, 1117, "Code", "ExpressionUUID" -> \
"e69c3b40-c768-4b73-8dd8-9c64ad2d1f3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66228, 1710, 170, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"f7c95162-ff97-4638-ae47-813b4f746bb0"],
Cell[66401, 1715, 7743, 201, 851, "Code", "ExpressionUUID" -> \
"3b406069-d877-49c1-8765-febd80195ebd"],
Cell[74147, 1918, 3953, 99, 547, "Code", "ExpressionUUID" -> \
"0e248abf-8cb2-4aef-a6cc-1cb70caf6286"],
Cell[78103, 2019, 2531, 65, 319, "Code", "ExpressionUUID" -> \
"54865413-de14-4136-83c9-460fcb36a1e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80683, 2090, 180, 3, 44, "Subsection", "ExpressionUUID" -> \
"40f409c0-a03d-4698-8769-5240d92f86d3"],
Cell[80866, 2095, 2552, 70, 300, "Code", "ExpressionUUID" -> \
"86e6fe81-f3f6-41d0-b48c-10ee391cf7f3"],
Cell[83421, 2167, 163, 3, 30, "Text", "ExpressionUUID" -> \
"5d6e6202-86cd-40e4-ad85-4548b317c7e6"],
Cell[83587, 2172, 611, 15, 110, "Code", "ExpressionUUID" -> \
"8a6b2c38-7754-4e26-897a-dce3272293aa"],
Cell[84201, 2189, 3833, 94, 452, "Code", "ExpressionUUID" -> \
"9bfd1de0-4b4a-477a-b84b-46526187eb33"],
Cell[88037, 2285, 4798, 117, 547, "Code", "ExpressionUUID" -> \
"11319be5-6e2d-4472-8d68-732df665995b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92884, 2408, 266, 4, 64, "Section", "ExpressionUUID" -> \
"4547b2b5-7eaf-45eb-83cb-edc6dc1bfa25"],
Cell[93153, 2414, 1031, 21, 205, "Code", "ExpressionUUID" -> \
"b1db4d37-7fa1-4979-84c4-0142feee3d90"],
Cell[94187, 2437, 1390, 36, 205, "Code", "ExpressionUUID" -> \
"7aa392e5-3b38-43f2-8b77-30254f6909da"],
Cell[95580, 2475, 2235, 59, 414, "Code", "ExpressionUUID" -> \
"49dd80a0-8147-4383-bba4-4c011e102979"],
Cell[97818, 2536, 2325, 55, 509, "Code", "ExpressionUUID" -> \
"86d76291-8a6b-48bf-805c-b734a9436231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100180, 2596, 214, 4, 64, "Section", "ExpressionUUID" -> \
"45bb442a-c340-41f2-9d3a-e87de4ca33c2"],
Cell[CellGroupData[{
Cell[100419, 2604, 184, 3, 44, "Subsection", "ExpressionUUID" -> \
"b3b12dea-41d8-4fd6-b79d-4c03ce15691a"],
Cell[100606, 2609, 7730, 174, 604, "Code", "ExpressionUUID" -> \
"acc38de0-b006-4e89-b64a-a8547aa6c66c"],
Cell[108339, 2785, 2026, 47, 281, "Code", "ExpressionUUID" -> \
"09ebd02b-d835-4102-996a-9e0f673cc83e"],
Cell[110368, 2834, 2112, 49, 281, "Code", "ExpressionUUID" -> \
"82985ee0-2b89-45c4-ba8b-bc4776aeb8e7"],
Cell[112483, 2885, 5023, 143, 756, "Code", "ExpressionUUID" -> \
"453a2e35-883e-427a-92a7-c609f02e3896"],
Cell[117509, 3030, 2715, 65, 300, "Code", "ExpressionUUID" -> \
"26c5a145-3efe-41fd-a9ad-4790e4882272"],
Cell[120227, 3097, 409, 11, 91, "Code", "ExpressionUUID" -> \
"8d7933d6-f12c-4abf-9d46-5b3b8b8ee5f3"],
Cell[120639, 3110, 3554, 94, 385, "Code", "ExpressionUUID" -> \
"c04135d9-d852-4a1d-982b-0c227f53d174"],
Cell[124196, 3206, 5298, 160, 661, "Code", "ExpressionUUID" -> \
"daa14214-3d54-42c2-adbf-4ab4610aac1a"],
Cell[CellGroupData[{
Cell[129519, 3370, 173, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"94409939-885b-411a-9517-b0822c898275"],
Cell[129695, 3375, 936, 22, 91, "Code", "ExpressionUUID" -> \
"69a86aa4-7ddc-481a-907e-ce0d2d48b1ec"],
Cell[130634, 3399, 842, 22, 129, "Code", "ExpressionUUID" -> \
"cc8355fe-0971-48f3-86f2-ff0eeb5a37f8"],
Cell[131479, 3423, 1125, 30, 167, "Code", "ExpressionUUID" -> \
"a43b70d2-d258-4a09-a4b2-78d0d6e31a91"],
Cell[132607, 3455, 3714, 109, 566, "Code", "ExpressionUUID" -> \
"27024618-a398-4224-94b9-3dcdac2e3dd3"],
Cell[136324, 3566, 4569, 135, 604, "Code", "ExpressionUUID" -> \
"168ab1dc-33d2-4441-a71f-fee78b0717f1"],
Cell[140896, 3703, 1507, 39, 300, "Code", "ExpressionUUID" -> \
"5a90c9dd-04a1-40f8-b4a1-087bd1e0efa0"],
Cell[142406, 3744, 915, 21, 167, "Code", "ExpressionUUID" -> \
"bab9dd51-c2e8-4338-8587-348b49cd41a6"],
Cell[143324, 3767, 886, 25, 186, "Code", "ExpressionUUID" -> \
"4e675a3f-e323-413b-ac89-097b2480f455"],
Cell[144213, 3794, 6353, 171, 794, "Code", "ExpressionUUID" -> \
"c25316b9-9a4a-4071-88fa-91ca4f0c7237"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150615, 3971, 160, 3, 44, "Subsection", "ExpressionUUID" -> \
"fdd42804-4ef7-455b-a7a9-dbf6a13827ee"],
Cell[150778, 3976, 2784, 69, 414, "Code", "ExpressionUUID" -> \
"ef7fa671-b051-4def-965e-43b480b172b0"],
Cell[153565, 4047, 3135, 77, 414, "Code", "ExpressionUUID" -> \
"e3337d5a-8207-4217-a7b3-a05383116f6e"],
Cell[CellGroupData[{
Cell[156725, 4128, 168, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"9f25dd48-486e-4ab1-a334-516748e3d35b"],
Cell[156896, 4133, 1893, 50, 243, "Code", "ExpressionUUID" -> \
"2bc3fdc2-03e4-45e6-9001-853503414753"],
Cell[158792, 4185, 749, 22, 148, "Code", "ExpressionUUID" -> \
"439600b5-3455-4cef-8641-2e2aa7118f16"],
Cell[159544, 4209, 1369, 36, 186, "Code", "ExpressionUUID" -> \
"ade09675-4787-4884-8fab-93436e76b1f4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160962, 4251, 162, 3, 44, "Subsection", "ExpressionUUID" -> \
"d1740ba4-1976-4fbc-83be-7f1e1f46d361"],
Cell[161127, 4256, 2277, 63, 319, "Code", "ExpressionUUID" -> \
"df0961a8-a363-4dd8-b1bc-4a0625a6060d"],
Cell[163407, 4321, 1372, 33, 224, "Code", "ExpressionUUID" -> \
"3242faa8-4d62-4f79-b3c5-7d0cec614a34"],
Cell[164782, 4356, 2854, 62, 338, "Code", "ExpressionUUID" -> \
"a3cd7c79-ceda-4d62-9ced-3b23b3b89998"],
Cell[167639, 4420, 3803, 87, 452, "Code", "ExpressionUUID" -> \
"151c18ce-bd42-499d-a190-ffdf411fb5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171479, 4512, 186, 3, 44, "Subsection", "ExpressionUUID" -> \
"cda919ce-7a20-4864-a401-e670b955170f"],
Cell[171668, 4517, 1212, 32, 148, "Code", "ExpressionUUID" -> \
"61613e25-0229-434b-83e5-3514138220b8"],
Cell[172883, 4551, 2719, 64, 395, "Code", "ExpressionUUID" -> \
"9676732e-00c6-41b9-b01e-40793ea6680d"],
Cell[175605, 4617, 5343, 134, 604, "Code", "ExpressionUUID" -> \
"2b440446-8e9f-40b8-8be8-34e857d75f57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180985, 4756, 171, 3, 44, "Subsection", "ExpressionUUID" -> \
"717ad115-8cfa-4a5f-9554-abe94bbcbf1f"],
Cell[181159, 4761, 3065, 79, 452, "Code", "ExpressionUUID" -> \
"9b4d73a3-b5a8-4d0a-a88f-a7fc4ccc078e"],
Cell[184227, 4842, 1340, 35, 205, "Code", "ExpressionUUID" -> \
"48e44026-e1d7-422f-8cd6-c8a0dc20f73c"],
Cell[185570, 4879, 1798, 51, 205, "Code", "ExpressionUUID" -> \
"7dae0844-92fe-4bb9-a279-983d17633845"],
Cell[187371, 4932, 6016, 158, 737, "Code", "ExpressionUUID" -> \
"04cb6428-b8b1-4f0f-a1eb-efffcbc1ac5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193424, 5095, 174, 3, 44, "Subsection", "ExpressionUUID" -> \
"923f82f5-d88a-4d06-8167-6ef72a74db11"],
Cell[193601, 5100, 4333, 110, 623, "Code", "ExpressionUUID" -> \
"43c7dd5b-a52e-4d2c-8e22-8ddd1d3d706b"],
Cell[CellGroupData[{
Cell[197959, 5214, 174, 3, 35, "Subsubsection", "ExpressionUUID" -> \
"baaea365-774c-4f8f-acae-046761cf5335"],
Cell[198136, 5219, 1137, 33, 205, "Code", "ExpressionUUID" -> \
"4117e528-9c2b-4365-b7c5-ba6537168979"],
Cell[199276, 5254, 3827, 97, 395, "Code", "ExpressionUUID" -> \
"8f6659e9-e389-41ae-b5ee-c9ababcda2d4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203188, 5360, 171, 3, 65, "Chapter", "ExpressionUUID" -> \
"6a82327c-479c-499e-839c-1ee547965aaf"],
Cell[203362, 5365, 10790, 267, 984, "Code", "ExpressionUUID" -> \
"3a0399e7-60cd-4a9f-93c2-cfe707e522bc"],
Cell[214155, 5634, 1908, 40, 224, "Code", "ExpressionUUID" -> \
"49b1cc8b-e8df-4693-8cc1-9e347d9ead1d"],
Cell[216066, 5676, 606, 16, 91, "Code", "ExpressionUUID" -> \
"fdea165c-e3be-4649-9fae-e5912cd37efd"],
Cell[216675, 5694, 3384, 94, 224, "Code", "ExpressionUUID" -> \
"e911966e-4628-4f70-a176-3cd0ba6202aa"],
Cell[220062, 5790, 1397, 35, 281, "Code", "ExpressionUUID" -> \
"25c3433b-5f18-4f37-90fd-a16684839534"],
Cell[221462, 5827, 1463, 33, 148, "Code", "ExpressionUUID" -> \
"cc09d4f5-6551-4d7d-af49-16021da1eac3"],
Cell[222928, 5862, 2197, 53, 300, "Code", "ExpressionUUID" -> \
"e30d5bda-d041-4de2-af83-5dda74a79a06"],
Cell[CellGroupData[{
Cell[225150, 5919, 189, 3, 64, "Section", "ExpressionUUID" -> \
"67dafff0-38bb-4cbe-b823-d9b4b5ebf50d"],
Cell[225342, 5924, 2310, 53, 319, "Code", "ExpressionUUID" -> \
"d57b9804-5917-4a52-93e0-02218c9bee62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227689, 5982, 311, 5, 64, "Section", "ExpressionUUID" -> \
"084fac58-3ab0-490e-80bd-b7461ded4ce9"],
Cell[228003, 5989, 5859, 128, 566, "Code", "ExpressionUUID" -> \
"6e8b0c09-eba1-4b53-a77d-3ffcf58459e1"],
Cell[233865, 6119, 1783, 37, 224, "Code", "ExpressionUUID" -> \
"6b54fecc-4f24-44e2-87ac-bb7fe7c49e2b"],
Cell[235651, 6158, 1784, 36, 224, "Code", "ExpressionUUID" -> \
"5328fcfe-7c81-4445-be90-ac2ba5b4bcdf"],
Cell[237438, 6196, 1909, 39, 224, "Code", "ExpressionUUID" -> \
"e6df062d-7312-41bf-a518-2cfaf1d47756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239384, 6240, 321, 5, 64, "Section", "ExpressionUUID" -> \
"87fd3a8e-df97-4ab4-8a87-263719a8cb8b"],
Cell[239708, 6247, 1355, 25, 205, "Code", "ExpressionUUID" -> \
"578c150b-bf45-427f-abe0-2541329fef20"],
Cell[241066, 6274, 3534, 84, 585, "Code", "ExpressionUUID" -> \
"27f60c04-0335-49e3-8977-0dd62cca03d0"],
Cell[244603, 6360, 2343, 43, 243, "Code", "ExpressionUUID" -> \
"ca761b4c-778d-4c89-a49b-2f4b7f763256"],
Cell[246949, 6405, 2295, 44, 243, "Code", "ExpressionUUID" -> \
"f7a5f147-3a27-401e-afc0-7c1991808fb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249281, 6454, 168, 3, 63, "Subchapter", "ExpressionUUID" -> \
"8e699d68-cdf1-49af-9ba8-2f6d91d93154"],
Cell[249452, 6459, 7661, 226, 376, "Code", "ExpressionUUID" -> \
"e1dfbc77-5f44-4fef-9ba2-02e52887d957"],
Cell[257116, 6687, 18985, 469, 851, "Code", "ExpressionUUID" -> \
"71a0138b-652b-4347-bc58-6fb015029fe2"],
Cell[276104, 7158, 3033, 69, 566, "Code", "ExpressionUUID" -> \
"c506ff60-7f5b-44e5-996d-8fb486f7370a"],
Cell[279140, 7229, 1611, 40, 243, "Code", "ExpressionUUID" -> \
"6a8be5a6-399c-4001-bf03-919df3bca208"],
Cell[280754, 7271, 3649, 80, 452, "Code", "ExpressionUUID" -> \
"e8fcfecd-15cc-44d5-9868-d640e0c208c8"],
Cell[284406, 7353, 2272, 51, 357, "Code", "ExpressionUUID" -> \
"b21c559a-00cf-4225-95b3-3ee366f25649"],
Cell[286681, 7406, 2028, 47, 300, "Code", "ExpressionUUID" -> \
"9476796d-bd55-4420-9c06-8f181239ae25"],
Cell[288712, 7455, 2147, 50, 209, "Code", "ExpressionUUID" -> \
"59978eec-b808-4145-8df3-c9117b120c27"],
Cell[290862, 7507, 1523, 37, 262, "Code", "ExpressionUUID" -> \
"461a90f9-da58-42ec-8e26-714fba76d2d8"],
Cell[292388, 7546, 5056, 119, 379, "Code", "ExpressionUUID" -> \
"907e36b5-134d-422d-8bc4-35ee1807b612"],
Cell[297447, 7667, 2389, 64, 322, "Code", "ExpressionUUID" -> \
"b1750290-c3f1-4e4c-917a-4fa62697fec4"],
Cell[299839, 7733, 1613, 39, 262, "Code", "ExpressionUUID" -> \
"761f5e66-bbd0-48f8-a9a5-2dbb750a9598"],
Cell[301455, 7774, 5360, 129, 358, "Code", "ExpressionUUID" -> \
"d1785777-0c82-4c34-89b7-9f6a6c7c0243"],
Cell[306818, 7905, 4997, 117, 528, "Code", "ExpressionUUID" -> \
"8c4e81b4-7463-4180-8ff1-e5436575a68e"],
Cell[311818, 8024, 2954, 67, 300, "Code", "ExpressionUUID" -> \
"89c10a6e-721b-4781-9686-76f7d440c8cd"],
Cell[314775, 8093, 10026, 265, 854, "Code", "ExpressionUUID" -> \
"c1ec8ac4-c398-495a-a104-f481f05864cc"],
Cell[324804, 8360, 1262, 32, 167, "Code", "ExpressionUUID" -> \
"e2ea4822-dd09-4018-97fc-9d11a61fb9ee"],
Cell[326069, 8394, 2617, 60, 395, "Code", "ExpressionUUID" -> \
"5da01198-036a-4bab-8ba8-7d33fa2236cb"],
Cell[328689, 8456, 5669, 151, 681, "Code", "ExpressionUUID" -> \
"bcb4fed4-35de-4f60-8553-d9409b2bfda6"],
Cell[334361, 8609, 780, 23, 148, "Code", "ExpressionUUID" -> \
"01efdccc-8e45-45ca-a013-bf3b5709e7fb"],
Cell[335144, 8634, 2093, 53, 300, "Code", "ExpressionUUID" -> \
"d0fa3572-9672-4724-9eb7-6568ccf8f706"],
Cell[337240, 8689, 6114, 144, 537, "Code", "ExpressionUUID" -> \
"024f0bde-e0ec-408a-85f2-e6d5ee3b1a85"],
Cell[343357, 8835, 4963, 131, 460, "Code", "ExpressionUUID" -> \
"8b3ebdaa-b3db-4f18-8d72-1f7aaadcf8e9"],
Cell[348323, 8968, 5437, 146, 497, "Code", "ExpressionUUID" -> \
"fec70d15-80e3-4bac-9761-637194efb037"],
Cell[353763, 9116, 4924, 122, 345, "Code", "ExpressionUUID" -> \
"71b56de0-7217-4aaf-8fc7-0f0ba42bd9ca"],
Cell[358690, 9240, 3649, 86, 528, "Code", "ExpressionUUID" -> \
"0a81fc09-6a1f-4e79-b25f-4fc908bd9874"],
Cell[362342, 9328, 1844, 48, 224, "Code", "ExpressionUUID" -> \
"f4a8a9f4-95df-415f-aa7b-8bd33cc8b7ef"],
Cell[364189, 9378, 3363, 79, 414, "Code", "ExpressionUUID" -> \
"7338a5c0-e9c9-47f0-a94a-fbb75791e693"],
Cell[367555, 9459, 1744, 41, 243, "Code", "ExpressionUUID" -> \
"132955d1-65dc-40ed-90ae-ac12e5270805"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369336, 9505, 157, 3, 63, "Subchapter", "ExpressionUUID" -> \
"b02c70b8-684a-49b9-868b-7cf4ddd7821b"],
Cell[369496, 9510, 776, 23, 148, "Code", "ExpressionUUID" -> \
"87cb2c62-6e84-4fa9-9793-b5eaeb7b35ef"],
Cell[370275, 9535, 865, 24, 148, "Code", "ExpressionUUID" -> \
"a2ebfc42-ebee-44c8-bc35-aebc82f3ad2c"],
Cell[371143, 9561, 841, 24, 148, "Code", "ExpressionUUID" -> \
"4a150631-f802-4ce7-9399-d25d3536f7ea"],
Cell[371987, 9587, 816, 24, 148, "Code", "ExpressionUUID" -> \
"6fcd5aad-95d2-48ec-8c30-85bf129fa8e1"],
Cell[372806, 9613, 846, 24, 148, "Code", "ExpressionUUID" -> \
"2300873f-503f-4d7b-9164-417b8f3201fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373701, 9643, 212, 4, 65, "Chapter", "ExpressionUUID" -> \
"a00031b1-31c8-445d-ab72-45bab3354240"],
Cell[373916, 9649, 7595, 170, 813, "Code", "ExpressionUUID" -> \
"318d398c-1e90-498d-aad4-c5148606cadb"],
Cell[381514, 9821, 1484, 37, 224, "Code", "ExpressionUUID" -> \
"7fb9ce81-af37-4cf4-a9ba-9dce811ffcb1"],
Cell[383001, 9860, 1981, 48, 224, "Code", "ExpressionUUID" -> \
"dabe5b40-fc01-4a72-b7b0-08bfba4d2a8b"],
Cell[384985, 9910, 735, 20, 148, "Code", "ExpressionUUID" -> \
"0a7d9f5b-482c-4a49-a380-8a84184250a1"],
Cell[385723, 9932, 645, 18, 129, "Code", "ExpressionUUID" -> \
"241ebbd0-6bb5-44df-ad9e-fb1a5e26deec"],
Cell[CellGroupData[{
Cell[386393, 9954, 360, 6, 64, "Section", "ExpressionUUID" -> \
"281e66d6-3e20-4fbc-b793-55aea873bd39"],
Cell[386756, 9962, 4601, 92, 319, "Code", "ExpressionUUID" -> \
"9482d292-0411-4ad5-8573-f8989b2f67ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391394, 10059, 236, 4, 64, "Section", "ExpressionUUID" -> \
"f57d23a0-77fa-4e92-8664-fdebc3c4b371"],
Cell[391633, 10065, 1611, 37, 224, "Code", "ExpressionUUID" -> \
"9d960d51-6dd3-4bc9-9167-b16539fc0f02"],
Cell[393247, 10104, 252, 8, 72, "Code", "ExpressionUUID" -> \
"d6d3fdc3-eb53-4c3d-8f58-d39f917e44bb"],
Cell[393502, 10114, 152, 3, 32, "Input", "ExpressionUUID" -> \
"ed49aba6-499d-41f2-831d-f2626e2e405e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

